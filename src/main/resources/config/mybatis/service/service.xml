<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hxos.service">

	<select id="callVirtualInstanceChargeProc" parameterType="java.util.HashMap" statementType="CALLABLE">
		<![CDATA[ call produce_vir_instance_charge()]]>
	</select>
	
	<!-- total count -->
	<select id="selectReportWorkOrder" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
		select a.status,count(*) countSize
		from OSS_Process a,
			process_instance b,
			(select distinct m.refInstance  
				from process_instance_task m,
					OSS_SYSTEM_User_Role n,
                    OSS_SYSTEM_User k 
				where (m.checkUser is null
					and n.roleId = m.refRole
                    and n.userId = k.id
					and concat(',',#{loginId},',') like concat('%,',k.loginId,',%')) 
                    or (m.checkUser is not null 
					and concat(',',#{loginId},',') like concat('%,',m.checkUser,',%'))) d
		where b.id = a.identity 
			and b.id = d.refInstance
		]]>
			<if test="BEGIN_CREATE_TS != null">
				<![CDATA[ and a.createTs >= #{BEGIN_CREATE_TS}]]>
			</if>
			<if test="END_CREATE_TS != null">
				<![CDATA[ and a.createTs <= #{END_CREATE_TS}]]>
			</if>
			<if test="DEAL_STATUS_CODE != null">
				<![CDATA[ and concat(',',#{DEAL_STATUS_CODE},',') like concat('%,',a.DEAL_STATUS_CODE,',%')]]>
			</if>
		<![CDATA[
        group by a.status
		]]>
	</select>
	
	<select id="selectReportPhysicalDevice" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
		SELECT a.poolType,a.type,count(b.id) nodeCount
		FROM ResourcePool a
			left join ResourceNode b on a.id = b.poolId
		where poolType in ('COMPUTE','STORAGE')
		group by a.poolType,a.type
		]]>
	</select>
	
	<!-- <select id="selectReportInstance" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
		select b.virtualizationType,count(a.uuid) instanceCount
		from OPENSTACK_Image b
		    left join OPENSTACK_Instance a on b.uuid = a.imageRef
		where b.virtualizationType not in ('IRONIC-KERNEL','IRONIC-RAMDISK','IRONIC-DEPLOY-KERNEL','IRONIC-DEPLOY-RAMDISK')
		group by b.virtualizationType
		having b.virtualizationType is not null
		]]>
	</select>
	<select id="selectReportInstance" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
		select b.name virtualizationType,count(a.id) instanceCount
		from resourcenode a,
			resourcepool b
		where a.poolid = b.id
    	group by b.name
		]]>
	</select>  -->
	
	<select id="selectReportInstance" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
		select b.poolType,b.type,'PHYSICAL' subType,count(*) countSize
		from rn_ext_physical a,
		     resourcepool b
		where a.poolId = b.id
			  and a.nodeid in (select id from rn_base where rnstatus = 'NORMAL')
		      and b.poolType in ('COMPUTE','BARE')
		]]>
	     <if test="countSize == 100 and loginId != null">
			and a.poolId in (select a.poolId 
							from resourcepooldepartment a,
								oss_system_user b,
								oss_system_department c 
							where concat(',',#{loginId},',') like concat('%,',loginId,',%') 
								and a.groupId = c.refGroupId
								and b.department = c.id)
		</if>
		<if test="countSize == 10 and loginId != null">
			and a.poolId in (select poolId from resourcepoolusers where concat(',',#{loginId},',') like concat('%,',loginId,',%') )
		</if>
		<![CDATA[
		group by b.poolType,b.type
		UNION ALL
		select b.poolType,b.type,'VIRTUAL',count(*)
		from rn_ext_vir_instance a,
		     resourcepool b
		where a.region = b.regionName
			  and a.nodeid in (select id from rn_base where rnstatus = 'NORMAL')
		      and b.poolType = 'COMPUTE'
		]]>
		<if test="countSize == 100 and loginId != null">
			and a.region in (select t.regionName 
							from resourcepool t,
								resourcepooldepartment a,
								oss_system_user b,
								oss_system_department c 
							where concat(',',#{loginId},',') like concat('%,',loginId,',%') 
								and a.groupId = c.refGroupId
								and b.department = c.id
								and a.poolId = t.id
								and t.regionName is not null)
		</if>
		<if test="countSize == 10 and loginId != null">
			and a.region in (select t.regionName from resourcepool t,resourcepoolusers k where t.id = k.poolId and t.regionName is not null and concat(',',#{loginId},',') like concat('%,',loginId,',%'))
		</if>
		<![CDATA[	
		group by b.poolType,b.type
		]]>
	</select>

	<select id="selectReportBusinessInstance" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
		select b.name,count(a.id) instanceCount
		from resourcenode a,
			resourcepool b
		where a.poolid = b.id
    	group by b.name
		]]>
	</select>
	
	<select id="selectReportComputeResourcePoolUtilization" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
		select a.type,
			sum(ifnull(d.vcpus,0))/sum(c.vcpus)*100 cpuRate,sum(ifnull(d.memory,0))/sum(c.memory)*100 memoryRate, sum(ifnull(d.disk,0))/sum(c.disk)*100 diskRate
		from ResourcePool a,
			ResourceNode b
               left join (select nodeId,sum(vcpus) vcpus,sum(memory) memory,sum(localDisk) disk from rn_ext_compute group by nodeId) c on b.id = c.nodeId
               left join (select parentNodeId,sum(vcpus) vcpus,sum(memory) memory,sum(root_gb) + sum(ephemeral_gb) disk from rn_ext_vir_instance group by parentNodeId) d on d.parentNodeId = b.id
		where a.id = b.poolId
			and a.poolType = 'COMPUTE'
        group by a.type
		]]>
	</select>
	
	<select id="selectReportStorageResourcePoolUtilization" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
		select a.type,
			sum(ifnull(d.size,0))/sum(c.size)*100 volumeRate
		from ResourcePool a,
			ResourceNode b
               left join (select nodeId,sum(if(sizeUnit = 'TB',size*1024,size)) size from rn_ext_vir_storage group by nodeId) c on b.id = c.nodeId
               left join (select hostName,sum(size) size from OPENSTACK_Volumes group by hostName) d on d.hostName = b.hostName
		where a.id = b.poolId
			and a.poolType = 'STORAGE'
        group by a.type
		]]>
	</select>
	
	<select id="selectReportDataCenterResource" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select b.name,count(a.id) instanceCount
			from resourcedatacenter b
				left join resourcenode a on a.datacenterid = b.id
		]]>
			<if test="type == 'physical'">
				and a.poolid in (select id from resourcepool k where k.poolType = 'COMPUTE' and type = 'TPMOSD' )
			</if>
			<if test="type == 'hypervisor'">
				and a.poolid in (select id from resourcepool k where k.poolType = 'COMPUTE' and type in ('VMWARE','KVM') ) 
			</if>
			<if test="type == 'bare'">
			 	and a.poolid in (select id from resourcepool k where k.poolType = 'BARE') 
			</if>
		<![CDATA[ 
			group by b.name
		]]>
	</select>
	
	<select id="selectReportResourcePoolUsage" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[ 
				select n.id poolId,n.name poolName,n.regionName,
						m.type regionType,
						sum(ifnull(k.memory,0)) memoryTotal,
						sum(ifnull(k.vcpus,0)) vcpusTotal,
						sum(ifnull(k.localDisk,0)) diskTotal,
						sum(ifnull(k.vcpus_used,0)) vcpusUsed,
						sum(ifnull(k.ram_used,0)) memoryUsed,
						sum(ifnull(k.local_disk_used,0)) diskUsed,
						sum(ifnull(if(m.`type`='VMWARE',y.subCount,k.subCount),0)) hostCount
				from rp_vir_host_aggregates t
				  	join oss_engine_regions m on m.region_name = t.region
				  	join resourcepool n on n.regionName = m.region_name
					left join(select a.host_aggregate,
										b.poolId,
										c.regionName,
										sum(d.memory) memory,
										sum(d.vcpus) vcpus,
										sum(d.localDisk) localDisk,
										sum(a.vcpus_used) vcpus_used,
										sum(a.ram_used) ram_used,
										sum(a.local_disk_used) local_disk_used,
										count(*) subCount
								from rn_ext_vir_hypervisor a,
										rn_ext_physical b,
										resourcepool c,
										rn_ext_compute d,
										rn_base f
								where a.nodeId = b.nodeId
									and c.id = b.poolId
									and d.nodeId = a.nodeId
									and a.nodeid = f.id
								group by a.host_aggregate,b.poolId,c.regionName ) k on  t.id = k.host_aggregate and t.region = k.regionName
					left join (select a.poolid,
									count(*) subCount,
									sum(b.memory) memory,
									sum(b.vcpus) vcpus,
									sum(b.localDisk) localDisk
							from rn_ext_physical a,
								rn_ext_compute b,
								rn_base c
							where a.nodeid = b.nodeid
								and a.nodeid = c.id
								and c.rnstatus = 'NORMAL'
								group by a.poolid) y on y.poolid = n.id
				where t.deleted = 0
				group by poolId,poolName,regionType
		]]>
	</select>
	
	<select id="selectReportResourceLifeCycleCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[ 
				select 
				]]>
					<foreach collection="array" index="index" item="item" open=" " separator="," close=",">
			   			t${index}.value as '${item}'
			  		</foreach>
			  	<![CDATA[ 
						count(*) countValue
				from rn_base a 
					join rn_ext_vir_instance b on a.id = b.nodeId 
					]]>
					<foreach collection="array" index="index" item="item" open=" " separator="" close="">
					  join (select n.*
						from oss_system_tag m
							  join oss_system_tag_resource n on m.id = n.tagid
						where m.tagType = 'PROPERTY'
								and m.name = #{item}) t${index} on a.id = t${index}.resourceid 
					</foreach>
				  	<![CDATA[
				where a.rnStatus = 'NORMAL'
						and unix_timestamp(ADDDATE(b.createTime,interval b.expireDay day)) < unix_timestamp()
						and b.expireday > -1 
						and b.createTime is not null 
						]]>
					  	<if test="loginId != null">
							and (
								a.id in (select resourceId from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_INSTANCE')  or 
								0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_INSTANCE') or 
								(0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_INSTANCE') and false)
							)
						</if>
						<if test="countSize == 100 and loginId != null">
							and b.region in (select t.regionName 
											from resourcepool t,
												resourcepooldepartment a,
												oss_system_user b,
												oss_system_department c 
											where concat(',',#{loginId},',') like concat('%,',loginId,',%')
												and a.groupId = c.refGroupId
												and b.department = c.id
												and a.poolId = t.id
												and t.regionName is not null) 
							and b.projectId in (select d.projectId from v_department_projectId d where concat(',',#{loginId},',') like concat('%,',d.loginId,',%'))
						</if>
						<if test="countSize == 10 and loginId != null">
							and b.region in (select t.regionName from resourcepool t,resourcepoolusers k where t.id = k.poolId and t.regionName is not null and concat(',',#{loginId},',') like concat('%,',loginId,',%'))
							and b.projectId in (select d.projectId from v_department_projectId d where concat(',',#{loginId},',') like concat('%,',d.loginId,',%'))
						</if>
		  			<![CDATA[
				group by 
				]]>
				<foreach collection="array" index="index" item="item" open=" " separator="," close="">
		   			t${index}.value
		  		</foreach>
	</select>
	<select id="selectReportResourceLifeCycleList" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select 
				a.id,a.type,a.name,ifnull(b.host,'') hostName,
				b.*,
				if(ADDDATE(b.createTime,interval b.expireDay day) < now(), -2 , unix_timestamp(ADDDATE(b.createTime,interval b.expireDay day)) - unix_timestamp() ) expireTime,
				g.cpuCharge,g.memoryCharge,g.localDiskCharge,g.volumeCharge,g.chargeTime,
				e.agentId,e.powerStatus,f.osIpAddress,f.osUserName,f.osPassword,
				ifnull(e.zabbixAgentStatus,0) zabbixAgentStatus,
				ifnull(e.saltAgentStatus,0) saltAgentStatus,
				ifnull(e.connectStatus,0) connectStatus, 
				ifnull(h.hostId,-1) monitorHostId,
				(select i.name from rn_base i where i.type='VIR_FLAVOR' and i.id = c.nodeId) flavorName,
				(select i.name from rn_base i where i.type='VIR_IMAGE' and i.id=d.nodeId) imageName,
				(select max(interface) from rn_ext_interface m where m.nodeId = a.id and m.isShow = 1) defaultInterface 
			from rn_base a 
				join rn_ext_vir_instance b on a.id = b.nodeId 
				join rn_ext_systeminfo e on a.id = e.nodeId 
			]]>
				<foreach collection="filter" index="index" item="item" open=" " separator="" close="">
				  join (select n.*
					from oss_system_tag m
						  join oss_system_tag_resource n on m.id = n.tagid
					where m.tagType = 'PROPERTY'
							and m.name = #{item.name}
							and n.value = #{item.value}) t${index} on a.id = t${index}.resourceid 
				</foreach>
			  <![CDATA[
				left join rn_ext_osinfo f on a.id = f.nodeId 
				left join rn_ext_vir_flavor c on b.flavorRef = c.uuid 
				left join rn_ext_vir_image d on b.imageRef = d.uuid 
				left join monitornodehost h on a.id = h.nodeId 
				left join rn_ext_vir_instance_charge g on a.id = g.nodeId 
			where a.rnStatus = 'NORMAL' 
					and unix_timestamp(ADDDATE(b.createTime,interval b.expireDay day)) < unix_timestamp()
					and b.expireday > -1 
					and b.createTime is not null
			]]>
			<if test="loginId != null">
				and (
					a.id in (select resourceId from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_INSTANCE')  or 
					0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_INSTANCE') or 
					(0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_INSTANCE') and false)
				)
			</if>
			<if test="countSize == 100 and loginId != null">
				and b.region in (select t.regionName 
								from resourcepool t,
									resourcepooldepartment a,
									oss_system_user b,
									oss_system_department c 
								where concat(',',#{loginId},',') like concat('%,',loginId,',%')
									and a.groupId = c.refGroupId
									and b.department = c.id
									and a.poolId = t.id
									and t.regionName is not null) 
				and b.projectId in (select d.projectId from v_department_projectId d where concat(',',#{loginId},',') like concat('%,',d.loginId,',%'))
			</if>
			<if test="countSize == 10 and loginId != null">
				and b.region in (select t.regionName from resourcepool t,resourcepoolusers k where t.id = k.poolId and t.regionName is not null and concat(',',#{loginId},',') like concat('%,',loginId,',%'))
				and b.projectId in (select d.projectId from v_department_projectId d where concat(',',#{loginId},',') like concat('%,',d.loginId,',%'))
			</if>
	</select>
	
	<insert id="insertReportRpMonitorCount" parameterType="java.util.HashMap">
		<![CDATA[
		insert into report_rp_monitor_count(poolId,cpuUsage,memoryUsage)
		values(#{id},#{cpu_value_avg},#{mem_value_avg})
		]]>
	</insert>
	<delete id="deleteReportRpMonitorCount" parameterType="java.util.HashMap">
		<![CDATA[
		delete from report_rp_monitor_count where UNIX_TIMESTAMP(createTime) < #{beginTimeStamp}
		]]>
	</delete>
	
	<select id="selectReportResourceMonitorServersCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[ 
				select 
				]]>
					<foreach collection="array" index="index" item="item" open=" " separator="," close=",">
			   			t${index}.value as '${item}'
			  		</foreach>
			  	<![CDATA[ 
						group_concat( h.hostId ) hostOrders
				from rn_base a 
				]]>
					<if test="type == 'VIR_INSTANCE'">
						join rn_ext_vir_instance b on a.id = b.nodeId 
					</if>
					<if test="type == 'PHYSICAL'">
						join rn_ext_physical b on a.id = b.nodeId 
					</if>
					<if test="type == 'VIRTUAL'">
						join rn_ext_physical b on a.id = b.nodeId 
					</if>
				<![CDATA[ 		
					join monitornodehost h on a.id = h.nodeId 
					]]>
					<foreach collection="array" index="index" item="item" open=" " separator="" close="">
					  join (select n.*
						from oss_system_tag m
							  join oss_system_tag_resource n on m.id = n.tagid
						where m.tagType = 'PROPERTY'
								and m.name = #{item}) t${index} on a.id = t${index}.resourceid 
					</foreach>
				  	<![CDATA[
				where a.rnStatus = 'NORMAL'
						]]>
					  	<if test="loginId != null">
							and (
								a.id in (select resourceId from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type=#{type})  or 
								0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type=#{type}) or 
								(0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type=#{type}) and false)
							)
						</if>
						<if test="type != 'VIR_INSTANCE' and countSize == 100 and loginId != null">
							and b.poolId in (select a.poolId 
											from resourcepooldepartment a,
												oss_system_user b,
												oss_system_department c 
											where concat(',',#{loginId},',') like concat('%,',loginId,',%')
												and a.groupId = c.refGroupId
												and b.department = c.id)
						</if>
						<if test="type != 'VIR_INSTANCE' and countSize == 10 and loginId != null">
							and b.poolId in (select poolId from resourcepoolusers where concat(',',#{loginId},',') like concat('%,',loginId,',%'))
						</if>
						<if test="type == 'VIR_INSTANCE' and countSize == 100 and loginId != null">
							and b.region in (select t.regionName 
											from resourcepool t,
												resourcepooldepartment a,
												oss_system_user b,
												oss_system_department c 
											where concat(',',#{loginId},',') like concat('%,',loginId,',%')
												and a.groupId = c.refGroupId
												and b.department = c.id
												and a.poolId = t.id
												and t.regionName is not null) 
							and b.projectId in (select d.projectId from v_department_projectId d where concat(',',#{loginId},',') like concat('%,',d.loginId,',%'))
						</if>
						<if test="type == 'VIR_INSTANCE' and countSize == 10 and loginId != null">
							and b.region in (select t.regionName from resourcepool t,resourcepoolusers k where t.id = k.poolId and t.regionName is not null and concat(',',#{loginId},',') like concat('%,',loginId,',%'))
							and b.projectId in (select d.projectId from v_department_projectId d where concat(',',#{loginId},',') like concat('%,',d.loginId,',%'))
						</if>
		  			<![CDATA[
				group by 
				]]>
				<foreach collection="array" index="index" item="item" open=" " separator="," close="">
		   			t${index}.value
		  		</foreach>
	</select>
	
	<select id="selectReportResourceCharge" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select 
		]]>
		<foreach collection="array" index="index" item="item" open=" " separator="," close=",">
   			k.${item}
  		</foreach>
  		<![CDATA[
		sum(cpuCharge) cpuCharge,
		sum(memoryCharge) memoryCharge,
		sum(localDiskCharge) localDiskCharge,
		sum(volumeCharge) volumeCharge
			from (select 
			]]>
				<foreach collection="array" index="index" item="item" open=" " separator="," close=",">
		   			t${index}.value as '${item}'
		  		</foreach>
		  	<![CDATA[
		  			a.nodeId,
					max(a.cpuCharge)-min(a.cpuCharge) cpuCharge,
					max(a.memoryCharge)-min(a.memoryCharge) memoryCharge,
					max(a.localDiskCharge)-min(a.localDiskCharge) localDiskCharge,
					max(a.volumeCharge)-min(a.volumeCharge) volumeCharge
				from rn_ext_vir_instance_charge_history a
					  join rn_ext_vir_instance b on a.nodeId = b.nodeid
			]]>
					<foreach collection="array" index="index" item="item" open=" " separator="" close="">
					  join (select n.*
						from oss_system_tag m
							  join oss_system_tag_resource n on m.id = n.tagid
						where m.tagType = 'PROPERTY'
								and m.name = #{item}) t${index} on a.nodeid = t${index}.resourceid 
					</foreach>
				  		<![CDATA[
			  		where UNIX_TIMESTAMP(a.chargeTime) >= #{beginTimeStamp} and UNIX_TIMESTAMP(a.chargeTime) <= #{endTimeStamp}
					  	]]>
					  	<if test="loginId != null">
							and (
								a.nodeId in (select resourceId from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_INSTANCE')  or 
								0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_INSTANCE') or 
								(0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_INSTANCE') and false)
							)
						</if>
						<if test="countSize == 100 and loginId != null">
							and b.region in (select t.regionName 
											from resourcepool t,
												resourcepooldepartment a,
												oss_system_user b,
												oss_system_department c 
											where concat(',',#{loginId},',') like concat('%,',loginId,',%')
												and a.groupId = c.refGroupId
												and b.department = c.id
												and a.poolId = t.id
												and t.regionName is not null) 
							and b.projectId in (select d.projectId from v_department_projectId d where concat(',',#{loginId},',') like concat('%,',d.loginId,',%'))
						</if>
						<if test="countSize == 10 and loginId != null">
							and b.region in (select t.regionName from resourcepool t,resourcepoolusers k where t.id = k.poolId and t.regionName is not null and concat(',',#{loginId},',') like concat('%,',loginId,',%'))
							and b.projectId in (select d.projectId from v_department_projectId d where concat(',',#{loginId},',') like concat('%,',d.loginId,',%'))
						</if>
		  			<![CDATA[
					group by 
					]]>
					<foreach collection="array" index="index" item="item" open=" " separator="," close=",">
			   			t${index}.value
			  		</foreach>
			  		<![CDATA[
			  		a.nodeId)	k
			group by 
		]]>
		<foreach collection="array" index="index" item="item" open=" " separator="," close="">
   			k.${item}
  		</foreach>
	</select>
	
	<select id="selectReportResourceTask" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select 
		]]>
		<foreach collection="array" index="index" item="item" open=" " separator="," close=",">
   			k.${item}
  		</foreach>
  		<![CDATA[countTime,GROUP_CONCAT(cast(countValue as CHAR)) countValue
			from (select 
			]]>
				<foreach collection="array" index="index" item="item" open=" " separator="," close=",">
		   			t${index}.value as '${item}'
		  		</foreach>
		  		<if test="reportType == 'YEAR'">
		  			<![CDATA[ FROM_UNIXTIME(UNIX_TIMESTAMP(b.createTime),'%Y') countTime,]]>
				</if>
				<if test="reportType == 'MONTH'">
		  			<![CDATA[ FROM_UNIXTIME(UNIX_TIMESTAMP(b.createTime),'%Y-%m') countTime,]]>
				</if>
				<if test="reportType == 'DAY'">
		  			<![CDATA[ FROM_UNIXTIME(UNIX_TIMESTAMP(b.createTime),'%Y-%m-%d') countTime,]]>
				</if>
				<if test="reportType == 'HOUR'">
		  			<![CDATA[ FROM_UNIXTIME(UNIX_TIMESTAMP(b.createTime),'%Y-%m-%d %H:00') countTime,]]>
				</if>
				<if test="reportType == 'WEEK'">
		  			<![CDATA[ date_format(FROM_UNIXTIME(UNIX_TIMESTAMP(b.createTime),'%Y-%m-%d'),'%u') countTime,]]>
				</if>
				<if test="reportType == 'QUARTER'">
		  			<![CDATA[ QUARTER(FROM_UNIXTIME(UNIX_TIMESTAMP(b.createTime),'%Y-%m-%d')) countTime,]]>
				</if>
		  	<![CDATA[
		  			concat('CREATED',':',count(*)) countValue
					from rn_base a
						  join rn_ext_vir_instance b on a.id = b.nodeid
			]]>
						  <foreach collection="array" index="index" item="item" open=" " separator="" close="">
						  join (select n.*
							from oss_system_tag m
								  join oss_system_tag_resource n on m.id = n.tagid
							where m.tagType = 'PROPERTY'
									and m.name = #{item}) t${index} on a.id = t${index}.resourceid 
				  		</foreach>
				  		<![CDATA[
			  		where b.createTime is not null and UNIX_TIMESTAMP(b.createTime) >= #{beginTimeStamp} and UNIX_TIMESTAMP(b.createTime) <= #{endTimeStamp}
					  	]]>
					  	<if test="loginId != null">
							and (
								a.id in (select resourceId from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_INSTANCE')  or 
								0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_INSTANCE') or 
								(0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_INSTANCE') and false)
							)
						</if>
						<if test="countSize == 100 and loginId != null">
							and b.region in (select t.regionName 
											from resourcepool t,
												resourcepooldepartment a,
												oss_system_user b,
												oss_system_department c 
											where concat(',',#{loginId},',') like concat('%,',loginId,',%')
												and a.groupId = c.refGroupId
												and b.department = c.id
												and a.poolId = t.id
												and t.regionName is not null) 
							and b.projectId in (select d.projectId from v_department_projectId d where concat(',',#{loginId},',') like concat('%,',d.loginId,',%'))
						</if>
						<if test="countSize == 10 and loginId != null">
							and b.region in (select t.regionName from resourcepool t,resourcepoolusers k where t.id = k.poolId and t.regionName is not null and concat(',',#{loginId},',') like concat('%,',loginId,',%'))
							and b.projectId in (select d.projectId from v_department_projectId d where concat(',',#{loginId},',') like concat('%,',d.loginId,',%'))
						</if>
		  			<![CDATA[
					group by 
					]]>
					<foreach collection="array" index="index" item="item" open=" " separator="," close=",">
			   			t${index}.value
			  		</foreach>
			  		<![CDATA[
			  		countTime
			  	union all
			  	select 
				]]>
					<foreach collection="array" index="index" item="item" open=" " separator="," close=",">
			   			t${index}.value as '${item}'
			  		</foreach>
			  		<if test="reportType == 'YEAR'">
			  			<![CDATA[ FROM_UNIXTIME(UNIX_TIMESTAMP(a.deleteTs),'%Y') countTime,]]>
					</if>
					<if test="reportType == 'MONTH'">
			  			<![CDATA[ FROM_UNIXTIME(UNIX_TIMESTAMP(a.deleteTs),'%Y-%m') countTime,]]>
					</if>
					<if test="reportType == 'DAY'">
			  			<![CDATA[ FROM_UNIXTIME(UNIX_TIMESTAMP(a.deleteTs),'%Y-%m-%d') countTime,]]>
					</if>
					<if test="reportType == 'HOUR'">
			  			<![CDATA[ FROM_UNIXTIME(UNIX_TIMESTAMP(a.deleteTs),'%Y-%m-%d %H:00') countTime,]]>
					</if>
					<if test="reportType == 'WEEK'">
			  			<![CDATA[ date_format(FROM_UNIXTIME(UNIX_TIMESTAMP(a.deleteTs),'%Y-%m-%d'),'%u') countTime,]]>
					</if>
					<if test="reportType == 'QUARTER'">
			  			<![CDATA[ QUARTER(FROM_UNIXTIME(UNIX_TIMESTAMP(a.deleteTs),'%Y-%m-%d')) countTime,]]>
					</if>
			  	<![CDATA[ 
			  			concat('DELETED',':',count(*)) countValue
						from rn_base a
							  join rn_ext_vir_instance b on a.id = b.nodeid
				]]>
							  <foreach collection="array" index="index" item="item" open=" " separator="" close="">
							  join (select n.*
								from oss_system_tag m
									  join oss_system_tag_resource n on m.id = n.tagid
								where m.tagType = 'PROPERTY'
										and m.name = #{item}) t${index} on a.id = t${index}.resourceid 
					  		</foreach>
					  		<![CDATA[ 
			  			where a.deleteTs is not null and UNIX_TIMESTAMP(a.deleteTs) >= #{beginTimeStamp} and UNIX_TIMESTAMP(a.deleteTs) <= #{endTimeStamp}
						  	]]>
						  	<if test="loginId != null">
								and (
									a.id in (select resourceId from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_INSTANCE')  or 
									0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_INSTANCE') or 
									(0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_INSTANCE') and false)
								)
							</if>
							<if test="countSize == 100 and loginId != null">
								and b.region in (select t.regionName 
												from resourcepool t,
													resourcepooldepartment a,
													oss_system_user b,
													oss_system_department c 
												where concat(',',#{loginId},',') like concat('%,',loginId,',%')
													and a.groupId = c.refGroupId
													and b.department = c.id
													and a.poolId = t.id
													and t.regionName is not null) 
								and b.projectId in (select d.projectId from v_department_projectId d where concat(',',#{loginId},',') like concat('%,',d.loginId,',%'))
							</if>
							<if test="countSize == 10 and loginId != null">
								and b.region in (select t.regionName from resourcepool t,resourcepoolusers k where t.id = k.poolId and t.regionName is not null and concat(',',#{loginId},',') like concat('%,',loginId,',%'))
								and b.projectId in (select d.projectId from v_department_projectId d where concat(',',#{loginId},',') like concat('%,',d.loginId,',%'))
							</if>
			  			<![CDATA[
						group by 
						]]>
						<foreach collection="array" index="index" item="item" open=" " separator="," close=",">
				   			t${index}.value
				  		</foreach>
				  		<![CDATA[
				  		countTime)	k
			group by countTime,
		]]>
		<foreach collection="array" index="index" item="item" open=" " separator="," close="">
   			k.${item}
  		</foreach>
	</select>
	
	<select id="selectReportResourcePoolResource" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select b.id,b.name,count(a.nodeId) instanceCount,b.regionName 
			from resourcepool b 
		]]>
			<if test="type == 'physical' or type == 'hypervisor'">
			<![CDATA[
				left join rn_ext_physical a on a.poolId = b.id and a.nodeId in (select k.id from rn_base k where k.rnstatus = 'NORMAL')
			]]>
			</if>
			<if test="type == 'virtual'">
			<![CDATA[
				left join rn_ext_vir_instance a on a.region = b.regionName and a.nodeId in (select k.id from rn_base k where k.rnstatus = 'NORMAL')
			]]>
			</if>
		<where>
			<![CDATA[ and b.status = 'NORMAL' ]]>
			<if test="type == 'physical'">
				and b.poolType = 'COMPUTE' and b.type = 'PHYSICAL' 
			</if>
			<if test="type == 'hypervisor'">
				and b.poolType = 'COMPUTE' and b.type in ('VIRTUAL') 
			</if>
			<if test="type == 'virtual'">
				and b.poolType = 'COMPUTE' and b.type in ('VIRTUAL')
			</if>
			<if test="countSize == 100 and loginId != null">
				and b.id in (select a.poolId 
								from resourcepooldepartment a,
									oss_system_user b,
									oss_system_department c 
								where concat(',',#{loginId},',') like concat('%,',loginId,',%') 
									and a.groupId = c.refGroupId
									and b.department = c.id)
			</if>
			<if test="countSize == 10 and loginId != null">
				and b.id in (select poolId from resourcepoolusers where concat(',',#{loginId},',') like concat('%,',loginId,',%'))
			</if>
		</where>
		<![CDATA[ 
			group by b.id,b.name,b.regionName
		]]>
	</select>
	
	
	<select id="selectReportResourcePoolResourceUnitType" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select if(unitType = '' , '未知' ,unitType) unitType,count(*) resourceCount
			from rn_ext_physical a,
				resourcepool b
			where a.poolId = b.id
			 	and a.poolid = #{poolId}
			]]>
				<if test="loginId != null">
					and (
						a.nodeId in (select resourceId from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type=b.type)  or 
						0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type=b.type) or 
						(0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type=b.type) and false)
					)
				</if>
			<![CDATA[
			group by unitType
		]]>
	</select>
	
	<!-- process -->
	<select id="selectGTasksCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
		select count(*) totalSize
		from OSS_Process k,
			 process_instance a,
			 process_instance_task b,
			 process_instance_task c,
			 process_module_instance t,
		     process_module_task_instance x,
		     process_module_task_instance_detail y
		
		where a.id = k.identity
			
			and a.refModuleInstance = t.id
			and x.id = y.id
		    and x.refModuleInstance = t.id
		    and b.refInstance = a.id
		    and b.taskId = x.taskId
		    
		    and a.currentTask != -1
		    and a.currentTask = b.id
		    and a.currentTask = c.nextTask
		    
    		and (a.subType = y.subType or y.subType = 'All' or concat(a.subType,':') like concat('%:',y.subType,':%'))
		    
		    and if(c.type = 'ACCEPT' , 
		    	concat(',',#{loginId},',') like concat('%,',c.checkUser,',%'),
		    	((y.refRole in (select k.roleId 
											from OSS_SYSTEM_User_Role k,
												OSS_SYSTEM_User m 
		                                    where m.id = k.userId 
												and concat(',',#{loginId},',') like concat('%,',m.loginId,',%')) or y.refRole = -1)
				 and (concat(',',#{loginId},',') like concat('%,',y.refUser,',%') or y.refUser = -1)
		         and (if(y.refDepartment = 0,
					(select n.department from OSS_SYSTEM_User n where k.createUser = n.loginId) = (select m.department from OSS_SYSTEM_User m where concat(',',#{loginId},',') like concat('%,',m.loginId,',%')),
					y.refDepartment in (select m.department from OSS_SYSTEM_User m where concat(',',#{loginId},',') like concat('%,',m.loginId,',%'))) 
					or y.refDepartment = -1)
		         )
		         )
	
		]]>
		<!-- where a.id = k.identity后面去除  and k.bodyType=y.subType  2016.10.12 -->
		<if test="CREATE_USER != null">
			<![CDATA[ and k.createUser = #{CREATE_USER}]]>
		</if>
		<if test="BEGIN_CREATE_TS != null">
			<![CDATA[ and k.createTs >= #{BEGIN_CREATE_TS}]]>
		</if>
		<if test="END_CREATE_TS != null">
			<![CDATA[ and k.createTs <= #{END_CREATE_TS}]]>
		</if>
	</select>
	<select id="selectGTasks" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
		select distinct k.*,a.currentTask,c.checkTs,(select f.name from OSS_SYSTEM_User f where f.loginId = k.createUser) userName,b.type currentTaskType 
		from OSS_Process k,
			 process_instance a,
			 process_instance_task b,
			 process_instance_task c,
			 process_module_instance t,
		     process_module_task_instance x,
		     process_module_task_instance_detail y
		
		where a.id = k.identity
		    
			and a.refModuleInstance = t.id
			and x.id = y.id
		    and x.refModuleInstance = t.id
		    and b.refInstance = a.id
		    and b.taskId = x.taskId
		    
		    and a.currentTask != -1
		    and a.currentTask = b.id
		    and a.currentTask = c.nextTask
		    
    		and (a.subType = y.subType or y.subType = 'All' or concat(a.subType,':') like concat('%:',y.subType,':%'))
		    
		    and if(c.type = 'ACCEPT' , 
		    	concat(',',#{loginId},',') like concat('%,',c.checkUser,',%'),
		    	((y.refRole in (select k.roleId 
											from OSS_SYSTEM_User_Role k,
												OSS_SYSTEM_User m 
		                                    where m.id = k.userId 
												and concat(',',#{loginId},',') like concat('%,',m.loginId,',%')) or y.refRole = -1)
				 and (concat(',',#{loginId},',') like concat('%,',y.refUser,',%') or y.refUser = -1)
		         and (if(y.refDepartment = 0,
					(select n.department from OSS_SYSTEM_User n where k.createUser = n.loginId) = (select m.department from OSS_SYSTEM_User m where concat(',',#{loginId},',') like concat('%,',m.loginId,',%')),
					y.refDepartment in (select m.department from OSS_SYSTEM_User m where concat(',',#{loginId},',') like concat('%,',m.loginId,',%'))) 
					or y.refDepartment = -1)
		         )
		         )
		]]>
		<!-- where a.id = k.identity后面去除  and k.bodyType=y.subType  2016.10.12 -->
		<if test="CREATE_USER != null">
			<![CDATA[ and k.createUser = #{CREATE_USER}]]>
		</if>
		<if test="status != null">
			<![CDATA[ and concat(',',#{status},',') like concat('%,',k.status,',%')]]>
		</if>
		<if test="BEGIN_CREATE_TS != null">
			<![CDATA[ and k.createTs >= #{BEGIN_CREATE_TS}]]>
		</if>
		<if test="END_CREATE_TS != null">
			<![CDATA[ and k.createTs <= #{END_CREATE_TS}]]>
		</if>
		<if test="processId != null">
			<![CDATA[ and k.id = #{processId}]]>
		</if>
		<![CDATA[
			order by k.createTs desc
		]]>
		<if test="beginIndex != null">
			limit #{beginIndex},#{perPage}
		</if>
	</select>
	
	<select id="selectCurrentGTasksRefUser" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
		select distinct c.checkUser,b.*
		from process_instance b,
			process_instance_task c
		where b.currentTask != -1
			and b.currentTask = c.nextTask
            and c.type = 'ACCEPT'
            and b.id = #{identity}
		union
		select m.loginId,b.*
		from process_instance b,
             process_instance_task d,
             process_module_task_instance x,
             process_module_task_instance_detail y,
             
			 OSS_SYSTEM_User m 
		where b.currentTask != -1
            and b.currentTask = d.id 
            and b.refModuleInstance = x.refModuleInstance
            and x.id = y.id
            and d.taskId = x.taskId
    		and (b.subType = y.subType or y.subType = 'All' or concat(b.subType,':') like concat('%:',y.subType,':%'))
            
            and if(d.type = 'CHECK',
            	1=2,
            	((y.refRole in (select k.roleId 
									from OSS_SYSTEM_User_Role k
                                    where m.id = k.userId ) or y.refRole = -1)
				 and (y.refUser = m.loginId or y.refUser = -1)
				 and (if(y.refDepartment = 0,
				 		m.department in (select n.department from OSS_SYSTEM_User n where b.createUser = n.loginId),
				 		y.refDepartment = m.department) 
				 		or y.refDepartment = -1)
				 )
				 )
            
            and b.id = #{identity}
		]]>
	</select>
	
	<select id="selectPreGTasksRefUser" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
		select distinct m.loginId checkUser,b.*
		from process_instance b,
             process_instance_task d,
             process_module_task_instance x,
             process_module_task_instance_detail y,
             
			 OSS_SYSTEM_User m 
		where b.currentTask = d.nextTask 
            and b.refModuleInstance = x.refModuleInstance
            and x.id = y.id
            and d.taskId = x.taskId
            and d.id = (select max(id) from process_instance_task where b.currentTask = nextTask and b.id = refInstance)

            and if(d.type = 'CHECK' , 
		    	d.checkUser = m.loginId ,
		    	((y.refRole in (select k.roleId 
									from OSS_SYSTEM_User_Role k
                                    where m.id = k.userId ) or y.refRole = -1)
				 and (y.refUser = m.loginId or y.refUser = -1)
				 and (if(y.refDepartment = 0,
				 		m.department in (select n.department from OSS_SYSTEM_User n where b.createUser = n.loginId),
				 		y.refDepartment = m.department) 
				 		or y.refDepartment = -1)
				 )
				 )
            
            and b.id = #{identity}
		]]>
	</select>
	<select id="selectProcessResourceRequestsCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select count(*) totalSize from oss_virtual_log a 
			left join oss_system_user b on a.user = b.loginId 
			left join 
			(
				select f.name resourceName,f.defaultName resourceDefaultName,f.type,f.rnStatus,e.nodeId,e.`status` from rn_base f join ( 
				select nodeId,vmState status from rn_ext_vir_instance 
				union all 
				select nodeId,status from rn_ext_vir_volumes e 
				union all 
				select nodeId,status from rn_ext_vir_network e 
				) e on e.nodeId = f.id 
				union all 
				select g.stack_name resourceName,g.stack_name resourceDefaultName,'STACK' type,g.stack_status rnStatus,g.resource_id nodeId,g.stack_status status  
					from openstack_stacks g where g.resource_id is not null
			) d on a.resourceId = d.nodeId 
		]]>
		<where>
			and (a.type != 'VIRTUAL_LIST_STACK_ITEM' and a.type != 'VIRTUAL_LIST_STACK_ITEM_TEMPLATE' and a.type != 'VIRTUAL_LIST_STACK_ITEM_RESOURCES')
			<if test="resourceId != null">
				and resourceId = #{resourceId}
			</if>
			<if test="loginId != null">
				and user = #{loginId}
			</if>
		</where>
		
		<![CDATA[
			order by a.ts desc 
		]]>
	</select>
	<select id="selectProcessResourceRequests" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.*,d.resourceName,d.resourceDefaultName,b.name userName,d.type resourceType,d.rnStatus ,d.`status` resourceStatus from oss_virtual_log a 
			left join oss_system_user b on a.user = b.loginId 
			left join 
			(
				select f.name resourceName,f.defaultName resourceDefaultName,f.type,f.rnStatus,e.nodeId,e.`status` from rn_base f join ( 
				select nodeId,vmState status from rn_ext_vir_instance 
				union all 
				select nodeId,status from rn_ext_vir_volumes e 
				union all 
				select nodeId,status from rn_ext_vir_network e 
				) e on e.nodeId = f.id 
				union all 
				select g.stack_name resourceName,g.stack_name resourceDefaultName,'STACK' type,g.stack_status rnStatus,g.resource_id nodeId,g.stack_status status  
					from openstack_stacks g where g.resource_id is not null
			) d on a.resourceId = d.nodeId 
		]]>
		<where>
			and (a.type != 'VIRTUAL_LIST_STACK_ITEM' and a.type != 'VIRTUAL_LIST_STACK_ITEM_TEMPLATE' and a.type != 'VIRTUAL_LIST_STACK_ITEM_RESOURCES') 
			<if test="resourceId != null">
				and resourceId = #{resourceId}
			</if>
			<if test="loginId != null">
				and user = #{loginId}
			</if>
		</where>
		<![CDATA[
			order by a.ts desc 
		]]>
		
		<if test="beginIndex != null">
			limit #{beginIndex},#{perPage}
		</if>
	</select>
	<select id="selectProcessesCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
		select count(*) totalSize
		from OSS_Process a
			left join (select processId,status PROCESS_STATUS_CODE from oss_virtual_log k,OSS_Process_Request_Map m WHERE k.id = m.logId) n on n.processId = a.id
		where ((a.engineType = 'LOCAL' and a.identity in (
								select distinct d.refInstance
								from 
									 process_instance b,
									 process_instance_task d,
						             process_module_task_instance x,
						             process_module_task_instance_detail y,
						             
									 OSS_SYSTEM_User m 
								where b.id = d.refInstance 
						            and b.refModuleInstance = x.refModuleInstance
						            and x.id = y.id
						            and d.taskId = x.taskId
						            ]]>
						            <if test="loginId != null">
										<![CDATA[ and concat(',',#{loginId},',') like concat('%,',m.loginId,',%')]]>
									</if>
						            <![CDATA[
						            and ((y.refRole in (select k.roleId 
															from OSS_SYSTEM_User_Role k
						                                    where m.id = k.userId ) or y.refRole = -1)
										 and (y.refUser = m.loginId or y.refUser = -1)
										 and ((y.refDepartment = m.department and y.refDepartment = (select n.department from OSS_SYSTEM_User n where b.createUser = n.loginId)) 
									 		or y.refDepartment = -1)
										 )
								)) or ]]>
								<if test="loginId != null">
									<![CDATA[ (a.engineType != 'LOCAL' and concat(',',#{loginId},',') like concat('%,',a.createUser,',%'))]]>
								</if>
								<if test="loginId == null">
									<![CDATA[ (1 = 2)]]>
								</if>
								<![CDATA[)]]>
								
		<if test="id != null">
			and a.id = #{id}
		</if>
		<if test="identity != null">
			<![CDATA[ and a.identity = #{identity}]]>
		</if>
		<if test="engineType != null">
			<![CDATA[ and a.engineType = #{engineType}]]>
		</if>
		<if test="status != null">
			<![CDATA[ and concat(',',#{status},',') like concat('%,',a.status,',%')]]>
		</if>
		<if test="CREATE_USER != null">
			<![CDATA[ and a.createUser = #{CREATE_USER}]]>
		</if>
		<if test="BEGIN_CREATE_TS != null">
			<![CDATA[ and a.createTs >= #{BEGIN_CREATE_TS}]]>
		</if>
		<if test="END_CREATE_TS != null">
			<![CDATA[ and a.createTs <= #{END_CREATE_TS}]]>
		</if>
	</select>
	<select id="selectProcesses" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
		select ifnull(n.PROCESS_STATUS_CODE,'') processStatusCode,
				a.*,
				IFNULL((select f.name from OSS_SYSTEM_User f where f.loginId = a.createUser),a.createUser) userName
		from OSS_Process a
			left join (select processId,status PROCESS_STATUS_CODE from oss_virtual_log k,OSS_Process_Request_Map m WHERE k.id = m.logId) n on n.processId = a.id
		where ((a.engineType = 'LOCAL' and a.identity in (
									select distinct d.refInstance
									from 
										 process_instance b,
										 process_instance_task d,
							             process_module_task_instance x,
							             process_module_task_instance_detail y,
							             
										 OSS_SYSTEM_User m 
									where b.id = d.refInstance 
							            and b.refModuleInstance = x.refModuleInstance
							            and x.id = y.id
							            and d.taskId = x.taskId
							            ]]>
							            <if test="loginId != null">
											<![CDATA[ and concat(',',#{loginId},',') like concat('%,',m.loginId,',%')]]>
										</if>
							            <![CDATA[
							            and ((y.refRole in (select k.roleId 
																from OSS_SYSTEM_User_Role k
							                                    where m.id = k.userId ) or y.refRole = -1)
											 and (y.refUser = m.loginId or y.refUser = -1)
											 and ((y.refDepartment = m.department and y.refDepartment = (select n.department from OSS_SYSTEM_User n where b.createUser = n.loginId)) 
										 		or y.refDepartment = -1)
											 )
									)) or ]]>
									<if test="loginId != null">
										<![CDATA[ (a.engineType != 'LOCAL' and concat(',',#{loginId},',') like concat('%,',a.createUser,',%'))]]>
									</if>
									<if test="loginId == null">
										<![CDATA[ (1 = 2)]]>
									</if>
									<![CDATA[)]]>
		<if test="id != null">
			and a.id = #{id}
		</if>
		<if test="identity != null">
			<![CDATA[ and a.identity = #{identity}]]>
		</if>
		<if test="engineType != null">
			<![CDATA[ and a.engineType = #{engineType}]]>
		</if>
		<if test="status != null">
			<![CDATA[ and concat(',',#{status},',') like concat('%,',a.status,',%')]]>
		</if>
		<if test="CREATE_USER != null">
			<![CDATA[ and a.createUser = #{CREATE_USER}]]>
		</if>
		<if test="BEGIN_CREATE_TS != null">
			<![CDATA[ and a.createTs >= #{BEGIN_CREATE_TS}]]>
		</if>
		<if test="END_CREATE_TS != null">
			<![CDATA[ and a.createTs <= #{END_CREATE_TS}]]>
		</if>
		<![CDATA[  order by id desc ]]>
		<if test="beginIndex != null">
			limit #{beginIndex},#{perPage}
		</if>
	</select>
	
	<select id="selectMyApplyProcessesCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
		select count(*) totalSize 
		from OSS_Process
		]]>
		<where>
			<if test="id != null">
				and id = #{id}
			</if>
			<if test="identity != null">
				<![CDATA[ and identity = #{identity}]]>
			</if>
			<if test="type != null">
				<![CDATA[ and concat(',',#{type},',') like concat('%,',type,',%')]]>
			</if>
			<if test="status != null">
				<![CDATA[ and concat(',',#{status},',') like concat('%,',status,',%')]]>
			</if>
			<if test="loginId != null">
				<![CDATA[ and concat(',',#{loginId},',') like concat('%,',createUser,',%') ]]>
			</if>
			<if test="BEGIN_CREATE_TS != null">
				<![CDATA[ and createTs >= #{BEGIN_CREATE_TS}]]>
			</if>
			<if test="END_CREATE_TS != null">
				<![CDATA[ and createTs <= #{END_CREATE_TS}]]>
			</if>
		</where>
	</select>
	<select id="selectMyApplyProcesses" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
		select a.*, 
			(select f.name from OSS_SYSTEM_User f where f.loginId = a.createUser) userName
		from OSS_Process a
		]]>
		<where>
			<if test="id != null">
				and id = #{id}
			</if>
			<if test="identity != null">
				<![CDATA[ and identity = #{identity}]]>
			</if>
			<if test="type != null">
				<![CDATA[ and concat(',',#{type},',') like concat('%,',type,',%')]]>
			</if>
			<if test="status != null">
				<![CDATA[ and concat(',',#{status},',') like concat('%,',status,',%')]]>
			</if>
			<if test="loginId != null">
				<![CDATA[ and concat(',',#{loginId},',') like concat('%,',createUser,',%') ]]>
			</if>
			<if test="BEGIN_CREATE_TS != null">
				<![CDATA[ and createTs >= #{BEGIN_CREATE_TS}]]>
			</if>
			<if test="END_CREATE_TS != null">
				<![CDATA[ and createTs <= #{END_CREATE_TS}]]>
			</if>
		</where>
		<![CDATA[  order by id desc ]]>
		<if test="beginIndex != null">
			limit #{beginIndex},#{perPage}
		</if>
	</select>
	
	<select id="selectProcessResourceExist" parameterType="java.util.HashMap" resultType="java.lang.Integer">
		<![CDATA[
		select count(*) totalSize
		from OSS_Process_Resource_Map
		where resourceType = #{resourceType} 
			and resourceId = #{resourceId}
		]]>
	</select>
	<insert id="insertProcessResourceMap" parameterType="java.util.HashMap">
		<![CDATA[
		insert into OSS_Process_Resource_Map(processId,resourceType,resourceId)
		values(#{processId},#{resourceType},#{resourceId})
		]]>
	</insert>
	<delete id="deleteProcessResourceMap" parameterType="java.util.HashMap">
		<![CDATA[
		delete from OSS_Process_Resource_Map where processId = #{processId}
		]]>
	</delete>
	<insert id="insertProcessRelation" parameterType="java.util.HashMap">
		<![CDATA[
		insert into oss_process_relation(processId,relationType,relationKey)
		values(#{processId},#{relationType},#{relationKey})
		]]>
	</insert>
	<select id="selectProcessRelation" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select b.processId,a.* from oss_process a join oss_process_relation b on a.id = b.processId 
		]]>
		<where>
			<if test="relationType != null">
				and b.relationType = #{relationType} 
			</if>
			<if test="relationKey != null">
				and b.relationKey = #{relationKey} 
			</if>
		</where>
	</select>
	
	<insert id="insertProcessRequestMap" parameterType="java.util.HashMap">
		<![CDATA[
		insert into OSS_Process_Request_Map(processId,logId)
		values(#{processId},#{logId})
		]]>
	</insert>
	<insert id="insertProcess" parameterType="java.util.HashMap">
		<![CDATA[
		insert into OSS_Process(name,type,body,param,status,engineType,identity,createUser,bodyType)
		values(#{name},#{type},#{body},#{param},#{status},#{engineType},#{identity},#{createUser},#{bodyType})
		]]>
		<selectKey keyProperty="processId" resultType="int" order="AFTER">
			select LAST_INSERT_ID()
		</selectKey>
	</insert>
	<update id="updateProcessEngine" parameterType="java.util.HashMap">
		<![CDATA[
		update OSS_Process 
		set engineType = #{engineType},
			identity = #{identity} 
		where id = #{processId}
		]]>
	</update>
	<update id="updateProcessParam" parameterType="java.util.HashMap">
		<![CDATA[
		update OSS_Process 
		set body = #{body}
		where id = #{processId}
		]]>
	</update>
	<update id="updateProcess" parameterType="java.util.HashMap">
		<![CDATA[
		update OSS_Process 
		set status = #{status}
		]]>
			<if test="statusResult != null">
				, statusResult = #{statusResult}
			</if>
		<![CDATA[
		where id = #{id}
		]]>
	</update>
	
	<select id="selectProcessModuleIdFilter" parameterType="java.util.HashMap" resultType="java.lang.Integer">
		<![CDATA[
		select k.id moduleId
		from process_module_type k 
               where (k.subType = #{subType} or k.subType = 'ALL')
			and (k.department = (select department from OSS_SYSTEM_User where loginId = #{createUser} ) or k.department = '-1')
            and k.status = 1
            and k.id in (select id from process_module where type = #{type})        order by k.weight
        limit 0,1
		]]>
	</select>
	
	<select id="selectProcessModuleTasks" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
		select a.* from process_module_task a 
		]]>
		<where>
			<if test="refModule != null">
				and a.refModule = #{refModule} 
			</if>
			<if test="id != null">
				and a.id = #{id} 
			</if>
		</where>
	</select>
	<select id="selectProcessModuleTaskInstance" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
		select a.*
		from process_module_task_instance a,
			process_instance_task b,
		    process_instance c
		where a.refModuleInstance = c.refModuleInstance
			and a.taskId = b.taskId
		    and b.refInstance = c.id
		    and b.id = #{id}
		]]>
	</select>
	<select id="selectProcessModuleInstanceId" parameterType="java.util.HashMap" resultType="java.lang.Integer">
		<![CDATA[
		select id
		from process_module_instance
		]]>
		<where>
			<if test="baseModule != null">
				and baseModule = #{baseModule}
			</if>
			<if test="createTs != null">
				and createTs = #{createTs}
			</if>
		</where>
	</select>
	
	<select id="selectProcessModuleInstance" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
		select *
		from process_module_instance
		]]>
		<where>
			<if test="moduleInstanceId != null">
				and id = #{moduleInstanceId}
			</if>
		</where>
	</select>
	<insert id="insertProcessModuleInstance" parameterType="java.util.HashMap">
		<![CDATA[
		insert into process_module_instance(name,type,description,createTs,baseModule,beginTask)
		select name,type,description,createTs,id,beginTask
		from process_module a
		where a.id = #{baseModule}
		]]>
		<selectKey keyProperty="moduleInstanceId" resultType="int" order="AFTER">
			select LAST_INSERT_ID()
		</selectKey>
	</insert>
	<insert id="insertProcessModuleTaskInstance" parameterType="java.util.HashMap">
		<![CDATA[
		insert into process_module_task_instance(taskId,refModuleInstance,name,type,preTask,nextTask,description,checkContext)
		select taskId,#{moduleInstanceId},name,type,preTask,nextTask,description,checkContext
		from process_module_task b
		where b.refModule = #{baseModule}
		]]>
	</insert>
	<insert id="insertProcessModuleTaskInstanceDetail" parameterType="java.util.HashMap">
		<![CDATA[
		insert into process_module_task_instance_detail(id,taskType,refUser,refRole,refDepartment,subType)
		select c.id,d.taskType,d.refUser,d.refRole,d.refDepartment,d.subType
		from process_module_task b,
			process_module_task_instance c,
		    process_module_task_detail d
		where b.refModule = #{baseModule}
			and b.taskId = c.taskId
		    and c.refModuleInstance = #{moduleInstanceId}
		    and b.id = d.id
		]]>
	</insert>

	<select id="selectProcessInstance" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
		select *
		from process_instance
		]]>
		<where>
			<if test="processInstanceId != null">
				and id = #{processInstanceId}
			</if>
		</where>
	</select>
	<insert id="insertProcessInstance" parameterType="java.util.HashMap">
		<![CDATA[
		insert into process_instance(name,type,body,createUser,refModuleInstance,subType)
		select #{name},type,#{body},#{createUser},id,#{subType}
		from process_module_instance a
		where a.id = #{moduleInstanceId}
		]]>
		<selectKey keyProperty="processInstanceId" resultType="int" order="AFTER">
			select LAST_INSERT_ID()
		</selectKey>
	</insert>
	
	<update id="updateProcessInstance" parameterType="java.util.HashMap">
		<![CDATA[
		update process_instance
		set body = #{body}
		where id = #{processInstanceId}
		]]>
	</update>

	<insert id="insertProcessInstanceTask" parameterType="java.util.HashMap">
		<![CDATA[
		insert into process_instance_task(taskId,refInstance,name,type,checkContext)
		select a.taskId,#{processInstanceId},a.name,a.type,ifnull(a.checkContext,'')
		from process_module_task_instance a
		where  a.refModuleInstance = #{moduleInstanceId}
			and a.taskId = #{taskId}
		]]>
		<selectKey keyProperty="currentTaskId" resultType="int" order="AFTER">
			select LAST_INSERT_ID()
		</selectKey>
	</insert>
	
	<delete id="deleteProcessInstanceUncheckTask" parameterType="java.util.HashMap">
		<![CDATA[
		delete from process_instance_task 
		where refInstance = #{processInstanceId}
			and id = (select k.currentTask from process_instance k where k.id = #{processInstanceId})
		]]>
	</delete>
	<update id="updateProcessInstanceCurrentTask" parameterType="java.util.HashMap">
		<![CDATA[
		update process_instance
		set currentTask = #{currentTaskId}
		where id = #{processInstanceId}
		]]>
	</update>
	<update id="updateProcessInstanceTask" parameterType="java.util.HashMap">
		<![CDATA[
		update process_instance_task
		set checkUser = #{checkUser},
		]]>
			<if test="checkContext != null">
				checkContext = #{checkContext},
			</if>
		<![CDATA[
			checkStatus = #{checkStatus},
			nextTask = #{nextTask}
		where id = #{id}
		]]>
	</update>
	
	<select id="selectProcesseRequestResult" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			SELECT b.* 
			FROM OSS_Process_Request_Map a,
				oss_virtual_log b
			where a.logId = b.id
		]]>
		<if test="processId != null">
			and a.processId = #{processId}
		</if>
	</select>
	<select id="selectProcessDetails" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
		select d.*,
				(select f.name from OSS_SYSTEM_User f where f.loginId = d.createUser) userName
		from OSS_Process d
		]]>
		<where>
			<if test="processId != null">
				and d.id = #{processId}
			</if>
		</where>
	</select>
	<select id="selectProcessTasks" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select t.*,
				(select f.name from OSS_SYSTEM_User f where f.loginId = t.checkUser) userName
			from process_instance_task t
		]]>
		<where>
			<if test="processInstanceId != null">
				and t.refInstance = #{processInstanceId}
			</if>
		</where>
		<![CDATA[
			order by ifNull(checkTs,'9999-99-99')
		]]>
	</select>

	<!-- work order -->
	<select id="selectWorkOrdersCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
		select count(*) totalSize from OSS_WORKORDER
		]]>
		<where>
			<if test="ID != null">
				and a.ID = #{ID}
			</if>
			<if test="BEGIN_CREATE_TS != null">
				<![CDATA[ and CREATE_TS >= #{BEGIN_CREATE_TS}]]>
			</if>
			<if test="END_CREATE_TS != null">
				<![CDATA[ and CREATE_TS <= #{END_CREATE_TS}]]>
			</if>
			<if test="KEY_WORD != null">
				<![CDATA[ and WORKORDER_TITLE like concat('%',#{KEY_WORD},'%')]]>
			</if>
			<if test="DEAL_STATUS_CODE != null">
				<![CDATA[ and concat(',',#{DEAL_STATUS_CODE},',') like concat('%,',DEAL_STATUS_CODE,',%')]]>
			</if>
			<if test="loginId != null">
				<![CDATA[ and concat(',',#{loginId},',') like concat('%,',create_user,',%') ]]>
			</if>
		</where>
	</select>
	<select id="selectWorkOrders" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
		select ifNull(b.processId,-1) processId,
			ifNull(c.identity,'') identity,
			a.ID,
			RESOURCE_TYPE,RESOURCE_TYPE_NAME,
			RESOURCE_UUID,
			RESOURCE_NAME,
			WORKORDER_UUID,
			WORKORDER_TITLE,
			WORKORDER_DETAIL,
			CREATE_USER,
			date_format(a.CREATE_TS, '%Y-%m-%d %T') CREATE_TS,
			date_format(DEAL_TS, '%Y-%m-%d %T') DEAL_TS,
			DEAL_STATUS_CODE,
			UPLOAD_FILE ,
			(select f.name from OSS_SYSTEM_User f where f.loginId = a.CREATE_USER) userName  
			from OSS_WORKORDER a
				left join OSS_WorkOrder_Process_Map b on a.id = b.workOrderId
	            left join OSS_Process c on c.id = b.processId 
		]]>
		<where>
			<if test="ID != null">
				and a.ID = #{ID}
			</if>
			<if test="BEGIN_CREATE_TS != null">
				<![CDATA[ and CREATE_TS >= #{BEGIN_CREATE_TS}]]>
			</if>
			<if test="END_CREATE_TS != null">
				<![CDATA[ and CREATE_TS <= #{END_CREATE_TS}]]>
			</if>
			<if test="KEY_WORD != null">
				<![CDATA[ and WORKORDER_TITLE like concat('%',#{KEY_WORD},'%')]]>
			</if>
			<if test="DEAL_STATUS_CODE != null">
				<![CDATA[ and concat(',',#{DEAL_STATUS_CODE},',') like concat('%,',DEAL_STATUS_CODE,',%')]]>
			</if>
			<if test="loginId != null">
				<![CDATA[ and concat(',',#{loginId},',') like concat('%,',create_user,',%') ]]>
			</if>
			<if test="processId != null">
				<![CDATA[ and b.processId = #{processId}]]>
			</if>
		</where>
		<![CDATA[  order by a.id desc ]]>
		<if test="beginIndex != null">
			limit #{beginIndex},#{perPage}
		</if>
	</select>

	<insert id="insertWorkOrder" parameterType="java.util.HashMap">
		<![CDATA[
		insert into OSS_WORKORDER(WORKORDER_UUID,RESOURCE_TYPE,RESOURCE_TYPE_NAME,RESOURCE_UUID,RESOURCE_NAME,WORKORDER_TITLE,WORKORDER_DETAIL,CREATE_USER,DEAL_TS,DEAL_STATUS_CODE,UPLOAD_FILE)
		values(#{WORKORDER_UUID},#{RESOURCE_TYPE},#{RESOURCE_TYPE_NAME},#{RESOURCE_UUID},#{RESOURCE_NAME},#{WORKORDER_TITLE},#{WORKORDER_DETAIL},#{CREATE_USER},#{DEAL_TS},#{DEAL_STATUS_CODE},#{UPLOAD_FILE})
		]]>
		<selectKey keyProperty="workOrderId" resultType="int" order="AFTER">
			select LAST_INSERT_ID()
		</selectKey>
	</insert>

	<insert id="insertWorkOrderProcessMap" parameterType="java.util.HashMap">
		<![CDATA[
		insert into OSS_WorkOrder_Process_Map(workOrderId,processId)
		values(#{workOrderId},#{processId})
		]]>
		<selectKey keyProperty="workOrderId" resultType="int" order="AFTER">
			select LAST_INSERT_ID()
		</selectKey>
	</insert>

	<update id="updateWorkOrder" parameterType="java.util.HashMap">
		<![CDATA[
			update OSS_WORKORDER
			set ID = #{ID}
		]]>
			<if test="RESOURCE_TYPE != null">
				, RESOURCE_TYPE = #{RESOURCE_TYPE}
			</if>
			<if test="RESOURCE_TYPE_NAME != null">
				, RESOURCE_TYPE_NAME = #{RESOURCE_TYPE_NAME}
			</if>
			<if test="RESOURCE_UUID != null">
				, RESOURCE_UUID = #{RESOURCE_UUID}
			</if>
			<if test="RESOURCE_NAME != null">
				, RESOURCE_NAME = #{RESOURCE_NAME}
			</if>
			<if test="WORKORDER_TITLE != null">
				, WORKORDER_TITLE = #{WORKORDER_TITLE}
			</if>
			<if test="WORKORDER_DETAIL != null">
				, WORKORDER_DETAIL = #{WORKORDER_DETAIL}
			</if>
			<if test="UPLOAD_FILE != null">
				, UPLOAD_FILE = #{UPLOAD_FILE}
			</if>
			<if test="DEAL_TS != null">
				, DEAL_TS = #{DEAL_TS}
			</if>
			<if test="DEAL_STATUS_CODE != null">
				, DEAL_STATUS_CODE = #{DEAL_STATUS_CODE}
			</if>
		<![CDATA[
			where ID = #{ID}
		]]>
	</update>

	<!-- OPENSTACK -->
	<select id="selectRNExtVirInstancesCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
			<![CDATA[
				select count(distinct t.id) totalSize from 
				(select a.id from rn_base a 
					join rn_ext_vir_instance b on a.id = b.nodeId 
					join rn_ext_systeminfo e on a.id = e.nodeId 
				]]>
				<if test="expireType != null and expireType == 'BEFORE'">
					<![CDATA[ join oss_resource_lifecycle_action k on k.type = #{expireType} and k.num > 0 and b.expireday > -1 
														and unix_timestamp(ADDDATE(b.createTime,interval b.expireDay day)) > unix_timestamp()
														and unix_timestamp(ADDDATE(b.createTime,interval b.expireDay day)) - unix_timestamp() < k.num * 24 * 60 * 60
					]]>
				</if>
				<if test="expireType != null and expireType == 'CURRENT'">
					<![CDATA[ join oss_resource_lifecycle_action k on k.type = #{expireType} and k.num > 0 and b.expireday > -1  
																and unix_timestamp(ADDDATE(b.createTime,interval b.expireDay day)) < unix_timestamp()
																and unix_timestamp() - unix_timestamp(ADDDATE(b.createTime,interval b.expireDay day)) < k.num * 24 * 60 * 60 
					]]>
				</if>
				<if test="expireType != null and expireType == 'AFTER'">
					<![CDATA[ join oss_resource_lifecycle_action k on k.type = #{expireType} and k.num > 0 and b.expireday > -1  
															and unix_timestamp(ADDDATE(b.createTime,interval b.expireDay day)) < unix_timestamp()
															and unix_timestamp() - unix_timestamp(ADDDATE(b.createTime,interval b.expireDay day)) > k.num * 24 * 60 * 60
					]]>
				</if>
				<![CDATA[ 
					left join rn_ext_osinfo f on a.id = f.nodeId 
					left join rn_ext_vir_flavor c on b.flavorRef = c.uuid 
					left join rn_ext_vir_image d on b.imageRef = d.uuid 
					left join rn_ext_vir_instance_charge g on a.id = g.nodeId 
			]]>
			<if test="virtualizationType != null">
				and c.virtualizationType = #{virtualizationType}
			</if>
			<where>
				<![CDATA[ 
					and a.rnStatus = 'NORMAL' 
				]]>
				<if test="loginId != null">
					and (
						a.id in (select resourceId from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_INSTANCE')  or 
						0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_INSTANCE') or 
						(0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_INSTANCE') and false)
					)
				</if>
				<if test="regionName != null">
					and b.region=#{regionName} 
				</if>
				<if test="projectId != null">
					and b.projectId=#{projectId} 
				</if>
				<if test="saltAgentStatus == 1">
					and e.saltAgentStatus=1
				</if>
				<if test="saltAgentStatus == 0">
					and (e.saltAgentStatus=0 or e.saltAgentStatus is null )
				</if>
				<if test="id != null">
					and a.id = #{id} 
				</if>
				<if test="tagId != null">
					and a.id in (
						  		select a.resourceId from oss_system_tag_resource a 
								where concat(',',#{loginId},',') like concat('%,',a.createUser,',%') and a.tagId = #{tagId} 
						  )
				</if>
				<if test="tagValue != null">
					and a.id in (
						  		select a.resourceId from oss_system_tag_resource a 
								where concat(',',#{loginId},',') like concat('%,',a.createUser,',%') and concat(',',#{tagValue},',') like concat('%,',a.value,',%')   
						  )
						  
				</if>
				<if test="poolType != null and poolType == 'PLATFORM'">
					and b.region in (select regionName from resourcepool where poolType = 'MANAGE' and type in ('VIRTUAL') and regionName is not null)
				</if>
				<if test="poolType == null">
					and b.region in (select regionName from resourcepool where poolType = 'COMPUTE' and type in ('VIRTUAL') and regionName is not null)
				</if>
				<if test="countSize == 100 and loginId != null">
					and b.region in (select t.regionName 
									from resourcepool t,
										resourcepooldepartment a,
										oss_system_user b,
										oss_system_department c 
									where concat(',',#{loginId},',') like concat('%,',loginId,',%')
										and a.groupId = c.refGroupId
										and b.department = c.id
										and a.poolId = t.id
										and t.regionName is not null) 
					and b.projectId in (select d.projectId from v_department_projectId d where concat(',',#{loginId},',') like concat('%,',d.loginId,',%'))
				</if>
				<if test="countSize == 10 and loginId != null">
					and b.region in (select t.regionName from resourcepool t,resourcepoolusers k where t.id = k.poolId and t.regionName is not null and concat(',',#{loginId},',') like concat('%,',loginId,',%'))
					and b.projectId in (select d.projectId from v_department_projectId d where concat(',',#{loginId},',') like concat('%,',d.loginId,',%'))
				</if>
				<if test="host != null">
					<![CDATA[ and b.host = #{host} ]]>
				</if>
				<if test="refStack != null">
					<![CDATA[ and (b.refStack like concat('{"name":"',#{refStack},'",%') or b.refStack like concat('%',#{refStack},'%')) ]]>
				</if>
				<if test="name != null">
					<![CDATA[ and (a.name like concat('%',#{name},'%') or a.hostName like concat('%',#{name},'%') or a.defaultName like concat('%',#{name},'%')) ]]>
				</if>
				<if test="businessAddress != null">
					<![CDATA[ and (concat('.',f.osipAddress,'.') like concat('%.',#{businessAddress},'.%') or a.id in (select i.nodeId from rn_ext_interface i where concat('.',i.ipAddress,'.') like concat('%.',#{businessAddress},'.%'))) ]]>
				</if>
				<if test="businessAddressList != null">
					<![CDATA[ and (concat(',',#{businessAddressList},',') like concat('%,',f.osipAddress,',%')  
										or a.id in (select i.nodeId from rn_ext_interface i where concat(',',#{businessAddressList},',') like concat('%,',i.ipAddress,',%'))) ]]>
				</if>
				<if test="sysMacAddress != null">
					<![CDATA[ and concat(',',#{sysMacAddress},',') like concat('%,',f.sysMacAddr,',%') ]]>
				</if>
				<if test="key != null">
					<![CDATA[ and (
								a.name like concat('%',#{key},'%') 
								or a.hostName like concat('%',#{key},'%') 
								or a.defaultName like concat('%',#{key},'%') 
								or ( f.osipAddress like concat('%',#{key},'%') or a.id in (select i.nodeId from rn_ext_interface i where i.ipAddress like concat('%',#{key},'%')))
								or (f.sysMacAddr like concat('%',#{key},'%')  or a.id in (select i.nodeId from rn_ext_interface i where i.macAddress like concat('%',#{key},'%'))) 
								or a.id in (
									  		select a.resourceId from oss_system_tag_resource a 
											where concat(',',#{loginId},',') like concat('%,',a.createUser,',%') and a.value like concat('%',#{key},'%') 
									  )
							  )
					]]>
				</if>
				<if test="vmState != null">
					<![CDATA[ and b.vmState = #{vmState} ]]>
				</if>
				<if test="flavorName != null">
					<![CDATA[ and (select i.name from rn_base i where i.type='VIR_FLAVOR' and i.id = c.nodeId) like concat('%',#{flavorName},'%') ]]>
				</if>
				<if test="connectStatus == 1">
					<![CDATA[ and e.connectStatus=1 ]]>
				</if>
				<if test="connectStatus == 0">
					<![CDATA[ and (e.connectStatus=0 or e.connectStatus is null ) ]]>
				</if>
				<if test="zabbixAgentStatus == 1">
					<![CDATA[ and e.zabbixAgentStatus=1 ]]>
				</if>
				<if test="zabbixAgentStatus == 0">
					<![CDATA[ and (e.zabbixAgentStatus=0 or e.zabbixAgentStatus is null ) ]]>
				</if>
				<if test="startExpireTime != null">
					<![CDATA[ and if(ADDDATE(b.createTime,interval b.expireDay day) < now(), -2 , unix_timestamp(ADDDATE(b.createTime,interval b.expireDay day)) - unix_timestamp() ) >= #{startExpireTime} ]]>
				</if>
				<if test="endExpireTime != null">
					<![CDATA[ and if(ADDDATE(b.createTime,interval b.expireDay day) < now(), -2 , unix_timestamp(ADDDATE(b.createTime,interval b.expireDay day)) - unix_timestamp() ) <= #{endExpireTime} ]]> 
				</if>
				<if test="expireTime != null">
					<![CDATA[ and b.expireDay = #{expireTime} ]]> 
				</if>
				<if test="list != null">
					<![CDATA[ and ( ]]>
					<foreach collection="list" index="index" item="rule" open=" " separator="" close=" ">
						<if test="index > 0">
							<if test="queryColumn != null and queryColumn == 'ALL'">
								<choose>
									<when test="rule.type == 'notContain' or rule.type == 'notEqual' or rule.type == 'notStartWith' or rule.type == 'notEndWith' or rule.type == 'isEmpty'">
										and 
									</when>
									<otherwise>
										or
									</otherwise>
								</choose>
							</if>
							<if test="queryColumn == null">
								and 
							</if>
						</if>
						<choose>
							<when test="rule.key == 'name'">
								ifnull(a.name,'')
							</when>
							<when test="rule.key == 'flavorName'">
								ifnull((select i.name from rn_base i where i.type='VIR_FLAVOR' and i.id = c.nodeId),'')
							</when>
							<otherwise>
								ifnull(${rule.key},'') 
							</otherwise>
						</choose>
			   			
						<if test="rule.type == 'contain'">
							<![CDATA[ like concat('%',#{rule.value},'%') ]]>
						</if>
						<if test="rule.type == 'notContain'">
							<![CDATA[ not like concat('%',#{rule.value},'%') ]]>
						</if>
						<if test="rule.type == 'equal'">
							<![CDATA[ = #{rule.value} ]]>
						</if>
						<if test="rule.type == 'notEqual'">
							<![CDATA[ != #{rule.value} ]]>
						</if>
						<if test="rule.type == 'notStartWith'">
							<![CDATA[ not like concat (#{rule.value},'%') ]]>
						</if>
						<if test="rule.type == 'startWith'">
							<![CDATA[ like concat (#{rule.value},'%') ]]>
						</if>
						<if test="rule.type == 'notEndWith'">
							<![CDATA[ not like concat('%',#{rule.value}) ]]>
						</if>
						<if test="rule.type == 'endWith'">
							<![CDATA[ like concat('%',#{rule.value}) ]]>
						</if>
						<if test="rule.type == 'isEmpty'">
							<![CDATA[ = '' ]]>
						</if>
			  		</foreach>
			  		<![CDATA[ ) ]]>
				</if>
			</where>
			<![CDATA[ ) t ]]>
	</select> 
	<select id="selectRNExtVirInstances" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select distinct
				a.id,a.type,a.name,ifnull(b.host,'') hostName,
				b.*,
				(select dictName from OSS_DICT where dictType = 'OS_SYSTEM_TYPE_VERSION' and dictId = concat(e.systemType,'_',e.systemSubType)) systemSubTypeName,
				if(ADDDATE(b.createTime,interval b.expireDay day) < now(), -2 , unix_timestamp(ADDDATE(b.createTime,interval b.expireDay day)) - unix_timestamp() ) expireTime,
				g.cpuCharge,g.memoryCharge,g.localDiskCharge,g.volumeCharge,g.chargeTime,
				e.agentId,e.powerStatus,f.osIpAddress,f.osUserName,f.osPassword,
				ifnull(e.zabbixAgentStatus,0) zabbixAgentStatus,
				ifnull(e.saltAgentStatus,0) saltAgentStatus,
				ifnull(e.connectStatus,0) connectStatus, 
				ifnull(h.hostId,-1) monitorHostId,
				(select i.name from rn_base i where i.type='VIR_FLAVOR' and i.id = c.nodeId) flavorName,
				(select i.name from rn_base i where i.type='VIR_IMAGE' and i.id=d.nodeId) imageName,
				(select max(interface) from rn_ext_interface m where m.nodeId = a.id and m.isShow = 1) defaultInterface ,
				(select count(*) from rn_ext_os_security n where n.minion = e.agentId) passwordStatus
			from rn_base a 
				join rn_ext_vir_instance b on a.id = b.nodeId 
				join rn_ext_systeminfo e on a.id = e.nodeId 
			]]>
			<if test="expireType != null and expireType == 'BEFORE'">
				<![CDATA[ join oss_resource_lifecycle_action k on k.type = #{expireType} and k.num > 0 and b.expireday > -1  
													and unix_timestamp(ADDDATE(b.createTime,interval b.expireDay day)) > unix_timestamp()
													and unix_timestamp(ADDDATE(b.createTime,interval b.expireDay day)) - unix_timestamp() < k.num * 24 * 60 * 60
				]]>
			</if>
			<if test="expireType != null and expireType == 'CURRENT'">
				<![CDATA[ join oss_resource_lifecycle_action k on k.type = #{expireType} and k.num > 0 and b.expireday > -1  
															and unix_timestamp(ADDDATE(b.createTime,interval b.expireDay day)) < unix_timestamp()
															and unix_timestamp() - unix_timestamp(ADDDATE(b.createTime,interval b.expireDay day)) < k.num * 24 * 60 * 60 
				]]>
			</if>
			<if test="expireType != null and expireType == 'AFTER'">
				<![CDATA[ join oss_resource_lifecycle_action k on k.type = #{expireType} and k.num > 0 and b.expireday > -1  
														and unix_timestamp(ADDDATE(b.createTime,interval b.expireDay day)) < unix_timestamp()
														and unix_timestamp() - unix_timestamp(ADDDATE(b.createTime,interval b.expireDay day)) > k.num * 24 * 60 * 60
				]]>
			</if>
			<![CDATA[ 
				left join rn_ext_osinfo f on a.id = f.nodeId 
				left join rn_ext_vir_flavor c on b.flavorRef = c.uuid and c.region = b.region
				left join rn_ext_vir_image d on b.imageRef = d.uuid 
				left join monitornodehost h on a.id = h.nodeId 
				left join rn_ext_vir_instance_charge g on a.id = g.nodeId 
			    ]]>
			<if test="hostids != null">
				and concat(',',#{hostids},',') like concat('%,',h.hostid,',%')
			</if>
			<if test="virtualizationType != null">
				and d.virtualizationType = #{virtualizationType}
			</if>
		<where>
			<![CDATA[ 
				and a.rnStatus = 'NORMAL' 
			]]>
			<if test="loginId != null">
				and (
					a.id in (select resourceId from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_INSTANCE')  or 
					0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_INSTANCE') or 
					(0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_INSTANCE') and false)
				)
			</if>
			<if test="poolId != null">
				and b.region=(select regionName from resourcePool where id = #{poolId})
			</if>
			<if test="regionName != null">
				and b.region=#{regionName} 
			</if>
			<if test="projectId != null">
				and b.projectId=#{projectId} 
			</if>
			<if test="saltAgentStatus == 1">
				and e.saltAgentStatus=1
			</if>
			<if test="saltAgentStatus == 0">
				and (e.saltAgentStatus=0 or e.saltAgentStatus is null )
			</if>
			<if test="id != null">
				and a.id = #{id} 
			</if>
			<if test="tagId != null">
				and a.id in ( select a.resourceId from oss_system_tag_resource a where concat(',',#{loginId},',') like concat('%,',a.createUser,',%') and a.tagId = #{tagId} )
			</if>
			<if test="tagValue != null">
				and a.id in ( select a.resourceId from oss_system_tag_resource a 
							where concat(',',#{loginId},',') like concat('%,',a.createUser,',%') and concat(',',#{tagValue},',') like concat('%,',a.value,',%'))
			</if>
			<if test="poolType != null and poolType == 'PLATFORM'">
				and b.region in (select regionName from resourcepool where poolType = 'MANAGE' and type in ('VIRTUAL') and regionName is not null)
			</if>
			<if test="poolType == null">
				and b.region in (select regionName from resourcepool where poolType = 'COMPUTE' and type in ('VIRTUAL') and regionName is not null)
			</if>
			<if test="countSize == 100 and loginId != null">
				and b.region in (select t.regionName 
								from resourcepool t,
									resourcepooldepartment a,
									oss_system_user b,
									oss_system_department c 
								where concat(',',#{loginId},',') like concat('%,',loginId,',%')
									and a.groupId = c.refGroupId
									and b.department = c.id
									and a.poolId = t.id
									and t.regionName is not null) 
				and b.projectId in (select d.projectId from v_department_projectId d where concat(',',#{loginId},',') like concat('%,',d.loginId,',%'))
			</if>
			<if test="countSize == 10 and loginId != null">
				and b.region in (select t.regionName from resourcepool t,resourcepoolusers k where t.id = k.poolId and t.regionName is not null and concat(',',#{loginId},',') like concat('%,',loginId,',%'))
				and b.projectId in (select d.projectId from v_department_projectId d where concat(',',#{loginId},',') like concat('%,',d.loginId,',%'))
			</if>
			<if test="host != null">
				<![CDATA[ and b.host = #{host} ]]>
			</if>
			<if test="refStack != null">
				<![CDATA[ and (b.refStack like concat('{"name":"',#{refStack},'",%') or b.refStack like concat('%',#{refStack},'%')) ]]>
			</if>
			<if test="name != null">
				<![CDATA[ and (a.name like concat('%',#{name},'%') or a.hostName like concat('%',#{name},'%') or a.defaultName like concat('%',#{name},'%')) ]]>
			</if>
			<if test="businessAddress != null">
				<![CDATA[ and (concat('.',f.osipAddress,'.') like concat('%.',#{businessAddress},'.%') or a.id in (select i.nodeId from rn_ext_interface i where concat('.',i.ipAddress,'.') like concat('%.',#{businessAddress},'.%'))) ]]>
			</if>
			<if test="businessAddressList != null">
				<![CDATA[ and (concat(',',#{businessAddressList},',') like concat('%,',f.osipAddress,',%') or a.id in (select i.nodeId from rn_ext_interface i where concat(',',#{businessAddressList},',') like concat('%,',i.ipAddress,',%'))) ]]>
			</if>
			<if test="sysMacAddress != null">
				<![CDATA[ and concat(',',#{sysMacAddress},',') like concat('%,',f.sysMacAddr,',%') ]]>
			</if>
			<if test="key != null">
				<![CDATA[ and (
							a.name like concat('%',#{key},'%') 
							or a.hostName like concat('%',#{key},'%') 
							or a.defaultName like concat('%',#{key},'%') 
							or ( f.osipAddress like concat('%',#{key},'%') or a.id in (select i.nodeId from rn_ext_interface i where i.ipAddress like concat('%',#{key},'%')))
							or (f.sysMacAddr like concat('%',#{key},'%')  or a.id in (select i.nodeId from rn_ext_interface i where i.macAddress like concat('%',#{key},'%'))) 
							or a.id in (
								  		select a.resourceId from oss_system_tag_resource a 
										where concat(',',#{loginId},',') like concat('%,',a.createUser,',%') and a.value like concat('%',#{key},'%') 
								  )
						  )
				]]>
			</if>
			<if test="vmState != null">
				<![CDATA[ and b.vmState = #{vmState} ]]>
			</if>
			<if test="flavorName != null">
				<![CDATA[ and (select i.name from rn_base i where i.type='VIR_FLAVOR' and i.id = c.nodeId) like concat('%',#{flavorName},'%') ]]>
			</if>
			<if test="connectStatus == 1">
				<![CDATA[ and e.connectStatus=1 ]]>
			</if>
			<if test="connectStatus == 0">
				<![CDATA[ and (e.connectStatus=0 or e.connectStatus is null ) ]]>
			</if>
			<if test="zabbixAgentStatus == 1">
				<![CDATA[ and e.zabbixAgentStatus=1 ]]>
			</if>
			<if test="zabbixAgentStatus == 0">
				<![CDATA[ and (e.zabbixAgentStatus=0 or e.zabbixAgentStatus is null ) ]]>
			</if>
			<if test="startExpireTime != null">
				<![CDATA[ and if(ADDDATE(b.createTime,interval b.expireDay day) < now(), -2 , unix_timestamp(ADDDATE(b.createTime,interval b.expireDay day)) - unix_timestamp() ) >= #{startExpireTime} ]]>
			</if>
			<if test="endExpireTime != null">
				<![CDATA[ and if(ADDDATE(b.createTime,interval b.expireDay day) < now(), -2 , unix_timestamp(ADDDATE(b.createTime,interval b.expireDay day)) - unix_timestamp() ) <= #{endExpireTime} ]]> 
			</if>
			<if test="expireTime != null">
				<![CDATA[ and b.expireDay = #{expireTime} ]]> 
			</if>
			<if test="list != null">
				<![CDATA[ and ( ]]>
				<foreach collection="list" index="index" item="rule" open=" " separator="" close=" ">
					<if test="index > 0">
						<if test="queryColumn != null and queryColumn == 'ALL'">
							<choose>
								<when test="rule.type == 'notContain' or rule.type == 'notEqual' or rule.type == 'notStartWith' or rule.type == 'notEndWith' or rule.type == 'isEmpty'">
									and 
								</when>
								<otherwise>
									or
								</otherwise>
							</choose>
						</if>
						<if test="queryColumn == null">
							and 
						</if>
					</if>
					<choose>
						<when test="rule.key == 'name'">
							ifnull(a.name,'')
						</when>
						<when test="rule.key == 'flavorName'">
							ifnull((select i.name from rn_base i where i.type='VIR_FLAVOR' and i.id = c.nodeId),'')
						</when>
						<otherwise>
							ifnull(${rule.key},'') 
						</otherwise>
					</choose>
		   			
					<if test="rule.type == 'contain'">
						<![CDATA[ like concat('%',#{rule.value},'%') ]]>
					</if>
					<if test="rule.type == 'notContain'">
						<![CDATA[ not like concat('%',#{rule.value},'%') ]]>
					</if>
					<if test="rule.type == 'equal'">
						<![CDATA[ = #{rule.value} ]]>
					</if>
					<if test="rule.type == 'notEqual'">
						<![CDATA[ != #{rule.value} ]]>
					</if>
					<if test="rule.type == 'notStartWith'">
						<![CDATA[ not like concat (#{rule.value},'%') ]]>
					</if>
					<if test="rule.type == 'startWith'">
						<![CDATA[ like concat (#{rule.value},'%') ]]>
					</if>
					<if test="rule.type == 'notEndWith'">
						<![CDATA[ not like concat('%',#{rule.value}) ]]>
					</if>
					<if test="rule.type == 'endWith'">
						<![CDATA[ like concat('%',#{rule.value}) ]]>
					</if>
					<if test="rule.type == 'isEmpty'">
						<![CDATA[ = '' ]]>
					</if>
		  		</foreach>
		  		<![CDATA[ ) ]]>
			</if>
		</where>
		<if test="hostids != null">
			<![CDATA[  order by if(h.hostId is null, -1,1) desc, position(concat(',',#{hostids},',') like concat('%,',ifnull(h.hostId,-1),',%')) ]]>
		</if>
		<if test="hostids = null and instanceSort = null">
			<![CDATA[  order by monitorHostId desc ,a.id desc ]]>
		</if>
		<if test="instanceSort != null and instanceSort == 'status'">
			<![CDATA[  order by connectStatus ${instanceSortDirection}, zabbixAgentStatus ${instanceSortDirection}, saltAgentStatus ${instanceSortDirection} ]]>
		</if>
		<if test="instanceSort != null and instanceSort == 'flavorName'">
			<![CDATA[  order by c.vcpus ${instanceSortDirection}, c.memory ${instanceSortDirection}, c.root_gb ${instanceSortDirection} ]]>
		</if>
		<if test="instanceSort != null and instanceSort != 'status' and instanceSort != 'flavorName'">
			<![CDATA[  order by ${instanceSort} ${instanceSortDirection} ]]>
		</if>
		<if test="beginIndex != null">
			limit #{beginIndex},#{perPage}
		</if>
	</select>
	<!-- select group_concat(itemid) items
				from (select a.itemid from zabbix_host_item a,monitorgraphitemmap b where b.graphId = #{sortGraphId} and  a.parentItemId = b.itemId)c  -->
	<select id="selectRNExtVirInstancesItems" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[ 
		select group_concat(itemid) items from monitorgraphitemmap where graphid = #{sortGraphId}
		 ]]>
	</select>
	
	<select id="selectRNExtInterface" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.*
			from rn_ext_interface a
			where a.nodeId = #{nodeId}
		]]>
	</select>
	
	<select id="selectRNExtWwn" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.*
			from rn_ext_wwn a
			where a.nodeId = #{nodeId}
		]]>
			<if test="name != null">
				and name = #{name}
			</if>
	</select>
	<insert id="insertRNExtInterface" parameterType="java.util.HashMap">
		<![CDATA[
			insert into rn_ext_interface (nodeId,interface,isShow,name,ipAddress,macAddress,ipAddressLong) 
			values 
		]]>
		<foreach collection="list" index="index" item="item" open=" " separator="," close=" ">
   			(#{nodeId},#{item.interface},#{item.isShow},#{item.name},#{item.ipAddress},#{item.macAddress},#{item.ipAddressLong}) 
  		</foreach>
	</insert>
	<delete id="deleteRNExtInterface" parameterType="java.util.HashMap">
		<![CDATA[
			delete from rn_ext_interface where nodeId =#{nodeId}  
		]]>
	</delete>
	<update id="updateRNExtSystemInfo" parameterType="java.util.HashMap">
		<![CDATA[
			update rn_ext_systeminfo
			set nodeId = #{nodeId}
		]]>
			<if test="systemType != null">
				, systemType = #{systemType} 
			</if>
			<if test="systemSubType != null">
				, systemSubType = #{systemSubType}
			</if>
			<if test="zabbixAgentStatus != null">
				, zabbixAgentStatus = #{zabbixAgentStatus}
			</if>
			<if test="saltAgentStatus != null">
				, saltAgentStatus = #{saltAgentStatus}
			</if>
			<if test="agentId != null">
				, agentId = #{agentId}
			</if>
		<![CDATA[
			where nodeId = #{nodeId}
		]]>
	</update>
	<update id="updateRNExtOsInfo" parameterType="java.util.HashMap">
		<![CDATA[
			update rn_ext_osinfo 
			set nodeId = #{nodeId}
		]]>
			<if test="osIpAddress != null">
				, osIpAddress = #{osIpAddress}
			</if>
			<if test="osUserName != null">
				, osUserName = #{osUserName}
			</if>
			<if test="osPassword != null">
				, osPassword = #{osPassword} 
			</if>
			<if test="osPort != null">
				, osPort = #{osPort} 
			</if>
			<if test="sysMacAddr != null">
				, sysMacAddr = #{sysMacAddr} 
			</if>
		<![CDATA[
			where nodeId = #{nodeId}
		]]>
	</update>
	<insert id="insertRNExtOsInfo" parameterType="java.util.HashMap">
		<![CDATA[
			insert into rn_ext_osinfo (nodeId,osIpAddress,osUserName,osPassword,osPort,osIpAddressLong,sysMacAddr) 
			values (#{nodeId},#{osIpAddress},#{osUserName},#{osPassword},#{osPort},#{osIpAddressLong},#{sysMacAddr}) 
		]]>
	</insert>
	
	<select id="selectRNExtVirFlavorsCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select count(*) totalSize
			from rn_base a 
			join rn_ext_vir_flavor b on a.id = b.nodeId  			
		]]>
		<where>
			<![CDATA[ 
				and a.type='VIR_FLAVOR' and a.subType='VIR_FLAVOR' and a.rnStatus = 'NORMAL'  
				and (
					a.id in (select resourceId from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_FLAVOR')  or 
					0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_FLAVOR') or 
					(0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_FLAVOR') and false)
				)
			]]>
			<if test="regionName != null">
				and b.region=#{regionName} 
			</if>
			<if test="id != null">
				and a.id = #{id}
			</if>
			<if test="name != null">
				and a.name like concat('%',#{name},'%') 
			</if>
			<if test="memory != null">
				and b.memory = #{memory} 
			</if>
			<if test="root_gb != null">
				and b.root_gb = #{root_gb} 
			</if>
			<if test="ephemeral_gb != null">
				and b.ephemeral_gb = #{ephemeral_gb} 
			</if>
			<if test="vcpus != null">
				and b.vcpus = #{vcpus} 
			</if>
			<if test="tagId != null">
				and a.id in ( select a.resourceId from oss_system_tag_resource a where concat(',',#{loginId},',') like concat('%,',a.createUser,',%') and a.tagId = #{tagId} )
			</if>
			<if test="tagValue != null">
				and a.id in ( select a.resourceId from oss_system_tag_resource a 
							where concat(',',#{loginId},',') like concat('%,',a.createUser,',%') and concat(',',#{tagValue},',') like concat('%,',a.value,',%'))
			</if>
			<if test="key != null">
				and (a.name like concat('%',#{key},'%')
					 or a.id in (
								  		select a.resourceId from oss_system_tag_resource a 
										where concat(',',#{loginId},',') like concat('%,',a.createUser,',%') and a.value like concat('%',#{key},'%') 
								)
				)
			</if>
			<if test="uuid != null">
				and b.uuid = #{uuid} 
			</if>
			<if test="countSize == 100 and loginId != null">
				and b.region in (select t.regionName 
								from resourcepool t,
									resourcepooldepartment a,
									oss_system_user b,
									oss_system_department c 
								where concat(',',#{loginId},',') like concat('%,',loginId,',%')
									and a.groupId = c.refGroupId
									and b.department = c.id
									and a.poolId = t.id
									and t.regionName is not null) 
			</if>
			<if test="countSize == 10 and loginId != null">
				and b.region in (select t.regionName from resourcepool t,resourcepoolusers k where t.id = k.poolId and t.regionName is not null and concat(',',#{loginId},',') like concat('%,',loginId,',%')) 
			</if>
		</where>
	</select>
	<select id="selectRNExtVirFlavors" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.*,
				b.*,
				ifnull(c.serverCount,0) serverCount 
				from rn_base a 
				join rn_ext_vir_flavor b on a.id=b.nodeId 
				left join (select flavorRef,count(*) serverCount from rn_ext_vir_instance e join rn_base f on e.nodeId = f.id where f.rnStatus = 'NORMAL' group by flavorRef) c on b.uuid = c.flavorRef 
		]]>
		<where>
			<![CDATA[ 
				and a.type='VIR_FLAVOR' and a.subType='VIR_FLAVOR' and a.rnStatus = 'NORMAL'  
				and (
					a.id in (select resourceId from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_FLAVOR')  or 
					0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_FLAVOR') or 
					(0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_FLAVOR') and false)
				)
			]]>
			<if test="regionName != null">
				and b.region=#{regionName} 
			</if>
			<if test="id != null">
				and a.id = #{id}
			</if>
			<if test="name != null">
				and a.name like concat('%',#{name},'%') 
			</if>
			<if test="memory != null">
				and b.memory = #{memory} 
			</if>
			<if test="root_gb != null">
				and b.root_gb = #{root_gb} 
			</if>
			<if test="ephemeral_gb != null">
				and b.ephemeral_gb = #{ephemeral_gb} 
			</if>
			<if test="vcpus != null">
				and b.vcpus = #{vcpus} 
			</if>
			<if test="tagId != null">
				and a.id in ( select a.resourceId from oss_system_tag_resource a where concat(',',#{loginId},',') like concat('%,',a.createUser,',%') and a.tagId = #{tagId} )
			</if>
			<if test="tagValue != null">
				and a.id in ( select a.resourceId from oss_system_tag_resource a 
							where concat(',',#{loginId},',') like concat('%,',a.createUser,',%') and concat(',',#{tagValue},',') like concat('%,',a.value,',%'))
			</if>
			<if test="key != null">
				and (a.name like concat('%',#{key},'%')
					 or a.id in (
								  		select a.resourceId from oss_system_tag_resource a 
										where concat(',',#{loginId},',') like concat('%,',a.createUser,',%') and a.value like concat('%',#{key},'%') 
								)
					)
			</if>
			<if test="uuid != null">
				and b.uuid = #{uuid} 
			</if>
			<if test="countSize == 100 and loginId != null">
				and b.region in (select t.regionName 
								from resourcepool t,
									resourcepooldepartment a,
									oss_system_user b,
									oss_system_department c 
								where concat(',',#{loginId},',') like concat('%,',loginId,',%')
									and a.groupId = c.refGroupId
									and b.department = c.id
									and a.poolId = t.id
									and t.regionName is not null) 
			</if>
			<if test="countSize == 10 and loginId != null">
				and b.region in (select t.regionName from resourcepool t,resourcepoolusers k where t.id = k.poolId and t.regionName is not null and concat(',',#{loginId},',') like concat('%,',loginId,',%')) 
			</if>
		</where>
		<if test="orderBy != null and orderBy == 'id'">
			order by a.id desc
		</if>
		<if test="orderBy != null and orderBy == 'name'">
			order by a.name 
		</if>
		<if test="beginIndex != null">
			limit #{beginIndex},#{perPage}
		</if>
	</select>
	
	<!-- <select id="selectFlavorModules" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			SELECT distinct type
			FROM OPENSTACK_Flavor a
			where a.type is not null and a.type != ''
		]]>
	</select>
	
	<update id="updateFlavorModule" parameterType="java.util.HashMap">
		<![CDATA[
			update OPENSTACK_Flavor
			set ID = #{ID}
		]]>
			<if test="type != null">
				, type = #{type}
			</if>
			<if test="typeName != null">
				, typeName = #{typeName}
			</if>
		<![CDATA[
			where ID = #{ID}
		]]>
	</update> -->
	
	
	<select id="selectRNExtVirImagesCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select count(*) totalSize
			from rn_base a 
			join rn_ext_vir_image b on a.id=b.nodeId 
		]]>
		<where>
			<![CDATA[  
      			and (b.owner in (select projectId from v_department_projectId d where concat(',',#{loginId},',') like concat('%,',d.loginId,',%')) or b.public = 1)
				and a.type='VIR_IMAGE' and a.subType='VIR_IMAGE' and a.rnStatus = 'NORMAL'  
				and (
					a.id in (select resourceId from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_IMAGE')  or 
					0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_IMAGE') or 
					(0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_IMAGE') and false)
				)
			]]>
			<if test="regionName != null">
				and b.region=#{regionName} 
			</if>
			<if test="projectId != null">
				and b.owner=#{projectId} 
			</if>
			<if test="tagId != null">
				and a.id in ( select a.resourceId from oss_system_tag_resource a where a.createUser = #{loginId} and a.tagId = #{tagId} )
			</if>
			<if test="tagValue != null">
				and a.id in ( select a.resourceId from oss_system_tag_resource a 
							where a.createUser = #{loginId} and concat(',',#{tagValue},',') like concat('%,',a.value,',%')) 
			</if>
			<if test="key != null">
				and (a.name like concat('%',#{key},'%')
					or a.id in (
								  		select a.resourceId from oss_system_tag_resource a 
										where a.createUser = #{loginId} and a.value like concat('%',#{key},'%') 
								)
					)
			</if>
			<if test="id != null">
				and a.id = #{id}
			</if>
			<if test="uuid != null">
				and b.uuid = #{uuid}
			</if>
			<if test="name != null">
				and a.name like concat('%',#{name},'%')
			</if>
			<if test="diskFormat != null">
				and b.diskFormat = #{diskFormat}
			</if>
			<if test="status != null">
				and b.status = #{status}
			</if>
			<if test="osVersion != null">
				and b.osVersion = #{osVersion}
			</if>
			<if test="osType != null">
				and b.osType = #{osType}
			</if>
			<if test="virtualizationType != null">
				and b.virtualizationType = #{virtualizationType}
			</if>
			<if test="countSize == 100 and loginId != null">
				and b.region in (select t.regionName 
								from resourcepool t,
									resourcepooldepartment a,
									oss_system_user b,
									oss_system_department c 
								where concat(',',#{loginId},',') like concat('%,',loginId,',%')
									and a.groupId = c.refGroupId
									and b.department = c.id
									and a.poolId = t.id
									and t.regionName is not null) 
				and b.owner in (select d.projectId from v_department_projectId d where concat(',',#{loginId},',') like concat('%,',d.loginId,',%'))
			</if>
			<if test="countSize == 10 and loginId != null">
				and b.region in (select t.regionName from resourcepool t,resourcepoolusers k where t.id = k.poolId and t.regionName is not null and concat(',',#{loginId},',') like concat('%,',loginId,',%'))
				and b.owner in (select d.projectId from v_department_projectId d where concat(',',#{loginId},',') like concat('%,',d.loginId,',%'))
			</if>
		</where>
	</select>
	<select id="selectRNExtVirImages" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.*,
				b.*,
				(select d.dictName from oss_dict d where d.dictId = concat(b.osType,'_',b.osVersion) and d.dictType = 'OS_SYSTEM_TYPE_VERSION') osVersion2,
				ifnull(c.serverCount,0) serverCount,0 displayStatus
			from rn_base a 
			join rn_ext_vir_image b on a.id=b.nodeId 
			left join (select imageRef,count(*) serverCount from rn_ext_vir_instance i join rn_base n on i.nodeId = n.id where n.rnStatus = 'NORMAL' group by imageRef) c on b.uuid = c.imageRef		
		]]>
		<where>
			<![CDATA[  
      			and (b.owner in (select projectId from v_department_projectId d where concat(',',#{loginId},',') like concat('%,',d.loginId,',%')) or b.public = 1)
				and a.type='VIR_IMAGE' and a.subType='VIR_IMAGE' and a.rnStatus = 'NORMAL'  
				and (
					a.id in (select resourceId from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_IMAGE')  or 
					0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_IMAGE') or 
					(0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_IMAGE') and false)
				)
			]]>
			<if test="regionName != null">
				and b.region=#{regionName} 
			</if>
			<if test="projectId != null">
				and b.owner=#{projectId} 
			</if>
			<if test="tagId != null">
				and a.id in ( select a.resourceId from oss_system_tag_resource a where a.createUser = #{loginId} and a.tagId = #{tagId} )
			</if>
			<if test="tagValue != null">
				and a.id in ( select a.resourceId from oss_system_tag_resource a 
							where a.createUser = #{loginId} and concat(',',#{tagValue},',') like concat('%,',a.value,',%'))
			</if>
			<if test="key != null">
				and (a.name like concat('%',#{key},'%')
					or a.id in (
								  		select a.resourceId from oss_system_tag_resource a 
										where a.createUser = #{loginId} and a.value like concat('%',#{key},'%') 
								)
					)
			</if>
			<if test="id != null">
				and a.id = #{id}
			</if>
			<if test="uuid != null">
				and b.uuid = #{uuid}
			</if>
			<if test="name != null">
				and a.name like concat('%',#{name},'%')
			</if>
			<if test="diskFormat != null">
				and b.diskFormat = #{diskFormat}
			</if>
			<if test="status != null">
				and b.status = #{status}
			</if>
			<if test="osVersion != null">
				and b.osVersion = #{osVersion}
			</if>
			<if test="osType != null">
				and b.osType = #{osType}
			</if>
			<if test="virtualizationType != null">
				and b.virtualizationType = #{virtualizationType}
			</if>
			<if test="countSize == 100 and loginId != null">
				and b.region in (select t.regionName 
								from resourcepool t,
									resourcepooldepartment a,
									oss_system_user b,
									oss_system_department c 
								where concat(',',#{loginId},',') like concat('%,',loginId,',%')
									and a.groupId = c.refGroupId
									and b.department = c.id
									and a.poolId = t.id
									and t.regionName is not null) 
				and b.owner in (select d.projectId from v_department_projectId d where concat(',',#{loginId},',') like concat('%,',d.loginId,',%'))
			</if>
			<if test="countSize == 10 and loginId != null">
				and b.region in (select t.regionName from resourcepool t,resourcepoolusers k where t.id = k.poolId and t.regionName is not null and concat(',',#{loginId},',') like concat('%,',loginId,',%'))
				and b.owner in (select d.projectId from v_department_projectId d where concat(',',#{loginId},',') like concat('%,',d.loginId,',%'))
			</if>
		</where>
		<![CDATA[ order by a.id desc ]]> 
		<if test="beginIndex != null">
			limit #{beginIndex},#{perPage}
		</if>
	</select>
	<select id="selectRNExtVirImageOsType" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select osType from rn_ext_vir_image 
		]]>
		<where>
			<if test="regionName != null">
				and region=#{regionName} 
			</if>
		</where>
		<![CDATA[
			group by osType 
		]]>
	</select>
	<update id="updateRNExtImageDisplay" parameterType="java.util.HashMap">
		<![CDATA[
			update rn_ext_vir_image
			set nodeId = #{nodeId}
		]]>
			<if test="isDisplay != null">
				, isDisplay = #{isDisplay}
			</if>
		<![CDATA[
			where nodeId = #{nodeId}
		]]>
	</update>
	<select id="selectRNExtVirNetworksCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select count(*) totalSize
			from rn_base a 
			join rn_ext_vir_network b on a.id=b.nodeId 
		]]>
			<!-- 
			<if test="type == 'private'">
				<![CDATA[
		            join v_department_projectId d on d.projectId = b.projectId and (concat(',',#{loginId},',') like concat('%,',d.loginId,',%') or b.shared = 1)
				]]>
			</if>
			 -->
		<where>
			<![CDATA[  
				and a.type='VIR_NETWORK' and a.subType='VIR_NETWORK' and a.rnStatus = 'NORMAL' 
				and (
					a.id in (select resourceId from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_NETWORK')  or 
					0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_NETWORK') or 
					(0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_NETWORK') and false)
				)
				and b.projectId in (select projectId from v_department_projectId e where concat(',',#{loginId},',') like concat('%,',e.loginId,',%')) 
			]]>
			<if test="id != null">
				and a.id = #{id}
			</if>
			<if test="uuid != null">
				and b.uuid = #{uuid}
			</if>
			<if test="key != null">
				<![CDATA[ and a.name like concat('%',#{key},'%')]]>
			</if>
			<!-- <if test="type == 'public' ">
				<![CDATA[ and b.shared = 1  ]]>
			</if>
			<if test="type == 'proprietary'">
				<![CDATA[ and (b.segmentationId >= 1999 or b.networkType = 'flat') and b.shared = 0 ]]>
			</if>
			<if test="type == 'private'">
				<![CDATA[ and b.segmentationId < 1999 and b.networkType = 'vlan'  ]]>
			</if> -->
			<if test="regionName != null">
				and b.region = #{regionName} 
			</if>
			<if test="countSize == 100 and loginId != null">
				and b.region in (select t.regionName 
								from resourcepool t,
									resourcepooldepartment a,
									oss_system_user b,
									oss_system_department c 
								where concat(',',#{loginId},',') like concat('%,',loginId,',%')
									and a.groupId = c.refGroupId
									and b.department = c.id
									and a.poolId = t.id
									and t.regionName is not null)
			</if>
			<if test="countSize == 10 and loginId != null">
				and b.region in (select t.regionName from resourcepool t,resourcepoolusers k where t.id = k.poolId and t.regionName is not null and concat(',',#{loginId},',') like concat('%,',loginId,',%'))
			</if>
		</where>
	</select>
	<select id="selectRNExtVirNetworks" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.*,
				b.*,
				ifnull(routerExternal,'') routerExtenal,
				(select count(*) from rn_ext_vir_network_subnet k where k.networkId = b.uuid) subnets,
				(select count(*) from oss_engine_regions r where r.adminNetworkUuid = b.uuid) adminCount 
			from rn_base a 
			join rn_ext_vir_network b on a.id=b.nodeId 
		]]>
			<!-- 
			<if test="type == 'private'">
				<![CDATA[
		            join v_department_projectId d on d.projectId = b.projectId and (concat(',',#{loginId},',') like concat('%,',d.loginId,',%') or b.shared = 1) 
				]]>
			</if>
			 -->
		<where>
			<![CDATA[  
				and a.type='VIR_NETWORK' and a.subType='VIR_NETWORK' and a.rnStatus = 'NORMAL' 
				and (
					a.id in (select resourceId from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_NETWORK')  or 
					0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_NETWORK') or 
					(0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_NETWORK') and false)
				)
				and b.projectId in (select projectId from v_department_projectId e where concat(',',#{loginId},',') like concat('%,',e.loginId,',%')) 
			]]>
			<if test="id != null">
				and a.id = #{id}
			</if>
			<if test="uuid != null">
				and b.uuid = #{uuid}
			</if>
			<if test="key != null">
				<![CDATA[ and a.name like concat('%',#{key},'%')]]>
			</if>
			<!-- <if test="type == 'public' ">
				<![CDATA[ and b.shared = 1  ]]>
			</if>
			<if test="type == 'proprietary'">
				<![CDATA[ and (b.segmentationId >= 1999 or b.networkType = 'flat')  and b.shared = 0 ]]>
			</if>
			<if test="type == 'private'">
				<![CDATA[ and b.segmentationId < 1999 and b.networkType = 'vlan' ]]>
			</if> -->
			<if test="networkType != null">
				<![CDATA[ and concat(',',#{networkType},',') like concat('%,',b.networkType,',%') ]]>
			</if>
			<if test="regionName != null">
				and b.region = #{regionName} 
			</if>
			<if test="countSize == 100 and loginId != null">
				and b.region in (select t.regionName 
								from resourcepool t,
									resourcepooldepartment a,
									oss_system_user b,
									oss_system_department c 
								where concat(',',#{loginId},',') like concat('%,',loginId,',%')
									and a.groupId = c.refGroupId
									and b.department = c.id
									and a.poolId = t.id
									and t.regionName is not null)
			</if>
			<if test="countSize == 10 and loginId != null">
				and b.region in (select t.regionName from resourcepool t,resourcepoolusers k where t.id = k.poolId and t.regionName is not null and concat(',',#{loginId},',') like concat('%,',loginId,',%'))
			</if>
		</where>
		<![CDATA[  order by a.id desc ]]>
		<if test="beginIndex != null">
			limit #{beginIndex},#{perPage}
		</if>
	</select>
	
	<select id="selectRNExtVirProprietaryNetworksCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select count(*) totalSize
			from rn_base a 
			join rn_ext_vir_network b on a.id=b.nodeId 
		]]>
				<if test="self != null">
					join v_department_projectId d on d.projectId = b.projectId and concat(',',#{loginId},',') like concat('%,',d.loginId,',%') 
				</if>
		<![CDATA[
				left join v_department_projectId e on e.projectId = b.projectId and e.loginId = ${currentLoginId} 
		]]>
		<where>
			<![CDATA[  
				and a.type='VIR_NETWORK' and a.subType='VIR_NETWORK' 
				and (
					a.id in (select resourceId from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_NETWORK')  or 
					0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_NETWORK') or 
					(0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_NETWORK') and false)
				)
			]]>
			<if test="id != null">
				and a.id = #{id}
			</if>
			<if test="uuid != null">
				and b.uuid = #{uuid}
			</if>
			<if test="key != null">
				<![CDATA[ and a.name like concat('%',#{key},'%')]]>
			</if>
			<if test="type == 'proprietary'">
				<![CDATA[ and (b.segmentationId >= 1999 or networkType = 'flat') and b.shared = 0]]>
			</if>
			<if test="networkType != null">
				<![CDATA[ and concat(',',#{networkType},',') like concat('%,',b.networkType,',%') ]]>
			</if>
		</where>
		<![CDATA[  order by a.id desc ]]>
		<if test="beginIndex != null">
			limit #{beginIndex},#{perPage}
		</if>
	</select>
	<select id="selectRNExtVirProprietaryNetworks" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.*,
				b.*,
				ifnull(e.loginId,'') userId,
				(select name from oss_system_department where projectId = b.projectId) accountId,
				ifnull(routerExternal,'') routerExtenal,
				(select count(*) from rn_ext_vir_network_subnet k where k.networkId = b.uuid) subnets 
			from rn_base a 
			join rn_ext_vir_network b on a.id=b.nodeId 
		]]>
				<if test="self != null">
					join v_department_projectId d on d.projectId = a.projectId and concat(',',#{loginId},',') like concat('%,',d.loginId,',%') 
				</if>
		<![CDATA[
				left join v_department_projectId e on e.projectId = a.projectId and e.loginId = ${currentLoginId} 
		]]>
		<where>
			<![CDATA[  
				and a.type='VIR_NETWORK' and a.subType='VIR_NETWORK' 
				and (
					a.id in (select resourceId from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_NETWORK')  or 
					0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_NETWORK') or 
					(0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_NETWORK') and false)
				)
			]]>
			<if test="id != null">
				and a.id = #{id}
			</if>
			<if test="uuid != null">
				and b.uuid = #{uuid}
			</if>
			<if test="key != null">
				<![CDATA[ and a.name like concat('%',#{key},'%')]]>
			</if>
			<if test="type == 'proprietary'">
				<![CDATA[ and (b.segmentationId >= 1999 or networkType = 'flat') and b.shared = 0]]>
			</if>
			<if test="networkType != null">
				<![CDATA[ and concat(',',#{networkType},',') like concat('%,',b.networkType,',%') ]]>
			</if>
		</where>
		<![CDATA[  order by a.id desc ]]>
		<if test="beginIndex != null">
			limit #{beginIndex},#{perPage}
		</if>
	</select>
	<select id="selectRNExtVirPublicNetworksCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select count(*) totalSize
			from rn_base a 
			join rn_ext_vir_network b on a.id=b.nodeId 
			left join v_department_projectId e on e.projectId = b.projectId and e.loginId = ${currentLoginId}  
		]]>
		<where>
			<![CDATA[  
				and a.type='VIR_NETWORK' and a.subType='VIR_NETWORK' 
				and (
					a.id in (select resourceId from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_NETWORK')  or 
					0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_NETWORK') or 
					(0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_NETWORK') and false)
				)
			]]>
			<if test="id != null">
				and a.id = #{id}
			</if>
			<if test="uuid != null">
				and b.uuid = #{uuid}
			</if>
			<if test="key != null">
				<![CDATA[ and a.name like concat('%',#{key},'%')]]>
			</if>
			<if test="type == 'public'">
				<![CDATA[ and b.shared = 1 ]]>
			</if>
			<if test="networkType != null">
				<![CDATA[ and concat(',',#{networkType},',') like concat('%,',b.networkType,',%') ]]>
			</if>
		</where>
	</select>
	<select id="selectRNExtVirPublicNetworks" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.*,
				b.*,
				ifnull(e.loginId,'') userId,
				(select name from oss_system_department where projectId = b.projectId) accountId,
				ifnull(routerExternal,'') routerExtenal,
				(select count(*) from rn_ext_vir_network_subnet k where k.networkId = b.uuid) subnets,
				(select count(*) from oss_engine_regions r where r.adminNetworkUuid = b.uuid) adminCount 
			from rn_base a 
			join rn_ext_vir_network b on a.id=b.nodeId 
			join v_department_projectId d on d.projectId = b.projectId and (concat(',',#{loginId},',') like concat('%,',d.loginId,',%') or b.shared = 1) 			
			left join v_department_projectId e on e.projectId = b.projectId and e.loginId = ${currentLoginId} 
		]]>
		<where>
			<![CDATA[  
				and a.type='VIR_NETWORK' and a.subType='VIR_NETWORK' 
				and (
					a.id in (select resourceId from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_NETWORK')  or 
					0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_NETWORK') or 
					(0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_NETWORK') and false)
				)
			]]>
			<if test="id != null">
				and a.id = #{id}
			</if>
			<if test="uuid != null">
				and b.uuid = #{uuid}
			</if>
			<if test="key != null">
				<![CDATA[ and a.name like concat('%',#{key},'%')]]>
			</if>
			<if test="type == 'public'">
				<![CDATA[ and b.shared = 1]]>
			</if>
			<if test="networkType != null">
				<![CDATA[ and concat(',',#{networkType},',') like concat('%,',b.networkType,',%') ]]>
			</if>
		</where>
		<![CDATA[  order by a.id desc ]]>
		<if test="beginIndex != null">
			limit #{beginIndex},#{perPage}
		</if>
	</select>
	<select id="selectRNExtVirPrivateNetworksCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select count(*) totalSize
			from rn_base a 
			join rn_ext_vir_network b on a.id=b.nodeId 
		]]>
		<where>
			<![CDATA[  
				and a.rnStatus = 'NORMAL' 
				and (
					a.id in (select resourceId from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_NETWORK')  or 
					0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_NETWORK') or 
					(0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_NETWORK') and false)
				)
			]]>
			<if test="id != null">
				and a.id = #{id}
			</if>
			<if test="uuid != null">
				and b.uuid = #{uuid}
			</if>
			<if test="name != null">
				and a.name like concat('%',#{name},'%') 
			</if>
			<if test="regionName != null">
				and b.region=#{regionName} 
			</if>
			<if test="projectId != null">
				and b.projectId=#{projectId} 
			</if>
			<if test="status != null">
				and b.status = #{status}  
			</if>
			<if test="adminStateUp != null">
				and b.adminStateUp = #{adminStateUp}  
			</if>
			<if test="subnets != null and subnets ==1">
				and (select count(*) from rn_ext_vir_network_subnet k where k.networkId = b.uuid) > 0
			</if>
			<if test="subnets != null and subnets == 0">
				and (select count(*) from rn_ext_vir_network_subnet k where k.networkId = b.uuid) = 0
			</if>
			<if test="tagId != null">
				and a.id in ( select a.resourceId from oss_system_tag_resource a where a.createUser = #{loginId} and a.tagId = #{tagId} )
			</if>
			<if test="tagValue != null">
				and a.id in ( select a.resourceId from oss_system_tag_resource a 
							where a.createUser = #{loginId} and concat(',',#{tagValue},',') like concat('%,',a.value,',%'))
			</if>
			<if test="key != null">
				and (a.name like concat('%',#{key},'%') 
					 or a.id in (
								  		select a.resourceId from oss_system_tag_resource a 
										where a.createUser = #{loginId} and a.value like concat('%',#{key},'%') 
								)
					)
			</if>
			<if test="networkType != null">
				<![CDATA[ and concat(',',#{networkType},',') like concat('%,',b.networkType,',%') ]]>
			</if>
			<if test="countSize == 100 and loginId != null">
				and b.region in (select t.regionName 
								from resourcepool t,
									resourcepooldepartment a,
									oss_system_user b,
									oss_system_department c 
								where concat(',',#{loginId},',') like concat('%,',loginId,',%')
									and a.groupId = c.refGroupId
									and b.department = c.id
									and a.poolId = t.id
									and t.regionName is not null) 
				and b.projectId in (select d.projectId from v_department_projectId d where concat(',',#{loginId},',') like concat('%,',d.loginId,',%'))
			</if>
			<if test="countSize == 10 and loginId != null">
				and b.region in (select t.regionName from resourcepool t,resourcepoolusers k where t.id = k.poolId and t.regionName is not null and concat(',',#{loginId},',') like concat('%,',loginId,',%'))
				and b.projectId in (select d.projectId from v_department_projectId d where concat(',',#{loginId},',') like concat('%,',d.loginId,',%'))
			</if>
			<if test="list != null">
				<![CDATA[ and ( ]]>
				<foreach collection="list" index="index" item="rule" open=" " separator="" close=" ">
					<if test="index > 0">
						<if test="queryColumn != null and queryColumn == 'ALL'">
							<choose>
								<when test="rule.type == 'notContain' or rule.type == 'notEqual' or rule.type == 'notStartWith' or rule.type == 'notEndWith' or rule.type == 'isEmpty'">
									and 
								</when>
								<otherwise>
									or
								</otherwise>
							</choose>
						</if>
						<if test="queryColumn == null">
							and 
						</if>
					</if>
					<choose>
						<when test="rule.key == 'subnets'">
							ifnull((select count(*) from rn_ext_vir_network_subnet k where k.networkId = b.uuid),'')
						</when>
						<otherwise>
							ifnull(${rule.key},'') 
						</otherwise>
					</choose>
		   			
					<if test="rule.type == 'contain'">
						<![CDATA[ like concat('%',#{rule.value},'%') ]]>
					</if>
					<if test="rule.type == 'notContain'">
						<![CDATA[ not like concat('%',#{rule.value},'%') ]]>
					</if>
					<if test="rule.type == 'equal'">
						<![CDATA[ = #{rule.value} ]]>
					</if>
					<if test="rule.type == 'notEqual'">
						<![CDATA[ != #{rule.value} ]]>
					</if>
					<if test="rule.type == 'notStartWith'">
						<![CDATA[ not like concat (#{rule.value},'%') ]]>
					</if>
					<if test="rule.type == 'startWith'">
						<![CDATA[ like concat (#{rule.value},'%') ]]>
					</if>
					<if test="rule.type == 'notEndWith'">
						<![CDATA[ not like concat('%',#{rule.value}) ]]>
					</if>
					<if test="rule.type == 'endWith'">
						<![CDATA[ like concat('%',#{rule.value}) ]]>
					</if>
					<if test="rule.type == 'greaterThan'">
						<![CDATA[ >= #{rule.value} ]]>
					</if>
					<if test="rule.type == 'isEmpty'">
						<![CDATA[ = '' ]]>
					</if>
		  		</foreach>
		  		<![CDATA[ ) ]]>
			</if>
		</where>
	</select>
	<!-- <if test="type == 'private'">
			<![CDATA[ and b.segmentationId < 1999 and b.networkType = 'vlan' ]]>
		</if> -->
	<select id="selectRNExtVirPrivateNetworks" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.*,
				b.*,
				ifnull(routerExternal,'') routerExtenal,
				(select count(*) from rn_ext_vir_network_subnet k where k.networkId = b.uuid) subnets 
			from rn_base a 
			join rn_ext_vir_network b on a.id=b.nodeId 
		]]>
		<where>
			<![CDATA[  
				and a.rnStatus = 'NORMAL' 
				and (
					a.id in (select resourceId from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_NETWORK')  or 
					0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_NETWORK') or 
					(0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_NETWORK') and false)
				)
			]]>
			<if test="id != null">
				and a.id = #{id}
			</if>
			<if test="uuid != null">
				and b.uuid = #{uuid}
			</if>
			<if test="name != null">
				and a.name like concat('%',#{name},'%') 
			</if>
			<if test="regionName != null">
				and b.region=#{regionName} 
			</if>
			<if test="projectId != null">
				and b.projectId=#{projectId} 
			</if>
			<if test="status != null">
				and b.status = #{status}  
			</if>
			<if test="adminStateUp != null">
				and b.adminStateUp = #{adminStateUp}  
			</if>
			<if test="subnets != null and subnets ==1">
				and (select count(*) from rn_ext_vir_network_subnet k where k.networkId = b.uuid) > 0
			</if>
			<if test="subnets != null and subnets == 0">
				and (select count(*) from rn_ext_vir_network_subnet k where k.networkId = b.uuid) = 0
			</if>
			<if test="tagId != null">
				and a.id in ( select a.resourceId from oss_system_tag_resource a where a.createUser = #{loginId} and a.tagId = #{tagId} )
			</if>
			<if test="tagValue != null">
				and a.id in ( select a.resourceId from oss_system_tag_resource a 
							where a.createUser = #{loginId} and concat(',',#{tagValue},',') like concat('%,',a.value,',%'))
			</if>
			<if test="key != null">
				and (a.name like concat('%',#{key},'%') 
					 or a.id in (
								  		select a.resourceId from oss_system_tag_resource a 
										where a.createUser = #{loginId} and a.value like concat('%',#{key},'%') 
								)
					)
			</if>
			<if test="networkType != null">
				<![CDATA[ and concat(',',#{networkType},',') like concat('%,',b.networkType,',%') ]]>
			</if>
			<if test="countSize == 100 and loginId != null">
				and b.region in (select t.regionName 
								from resourcepool t,
									resourcepooldepartment a,
									oss_system_user b,
									oss_system_department c 
								where concat(',',#{loginId},',') like concat('%,',loginId,',%')
									and a.groupId = c.refGroupId
									and b.department = c.id
									and a.poolId = t.id
									and t.regionName is not null) 
				and b.projectId in (select d.projectId from v_department_projectId d where concat(',',#{loginId},',') like concat('%,',d.loginId,',%'))
			</if>
			<if test="countSize == 10 and loginId != null">
				and b.region in (select t.regionName from resourcepool t,resourcepoolusers k where t.id = k.poolId and t.regionName is not null and concat(',',#{loginId},',') like concat('%,',loginId,',%'))
				and b.projectId in (select d.projectId from v_department_projectId d where concat(',',#{loginId},',') like concat('%,',d.loginId,',%'))
			</if>
			<if test="list != null">
				<![CDATA[ and ( ]]>
				<foreach collection="list" index="index" item="rule" open=" " separator="" close=" ">
					<if test="index > 0">
						<if test="queryColumn != null and queryColumn == 'ALL'">
							<choose>
								<when test="rule.type == 'notContain' or rule.type == 'notEqual' or rule.type == 'notStartWith' or rule.type == 'notEndWith' or rule.type == 'isEmpty'">
									and 
								</when>
								<otherwise>
									or
								</otherwise>
							</choose>
						</if>
						<if test="queryColumn == null">
							and 
						</if>
					</if>
					<choose>
						<when test="rule.key == 'subnets'">
							ifnull((select count(*) from rn_ext_vir_network_subnet k where k.networkId = b.uuid),'')
						</when>
						<otherwise>
							ifnull(${rule.key},'') 
						</otherwise>
					</choose>
		   			
					<if test="rule.type == 'contain'">
						<![CDATA[ like concat('%',#{rule.value},'%') ]]>
					</if>
					<if test="rule.type == 'notContain'">
						<![CDATA[ not like concat('%',#{rule.value},'%') ]]>
					</if>
					<if test="rule.type == 'equal'">
						<![CDATA[ = #{rule.value} ]]>
					</if>
					<if test="rule.type == 'notEqual'">
						<![CDATA[ != #{rule.value} ]]>
					</if>
					<if test="rule.type == 'notStartWith'">
						<![CDATA[ not like concat (#{rule.value},'%') ]]>
					</if>
					<if test="rule.type == 'startWith'">
						<![CDATA[ like concat (#{rule.value},'%') ]]>
					</if>
					<if test="rule.type == 'notEndWith'">
						<![CDATA[ not like concat('%',#{rule.value}) ]]>
					</if>
					<if test="rule.type == 'endWith'">
						<![CDATA[ like concat('%',#{rule.value}) ]]>
					</if>
					<if test="rule.type == 'greaterThan'">
						<![CDATA[ >= #{rule.value} ]]>
					</if>
					<if test="rule.type == 'isEmpty'">
						<![CDATA[ = '' ]]>
					</if>
		  		</foreach>
		  		<![CDATA[ ) ]]>
			</if>
		</where>
		
		<if test="instanceSort != null">
			<![CDATA[  order by ${instanceSort} ${instanceSortDirection} ]]>
		</if>
		<if test="instanceSort == null">
			<![CDATA[  order by a.id desc ]]>
		</if>
		
		<if test="beginIndex != null">
			limit #{beginIndex},#{perPage}
		</if>
	</select>
	
	<select id="selectRNExtVirNetworkSubnets" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select * 
			from rn_ext_vir_network_subnet a
		]]>
		<where>
			<![CDATA[ and a.rnStatus = 'NORMAL' ]]>
			<if test="networkId != null">
				and a.networkId = #{networkId}
			</if>
			<if test="id != null">
				and a.id = #{id}
			</if>
		</where>
		<![CDATA[  order by a.id desc ]]>
	</select>
	<select id="selectRNExtVirNetworkPorts" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select * 
			from rn_ext_vir_network_port a
		]]>
		<where>
			<![CDATA[ and a.rnStatus = 'NORMAL' ]]>
			<if test="networkId != null">
				and a.networkId = #{networkId}
			</if>
			<if test="id != null">
				and a.id = #{id}
			</if>
		</where>
		<![CDATA[  order by a.id desc ]]>
	</select>

	<select id="selectRNExtVirVolumesCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select count(*) totalSize
			from rn_base a 
			join rn_ext_vir_volumes b on a.id = b.nodeId 
		]]>
		<where>
			<![CDATA[  
				and a.type='VIR_VOLUME' and a.subType='VIR_VOLUME' and a.rnStatus = 'NORMAL'  
				and (
					a.id in (select resourceId from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_VOLUME')  or 
					0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_VOLUME') or 
					(0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_VOLUME') and false)
				)
			]]>
			<if test="id != null">
				and a.id = #{id}
			</if>
			<if test="tagId != null">
				and a.id in ( select a.resourceId from oss_system_tag_resource a where concat(',',#{loginId},',') like concat('%,',a.createUser,',%') and a.tagId = #{tagId} )
			</if>
			<if test="tagValue != null">
				and a.id in ( select a.resourceId from oss_system_tag_resource a 
							where a.createUser = #{loginId} and concat(',',#{tagValue},',') like concat('%,',a.value,',%'))
			</if>
			<if test="volumeIds != null">
				and concat(',',#{volumeIds},',') like concat('%,',a.id,',%')
			</if>
			<if test="name != null">
				and (a.name like concat('%',#{name},'%') or b.displayName like concat('%',#{name},'%'))
			</if>
			<if test="size != null">
				and b.size = #{size}
			</if>
			<if test="status != null">
				and b.status = #{status}
			</if>
			<if test="regionName != null">
				and b.region=#{regionName} 
			</if>
			<if test="projectId != null">
				and b.projectId=#{projectId} 
			</if>
			<if test="poolType != null and poolType == 'PLATFORM'">
				and b.region in (select regionName from resourcepool where poolType = 'MANAGE' and type in ('VIRTUAL') and regionName is not null)
			</if>
			<if test="poolType == null">
				and b.region in (select regionName from resourcepool where poolType = 'COMPUTE' and type in ('VIRTUAL') and regionName is not null)
			</if>
			<if test="countSize == 100 and loginId != null">
				and b.region in (select t.regionName 
								from resourcepool t,
									resourcepooldepartment a,
									oss_system_user b,
									oss_system_department c 
								where concat(',',#{loginId},',') like concat('%,',loginId,',%')
									and a.groupId = c.refGroupId
									and b.department = c.id
									and a.poolId = t.id
									and t.regionName is not null) 
				and b.projectId in (select d.projectId from v_department_projectId d where concat(',',#{loginId},',') like concat('%,',d.loginId,',%'))
			</if>
			<if test="countSize == 10 and loginId != null">
				and b.region in (select t.regionName from resourcepool t,resourcepoolusers k where t.id = k.poolId and t.regionName is not null and concat(',',#{loginId},',') like concat('%,',loginId,',%'))
				and b.projectId in (select d.projectId from v_department_projectId d where concat(',',#{loginId},',') like concat('%,',d.loginId,',%'))
			</if>
			<if test="key != null">
				<![CDATA[ 
					and (a.name like concat('%',#{key},'%') 
						or a.id in (
							select a.resourceId from oss_system_tag_resource a 
									where concat(',',#{loginId},',') like concat('%,',a.createUser,',%') and a.value like concat('%',#{key},'%') 
							)
						)
				]]>
			</if>
			<if test="list != null">
				<![CDATA[ and ( ]]>
				<foreach collection="list" index="index" item="rule" open=" " separator="" close=" ">
					<if test="index > 0">
						<if test="queryColumn != null and queryColumn == 'ALL'">
							<choose>
								<when test="rule.type == 'notContain' or rule.type == 'notEqual' or rule.type == 'notStartWith' or rule.type == 'notEndWith' or rule.type == 'isEmpty'">
									and 
								</when>
								<otherwise>
									or
								</otherwise>
							</choose>
						</if>
						<if test="queryColumn == null">
							and 
						</if>
					</if>
					<choose>
						<when test="rule.key == 'hostName'">
							ifnull(b.hostName,'')
						</when>
						<otherwise>
							ifnull(${rule.key},'') 
						</otherwise>
					</choose>
		   			
					<if test="rule.type == 'contain'">
						<![CDATA[ like concat('%',#{rule.value},'%') ]]>
					</if>
					<if test="rule.type == 'notContain'">
						<![CDATA[ not like concat('%',#{rule.value},'%') ]]>
					</if>
					<if test="rule.type == 'equal'">
						<![CDATA[ = #{rule.value} ]]>
					</if>
					<if test="rule.type == 'notEqual'">
						<![CDATA[ != #{rule.value} ]]>
					</if>
					<if test="rule.type == 'notStartWith'">
						<![CDATA[ not like concat (#{rule.value},'%') ]]>
					</if>
					<if test="rule.type == 'startWith'">
						<![CDATA[ like concat (#{rule.value},'%') ]]>
					</if>
					<if test="rule.type == 'notEndWith'">
						<![CDATA[ not like concat('%',#{rule.value}) ]]>
					</if>
					<if test="rule.type == 'endWith'">
						<![CDATA[ like concat('%',#{rule.value}) ]]>
					</if>
					<if test="rule.type == 'isEmpty'">
						<![CDATA[ = '' ]]>
					</if>
		  		</foreach>
		  		<![CDATA[ ) ]]>
			</if>
		</where>
	</select>
	<select id="selectRNExtVirVolumes" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select b.*,a.*
			from rn_base a 
			join rn_ext_vir_volumes b on a.id = b.nodeId 
		]]>
		<where>
			<![CDATA[  
				and a.type='VIR_VOLUME' and a.subType='VIR_VOLUME' and a.rnStatus = 'NORMAL'  
				and (
					a.id in (select resourceId from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_VOLUME')  or 
					0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_VOLUME') or 
					(0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_VOLUME') and false)
				)
			]]>
			<if test="id != null">
				and a.id = #{id}
			</if>
			<if test="tagId != null">
				and a.id in ( select a.resourceId from oss_system_tag_resource a where concat(',',#{loginId},',') like concat('%,',a.createUser,',%') and a.tagId = #{tagId} )
			</if>
			<if test="tagValue != null">
				and a.id in ( select a.resourceId from oss_system_tag_resource a 
							where concat(',',#{loginId},',') like concat('%,',a.createUser,',%') and concat(',',#{tagValue},',') like concat('%,',a.value,',%'))
			</if>
			<if test="volumeIds != null">
				and concat(',',#{volumeIds},',') like concat('%,',a.id,',%')
			</if>
			<if test="name != null">
				and (a.name like concat('%',#{name},'%') or b.displayName like concat('%',#{name},'%'))
			</if>
			<if test="size != null">
				and b.size = #{size}
			</if>
			<if test="status != null">
				and b.status = #{status}
			</if>
			<if test="regionName != null">
				and b.region=#{regionName} 
			</if>
			<if test="projectId != null">
				and b.projectId=#{projectId} 
			</if>
			<if test="poolType != null and poolType == 'PLATFORM'">
				and b.region in (select regionName from resourcepool where poolType = 'MANAGE' and type in ('VIRTUAL') and regionName is not null)
			</if>
			<if test="poolType == null">
				and b.region in (select regionName from resourcepool where poolType = 'COMPUTE' and type in ('VIRTUAL') and regionName is not null)
			</if>
			<if test="countSize == 100 and loginId != null">
				and b.region in (select t.regionName 
								from resourcepool t,
									resourcepooldepartment a,
									oss_system_user b,
									oss_system_department c 
								where concat(',',#{loginId},',') like concat('%,',loginId,',%')
									and a.groupId = c.refGroupId
									and b.department = c.id
									and a.poolId = t.id
									and t.regionName is not null) 
				and b.projectId in (select d.projectId from v_department_projectId d where concat(',',#{loginId},',') like concat('%,',d.loginId,',%'))
			</if>
			<if test="countSize == 10 and loginId != null">
				and b.region in (select t.regionName from resourcepool t,resourcepoolusers k where t.id = k.poolId and t.regionName is not null and concat(',',#{loginId},',') like concat('%,',loginId,',%'))
				and b.projectId in (select d.projectId from v_department_projectId d where  concat(',',#{loginId},',') like concat('%,',d.loginId,',%'))
			</if>
			<if test="key != null">
				<![CDATA[ 
					and (a.name like concat('%',#{key},'%') 
						or a.id in (
							select a.resourceId from oss_system_tag_resource a 
									where concat(',',#{loginId},',') like concat('%,',a.createUser,',%') and a.value like concat('%',#{key},'%') 
							)
						)
				]]>
			</if>
			<if test="list != null">
				<![CDATA[ and ( ]]>
				<foreach collection="list" index="index" item="rule" open=" " separator="" close=" ">
					<if test="index > 0">
						<if test="queryColumn != null and queryColumn == 'ALL'">
							<choose>
								<when test="rule.type == 'notContain' or rule.type == 'notEqual' or rule.type == 'notStartWith' or rule.type == 'notEndWith' or rule.type == 'isEmpty'">
									and 
								</when>
								<otherwise>
									or
								</otherwise>
							</choose>
						</if>
						<if test="queryColumn == null">
							and 
						</if>
					</if>
					<choose>
						<when test="rule.key == 'hostName'">
							ifnull(b.hostName,'')
						</when>
						<otherwise>
							ifnull(${rule.key},'') 
						</otherwise>
					</choose>
		   			
					<if test="rule.type == 'contain'">
						<![CDATA[ like concat('%',#{rule.value},'%') ]]>
					</if>
					<if test="rule.type == 'notContain'">
						<![CDATA[ not like concat('%',#{rule.value},'%') ]]>
					</if>
					<if test="rule.type == 'equal'">
						<![CDATA[ = #{rule.value} ]]>
					</if>
					<if test="rule.type == 'notEqual'">
						<![CDATA[ != #{rule.value} ]]>
					</if>
					<if test="rule.type == 'notStartWith'">
						<![CDATA[ not like concat (#{rule.value},'%') ]]>
					</if>
					<if test="rule.type == 'startWith'">
						<![CDATA[ like concat (#{rule.value},'%') ]]>
					</if>
					<if test="rule.type == 'notEndWith'">
						<![CDATA[ not like concat('%',#{rule.value}) ]]>
					</if>
					<if test="rule.type == 'endWith'">
						<![CDATA[ like concat('%',#{rule.value}) ]]>
					</if>
					<if test="rule.type == 'isEmpty'">
						<![CDATA[ = '' ]]>
					</if>
		  		</foreach>
		  		<![CDATA[ ) ]]>
			</if>
		</where>
		<if test="instanceSort != null">
			<![CDATA[  order by ${instanceSort} ${instanceSortDirection} ]]>
		</if>
		<if test="instanceSort == null">
			<![CDATA[  order by a.id desc ]]>
		</if>
		
		<if test="beginIndex != null">
			limit #{beginIndex},#{perPage}
		</if>
	</select>
	
	<insert id="insertRNExtVirHypervisor" parameterType="java.util.HashMap">
		<![CDATA[
			insert into rn_ext_vir_hypervisor (nodeId) values (#{nodeId})
		]]>
	</insert>
	
	<select id="selectHostAggregatesCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select count(*) totalSize from rp_vir_host_aggregates t
				  join oss_engine_regions m on m.region_name = t.region
				  join resourcepool n on n.regionName = m.region_name
			left join(select a.host_aggregate,
								b.poolId,
								c.regionName,
								sum(d.memory) memory,
								sum(d.vcpus) vcpus,
								sum(d.localDisk) localDisk,
								sum(a.vcpus_used) vcpus_used,
								sum(a.ram_used) ram_used,
								sum(a.local_disk_used) local_disk_used,
								count(*) subCount
			from rn_ext_vir_hypervisor a,
					rn_ext_physical b,
					resourcepool c,
					rn_ext_compute d,
					rn_base f
			where a.nodeId = b.nodeId
				and c.id = b.poolId
				and d.nodeId = a.nodeId
				and a.nodeid = f.id
			group by a.host_aggregate,b.poolId,c.regionName ) k on  t.id = k.host_aggregate and t.region = k.regionName
			left join (select a.poolid,
								count(*) subCount,
								sum(b.memory) memory,
								sum(b.vcpus) vcpus,
								sum(b.localDisk) localDisk
						from rn_ext_physical a,
							rn_ext_compute b,
							rn_base c
						where a.nodeid = b.nodeid
							and a.nodeid = c.id
							and c.rnstatus = 'NORMAL'
							group by a.poolid) y on y.poolid = n.id   
		]]>
		<where>
			<![CDATA[ and t.deleted = 0 ]]>
			<if test="id != null">
				and t.id = #{id}
			</if>
			<if test="name != null">
				and t.name like concat('%',#{name},'%') 
			</if>
			<if test="regionName != null">
				and t.region=#{regionName} 
			</if>
			<if test="countSize == 100 and loginId != null">
				and t.region in (select t.regionName 
								from resourcepool t,
									resourcepooldepartment a,
									oss_system_user b,
									oss_system_department c 
								where concat(',',#{loginId},',') like concat('%,',loginId,',%') 
									and a.groupId = c.refGroupId
									and b.department = c.id
									and a.poolId = t.id
									and t.regionName is not null) 
			</if>
			<if test="countSize == 10 and loginId != null">
				and t.region in (select t.regionName from resourcepool t,resourcepoolusers k where t.id = k.poolId and t.regionName is not null and concat(',',#{loginId},',') like concat('%,',loginId,',%'))
			</if>
			<if test="list != null">
				<![CDATA[ and ( ]]>
				<foreach collection="list" index="index" item="rule" open=" " separator="" close=" ">
					<if test="index > 0">
						<if test="queryColumn != null and queryColumn == 'ALL'">
							<choose>
								<when test="rule.type == 'notContain' or rule.type == 'notEqual' or rule.type == 'notStartWith' or rule.type == 'notEndWith' or rule.type == 'isEmpty'">
									and 
								</when>
								<otherwise>
									or
								</otherwise>
							</choose>
						</if>
						<if test="queryColumn == null">
							and 
						</if>
					</if>
					<choose>
						<when test="rule.key == 'name'">
							ifnull(t.name,'')
						</when>
						<when test="rule.key == 'vcpusTotal'">
							ifnull(k.vcpus,0)
						</when>
						<when test="rule.key == 'vcpusUsed'">
							ifnull(k.vcpus_used,0)
						</when>
						<when test="rule.key == 'memoryTotal'">
							ifnull(k.memory,0)
						</when>
						<when test="rule.key == 'memoryUsed'">
							ifnull(k.ram_used,0)
						</when>
						<when test="rule.key == 'diskTotal'">
							ifnull(k.localDisk,0)
						</when>
						<when test="rule.key == 'diskUsed'">
							ifnull(k.local_disk_used,0)
						</when>
						<when test="rule.key == 'hostCount'">
							ifnull(if(m.`type`='VMWARE',y.subCount,k.subCount),0)
						</when>
						<otherwise>
							ifnull(${rule.key},'') 
						</otherwise>
					</choose>
		   			
					<if test="rule.type == 'contain'">
						<![CDATA[ like concat('%',#{rule.value},'%') ]]>
					</if>
					<if test="rule.type == 'notContain'">
						<![CDATA[ not like concat('%',#{rule.value},'%') ]]>
					</if>
					<if test="rule.type == 'equal'">
						<![CDATA[ = #{rule.value} ]]>
					</if>
					<if test="rule.type == 'notEqual'">
						<![CDATA[ != #{rule.value} ]]>
					</if>
					<if test="rule.type == 'notStartWith'">
						<![CDATA[ not like concat (#{rule.value},'%') ]]>
					</if>
					<if test="rule.type == 'startWith'">
						<![CDATA[ like concat (#{rule.value},'%') ]]>
					</if>
					<if test="rule.type == 'notEndWith'">
						<![CDATA[ not like concat('%',#{rule.value}) ]]>
					</if>
					<if test="rule.type == 'endWith'">
						<![CDATA[ like concat('%',#{rule.value}) ]]>
					</if>
					<if test="rule.type == 'isEmpty'">
						<![CDATA[ = '' ]]>
					</if>
		  		</foreach>
		  		<![CDATA[ ) ]]>
			</if>
		</where>
	</select>
	<select id="selectHostAggregates" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select t.*,
					n.id poolId,
					m.type regionType,
					ifnull(k.memory,0) memoryTotal,
					ifnull(k.vcpus,0) vcpusTotal,
					ifnull(k.localDisk,0) diskTotal,
					ifnull(k.vcpus_used,0) vcpusUsed,
					ifnull(k.ram_used,0) memoryUsed,
					ifnull(k.local_disk_used,0) diskUsed,
					ifnull(if(m.`type`='VMWARE',y.subCount,k.subCount),0) hostCount
			from rp_vir_host_aggregates t
				  join oss_engine_regions m on m.region_name = t.region
				  join resourcepool n on n.regionName = m.region_name
			left join(select a.host_aggregate,
								b.poolId,
								c.regionName,
								sum(d.memory) memory,
								sum(d.vcpus) vcpus,
								sum(d.localDisk) localDisk,
								sum(a.vcpus_used) vcpus_used,
								sum(a.ram_used) ram_used,
								sum(a.local_disk_used) local_disk_used,
								count(*) subCount
			from rn_ext_vir_hypervisor a,
					rn_ext_physical b,
					resourcepool c,
					rn_ext_compute d,
					rn_base f
			where a.nodeId = b.nodeId
				and c.id = b.poolId
				and d.nodeId = a.nodeId
				and a.nodeid = f.id
			group by a.host_aggregate,b.poolId,c.regionName ) k on  t.id = k.host_aggregate and t.region = k.regionName
			left join (select a.poolid,
								count(*) subCount,
								sum(b.memory) memory,
								sum(b.vcpus) vcpus,
								sum(b.localDisk) localDisk
						from rn_ext_physical a,
							rn_ext_compute b,
							rn_base c
						where a.nodeid = b.nodeid
							and a.nodeid = c.id
							and c.rnstatus = 'NORMAL'
							group by a.poolid) y on y.poolid = n.id  
		]]>
		<where>
			<![CDATA[ and t.deleted = 0 ]]>
			<if test="id != null">
				and t.id = #{id}
			</if>
			<if test="name != null">
				and t.name like concat('%',#{name},'%') 
			</if>
			<if test="regionName != null">
				and t.region=#{regionName} 
			</if>
			<if test="countSize == 100 and loginId != null">
				and t.region in (select t.regionName 
								from resourcepool t,
									resourcepooldepartment a,
									oss_system_user b,
									oss_system_department c 
								where concat(',',#{loginId},',') like concat('%,',loginId,',%')
									and a.groupId = c.refGroupId
									and b.department = c.id
									and a.poolId = t.id
									and t.regionName is not null) 
			</if>
			<if test="countSize == 10 and loginId != null">
				and t.region in (select t.regionName from resourcepool t,resourcepoolusers k where t.id = k.poolId and t.regionName is not null and concat(',',#{loginId},',') like concat('%,',loginId,',%'))
			</if>
			<if test="list != null">
				<![CDATA[ and ( ]]>
				<foreach collection="list" index="index" item="rule" open=" " separator="" close=" ">
					<if test="index > 0">
						<if test="queryColumn != null and queryColumn == 'ALL'">
							<choose>
								<when test="rule.type == 'notContain' or rule.type == 'notEqual' or rule.type == 'notStartWith' or rule.type == 'notEndWith' or rule.type == 'isEmpty'">
									and 
								</when>
								<otherwise>
									or
								</otherwise>
							</choose>
						</if>
						<if test="queryColumn == null">
							and 
						</if>
					</if>
					<choose>
						<when test="rule.key == 'name'">
							ifnull(t.name,'')
						</when>
						<when test="rule.key == 'vcpusTotal'">
							ifnull(k.vcpus,0)
						</when>
						<when test="rule.key == 'vcpusUsed'">
							ifnull(k.vcpus_used,0)
						</when>
						<when test="rule.key == 'memoryTotal'">
							ifnull(k.memory,0)
						</when>
						<when test="rule.key == 'memoryUsed'">
							ifnull(k.ram_used,0)
						</when>
						<when test="rule.key == 'diskTotal'">
							ifnull(k.localDisk,0)
						</when>
						<when test="rule.key == 'diskUsed'">
							ifnull(k.local_disk_used,0)
						</when>
						<when test="rule.key == 'hostCount'">
							ifnull(if(m.`type`='VMWARE',y.subCount,k.subCount),0)
						</when>
						<otherwise>
							ifnull(${rule.key},'') 
						</otherwise>
					</choose>
		   			
					<if test="rule.type == 'contain'">
						<![CDATA[ like concat('%',#{rule.value},'%') ]]>
					</if>
					<if test="rule.type == 'notContain'">
						<![CDATA[ not like concat('%',#{rule.value},'%') ]]>
					</if>
					<if test="rule.type == 'equal'">
						<![CDATA[ = #{rule.value} ]]>
					</if>
					<if test="rule.type == 'notEqual'">
						<![CDATA[ != #{rule.value} ]]>
					</if>
					<if test="rule.type == 'notStartWith'">
						<![CDATA[ not like concat (#{rule.value},'%') ]]>
					</if>
					<if test="rule.type == 'startWith'">
						<![CDATA[ like concat (#{rule.value},'%') ]]>
					</if>
					<if test="rule.type == 'notEndWith'">
						<![CDATA[ not like concat('%',#{rule.value}) ]]>
					</if>
					<if test="rule.type == 'endWith'">
						<![CDATA[ like concat('%',#{rule.value}) ]]>
					</if>
					<if test="rule.type == 'isEmpty'">
						<![CDATA[ = '' ]]>
					</if>
		  		</foreach>
		  		<![CDATA[ ) ]]>
			</if>
		</where>
		
		<if test="instanceSort != null">
			<![CDATA[  order by ${instanceSort} ${instanceSortDirection} ]]>
		</if>
		<if test="instanceSort == null">
			<![CDATA[ order by t.created_at desc ]]>
		</if>
		<if test="beginIndex != null">
			limit #{beginIndex},#{perPage}
		</if>
	</select>
	<update id="updateHostAggregate" parameterType="java.util.HashMap">
		<![CDATA[
			update rp_vir_host_aggregates set id=#{id} 
		]]>
		<if test="name != null">
			, name = #{name}
		</if>
		<if test="availability_zone != null">
			, availability_zone = #{availability_zone}
		</if>
		<if test="availability_zone_zh_cn != null">
			, availability_zone_zh_cn = #{availability_zone_zh_cn}
		</if>
		<if test="cpu_oversub != null">
			, cpu_oversub = #{cpu_oversub}
		</if>
		<if test="ram_oversub != null">
			, ram_oversub = #{ram_oversub}
		</if>
		<if test="disk_oversub != null">
			, disk_oversub = #{disk_oversub}
		</if>
		<if test="metadata != null">
			, metadata = #{metadata}
		</if>
		<if test="deleted != null">
			, deleted = #{deleted}
		</if>
		<![CDATA[	
			where id = #{id} and region = #{region} 
		]]>
	</update>
	<select id="selectHostAggregateHostsCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<if test="regionType == 'VMWARE'">
		<![CDATA[
			select count(*) totalSize
			from rn_base b 
				join rn_ext_compute c on c.nodeId = b.id 
				join rn_ext_physical d on d.nodeId = b.id 
				join resourcepool e on e.id = d.poolId
				join rp_vir_host_aggregates k on k.region = e.regionName
				
			where k.deleted = 0
				and b.rnstatus = 'NORMAL'
			]]>
				<if test="nodeId != null">
					and b.id = #{nodeId}
				</if>
				<if test="regionName != null">
					and e.regionName = #{regionName}
				</if>
				<if test="hostAggregate != null">
					and k.id=#{hostAggregate} 
				</if>
		</if>
		<if test="regionType != 'VMWARE'">
			<![CDATA[
				select count(*) totalSize  
				from rn_ext_vir_hypervisor a 
				join rn_base b on a.nodeId = b.id 
				join rn_ext_compute c on c.nodeId = b.id 
				join rn_ext_physical d on d.nodeId = b.id 
				left join resourcepool e on e.id = d.poolId 
			]]>
			<where>
				<![CDATA[ and rnStatus='NORMAL' ]]>
				<if test="nodeId != null">
					and a.nodeId = #{nodeId}
				</if>
				<if test="regionName != null">
					and e.regionName = #{regionName}
				</if>
				<if test="hostAggregate != null">
					and a.host_aggregate=#{hostAggregate} 
				</if>
			</where>
		</if>
	</select>
	<select id="selectHostAggregateHosts" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<if test="regionType == 'VMWARE'">
			<![CDATA[
			select b.id nodeid,
					b.hostName,
					c.vcpus,
					c.memory,
					c.localDisk,
					k.id,
				(select count(*) from rn_ext_vir_instance f join rn_base g on f.nodeId = g.id where g.rnStatus='NORMAL' and f.parentNodeId = b.id) vmCount 
			from rn_base b 
				join rn_ext_compute c on c.nodeId = b.id 
				join rn_ext_physical d on d.nodeId = b.id 
				join resourcepool e on e.id = d.poolId
				join rp_vir_host_aggregates k on k.region = e.regionName
				
			where k.deleted = 0
				and b.rnstatus = 'NORMAL'
			]]>
				<if test="nodeId != null">
					and b.id = #{nodeId}
				</if>
				<if test="regionName != null">
					and e.regionName = #{regionName}
				</if>
				<if test="hostAggregate != null">
					and k.id=#{hostAggregate} 
				</if>
			<if test="beginIndex != null">
				limit #{beginIndex},#{perPage}
			</if>
		</if>
		<if test="regionType != 'VMWARE'">
			<![CDATA[
				select a.nodeId,
						b.hostName,
						c.vcpus,
						c.memory,
						c.localDisk,
					(select count(*) from rn_ext_vir_instance f join rn_base g on f.nodeId = g.id where g.rnStatus='NORMAL' and f.parentNodeId = b.id) vmCount 
				from rn_ext_vir_hypervisor a 
					join rn_base b on a.nodeId = b.id 
					join rn_ext_compute c on c.nodeId = b.id 
					join rn_ext_physical d on d.nodeId = b.id 
					left join resourcepool e on e.id = d.poolId 
			]]>
			<where>
				<![CDATA[ and b.rnStatus='NORMAL' ]]>
				<if test="nodeId != null">
					and a.nodeId = #{nodeId}
				</if>
				<if test="regionName != null">
					and e.regionName = #{regionName}
				</if>
				<if test="hostAggregate != null">
					and a.host_aggregate=#{hostAggregate} 
				</if>
			</where>
			<if test="beginIndex != null">
				limit #{beginIndex},#{perPage}
			</if>
		</if>
	</select>
	
	<update id="updateRNExtComputeNodeAggregate" parameterType="java.util.HashMap">
		<![CDATA[
			update rn_ext_compute set aggregateId=#{aggregateId} where concat(',',#{nodeIds},',') like concat('%,',nodeId,',%')
		]]>
	</update>
	
	<select id="selectOpenstacksCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select count(*) totalSize from openstack_stacks a 
		]]>
		<where>
			<![CDATA[ and a.stack_status != 'DELETED' ]]>
			<if test="id != null">
				and a.id = #{id}
			</if>
			<if test="key != null">
				and a.stack_name like concat('%',#{key},'%') 
			</if>
			<if test="stack_name != null">
				and a.stack_name like concat('%',#{stack_name},'%') 
			</if>
			<if test="regionName != null">
				and a.region=#{regionName} 
			</if>
			<if test="projectId != null">
				and a.project_id=#{projectId} 
			</if>
			<if test="countSize == 100 and loginId != null">
				and a.region in (select t.regionName 
								from resourcepool t,
									resourcepooldepartment a,
									oss_system_user b,
									oss_system_department c 
								where concat(',',#{loginId},',') like concat('%,',loginId,',%')
									and a.groupId = c.refGroupId
									and b.department = c.id
									and a.poolId = t.id
									and t.regionName is not null) 
				and a.project_id in (select d.projectId from v_department_projectId d where concat(',',#{loginId},',') like concat('%,',d.loginId,',%'))
			</if>
			<if test="countSize == 10 and loginId != null">
				and a.region in (select t.regionName from resourcepool t,resourcepoolusers k where t.id = k.poolId and t.regionName is not null and concat(',',#{loginId},',') like concat('%,',loginId,',%'))
				and a.project_id in (select d.projectId from v_department_projectId d where concat(',',#{loginId},',') like concat('%,',d.loginId,',%'))
			</if>
			<if test="beginCreationTime != null">
				<![CDATA[ and a.creation_time >= #{beginCreationTime}]]>
			</if>
			<if test="endCreationTime != null">
				<![CDATA[ and a.creation_time <= #{endCreationTime}]]>
			</if>
			<if test="list != null">
				<![CDATA[ and ( ]]>
				<foreach collection="list" index="index" item="rule" open=" " separator="" close=" ">
					<if test="index > 0">
						<if test="queryColumn != null and queryColumn == 'ALL'">
							<choose>
								<when test="rule.type == 'notContain' or rule.type == 'notEqual' or rule.type == 'notStartWith' or rule.type == 'notEndWith' or rule.type == 'isEmpty'">
									and 
								</when>
								<otherwise>
									or
								</otherwise>
							</choose>
						</if>
						<if test="queryColumn == null">
							and 
						</if>
					</if>
					<![CDATA[ ifnull(${rule.key},'')  ]]>
					
					<if test="rule.type == 'contain'">
						<![CDATA[ like concat('%',#{rule.value},'%') ]]>
					</if>
					<if test="rule.type == 'notContain'">
						<![CDATA[ not like concat('%',#{rule.value},'%') ]]>
					</if>
					<if test="rule.type == 'equal'">
						<![CDATA[ = #{rule.value} ]]>
					</if>
					<if test="rule.type == 'notEqual'">
						<![CDATA[ != #{rule.value} ]]>
					</if>
					<if test="rule.type == 'notStartWith'">
						<![CDATA[ not like concat (#{rule.value},'%') ]]>
					</if>
					<if test="rule.type == 'startWith'">
						<![CDATA[ like concat (#{rule.value},'%') ]]>
					</if>
					<if test="rule.type == 'notEndWith'">
						<![CDATA[ not like concat('%',#{rule.value}) ]]>
					</if>
					<if test="rule.type == 'endWith'">
						<![CDATA[ like concat('%',#{rule.value}) ]]>
					</if>
					<if test="rule.type == 'isEmpty'">
						<![CDATA[ = '' ]]>
					</if>
		  		</foreach>
		  		<![CDATA[ ) ]]>
			</if>
		</where>
	</select>
	
	<select id="selectOpenstacks" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.* from openstack_stacks a 
		]]>
		<where>
			<![CDATA[ and a.stack_status != 'DELETED' ]]>
			<if test="id != null">
				and a.id = #{id}
			</if>
			<if test="key != null">
				and a.stack_name like concat('%',#{key},'%') 
			</if>
			<if test="stack_name != null">
				and a.stack_name like concat('%',#{stack_name},'%') 
			</if>
			<if test="regionName != null">
				and a.region=#{regionName} 
			</if>
			<if test="projectId != null">
				and a.project_id=#{projectId} 
			</if>
			<if test="countSize == 100 and loginId != null">
				and a.region in (select t.regionName 
								from resourcepool t,
									resourcepooldepartment a,
									oss_system_user b,
									oss_system_department c 
								where concat(',',#{loginId},',') like concat('%,',loginId,',%')
									and a.groupId = c.refGroupId
									and b.department = c.id
									and a.poolId = t.id
									and t.regionName is not null) 
				and a.project_id in (select d.projectId from v_department_projectId d where concat(',',#{loginId},',') like concat('%,',d.loginId,',%'))
			</if>
			<if test="countSize == 10 and loginId != null">
				and a.region in (select t.regionName from resourcepool t,resourcepoolusers k where t.id = k.poolId and t.regionName is not null and concat(',',#{loginId},',') like concat('%,',loginId,',%'))
				and a.project_id in (select d.projectId from v_department_projectId d where concat(',',#{loginId},',') like concat('%,',d.loginId,',%'))
			</if>
			<if test="beginCreationTime != null">
				<![CDATA[ and a.creation_time >= #{beginCreationTime}]]>
			</if>
			<if test="endCreationTime != null">
				<![CDATA[ and a.creation_time <= #{endCreationTime}]]>
			</if>
			<if test="list != null">
				<![CDATA[ and ( ]]>
				<foreach collection="list" index="index" item="rule" open=" " separator="" close=" ">
					<if test="index > 0">
						<if test="queryColumn != null and queryColumn == 'ALL'">
							<choose>
								<when test="rule.type == 'notContain' or rule.type == 'notEqual' or rule.type == 'notStartWith' or rule.type == 'notEndWith' or rule.type == 'isEmpty'">
									and 
								</when>
								<otherwise>
									or
								</otherwise>
							</choose>
						</if>
						<if test="queryColumn == null">
							and 
						</if>
					</if>
					<![CDATA[ ifnull(${rule.key},'')  ]]>
					
					<if test="rule.type == 'contain'">
						<![CDATA[ like concat('%',#{rule.value},'%') ]]>
					</if>
					<if test="rule.type == 'notContain'">
						<![CDATA[ not like concat('%',#{rule.value},'%') ]]>
					</if>
					<if test="rule.type == 'equal'">
						<![CDATA[ = #{rule.value} ]]>
					</if>
					<if test="rule.type == 'notEqual'">
						<![CDATA[ != #{rule.value} ]]>
					</if>
					<if test="rule.type == 'notStartWith'">
						<![CDATA[ not like concat (#{rule.value},'%') ]]>
					</if>
					<if test="rule.type == 'startWith'">
						<![CDATA[ like concat (#{rule.value},'%') ]]>
					</if>
					<if test="rule.type == 'notEndWith'">
						<![CDATA[ not like concat('%',#{rule.value}) ]]>
					</if>
					<if test="rule.type == 'endWith'">
						<![CDATA[ like concat('%',#{rule.value}) ]]>
					</if>
					<if test="rule.type == 'isEmpty'">
						<![CDATA[ = '' ]]>
					</if>
		  		</foreach>
		  		<![CDATA[ ) ]]>
			</if>
		</where>
		
		<if test="instanceSort != null">
			<![CDATA[  order by ${instanceSort} ${instanceSortDirection} ]]>
		</if>
		<if test="instanceSort == null">
			<![CDATA[  order by a.creation_time desc ]]>
		</if>
		
		<if test="beginIndex != null">
			limit #{beginIndex},#{perPage}
		</if>
	</select>
	<insert id="insertOpenstackStack" parameterType="java.util.HashMap">
		<![CDATA[
			insert into openstack_stacks (id,region,stack_name,stack_owner,project_id,stack_user_project_id,links,stack_status,stack_status_reason,description,creation_time,updated_time) 
			values (#{id},#{region},#{stack_name},#{stack_owner},#{project_id},#{stack_user_project_id},#{links},#{stack_status},#{stack_status_reason},#{description},#{creation_time},#{updated_time}) 
		]]>
	</insert>
	
	<select id="selectIntegratedOpenstackstacks" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.*,c.* from oss_process_relation a 
			join oss_process_resource_map b on a.processId = b.processId 
			join openstack_stacks c on b.resourceId = c.id 
		]]>
		<where>
			<if test="relationType != null">
				and a.relationType = #{relationType}
			</if>
			<if test="relationKey != null">
				and a.relationKey = #{relationKey}
			</if>
		</where>
		<![CDATA[ order by c.creation_time desc ]]>
	</select>
	
	<!-- data center -->
	<select id="selectDict" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select * from oss_dict b
			where b.status = 1
		]]>
		<if test="dictType != null">
			and b.dictType = #{dictType}
		</if>
		    order by b.displayOrder asc
	</select>
	<select id="selectRecuDict" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select b.dictId id,b.dictType parentId,b.dictName name,b.dictId type  from oss_dict b
			where b.status = 1
		]]>
		<if test="parentId != null">
			and b.dictType = #{parentId}
		</if>
		    order by b.displayOrder asc 
	</select>

	<select id="selectDataCenterUsers" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.id,a.dataCenterId,b.loginId,b.name,b.department,b.email,b.phone,b.position,b.status 
			from resourcedatacenterusers a join oss_system_user b on a.loginId=b.loginId 
		]]>
		<where>
			<if test="dataCenterId != null">
				and a.dataCenterId = #{dataCenterId}
			</if>
			<if test="loginId != null">
				and a.loginId = #{loginId} 
			</if>
			<if test="id != null">
				and a.id = #{id}
			</if>
		</where>
	</select>
	<insert id="insertDataCenterUser" parameterType="java.util.HashMap">
		<![CDATA[
			insert into resourcedatacenterusers (dataCenterId,loginId,userId) 
			select #{dataCenterId},#{loginId},0  
			from dual 
			where not exists(select t.id from resourcedatacenterusers t where t.dataCenterId = #{dataCenterId} and t.loginId= #{loginId}) 
		]]>
	</insert>
	<update id="updateDataCenterUser" parameterType="java.util.HashMap">
		<![CDATA[
			update ResourceDataCenterUsers set dataCenterId = #{dataCenterId}
		]]>
			<if test="name != null">
				, name = #{name}
			</if>
			<if test="phone != null">
				, phone = #{phone}
			</if>
			<if test="type != null">
				, type = #{type}
			</if>
		<![CDATA[
			where id = #{userId}
		]]>
	</update>
	<delete id="deleteDataCenterUser" parameterType="java.util.HashMap">
		<![CDATA[
			delete from ResourceDataCenterUsers where dataCenterId = #{dataCenterId} and loginId=#{loginId} 
		]]>
	</delete>
	<delete id="deleteDataCenterUserByDeptGroup" parameterType="java.util.HashMap">
		<![CDATA[
			delete from resourcedatacenterusers where loginId in (
			select a.loginId from oss_system_user a 
			join oss_system_department b on a.department=b.id 
			where b.refGroupId=#{groupId} ) and dataCenterId=#{dataCenterId} 
		]]>
	</delete>
	<select id="selectDataCenterAreaCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select * from resourcedatacenterarea		
		]]>
		<where>
			<if test="dataCenterId != null">
				and dataCenterId = #{dataCenterId}
			</if>
			<if test="id != null">
				and id = #{id}
			</if>
		</where>
	</select>
	<select id="selectDataCenterArea" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.*,b.name dataCenterName from resourcedatacenterarea a 
			join resourcedatacenter b on a.dataCenterId = b.id 
		]]>
		<where>
			<if test="dataCenterId != null">
				and dataCenterId = #{dataCenterId}
			</if>
			<if test="id != null">
				and id = #{id}
			</if>
		</where>
		<![CDATA[
			 order by a.name,a.id 
		]]>
	</select>
	<select id="selectDataCenterAreaGroup" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.id,a.dataCenterId,a.name from resourcedatacenterarea a 
			where a.dataCenterId=#{dataCenterId} 
			group by a.name order by a.name
		]]>
	</select>
	<select id="selectDataCenterAreaCabinetNum" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.* from resourcedatacenterarea a where a.dataCenterId=#{dataCenterId} and a.name=#{name} order by a.cabinetNum 
		]]>
	</select>
	<select id="selectDataCenterCabinetResourceNodeCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select count(*) nodeCount from resourcedatacenterarea a,resourcenoderackinfo b 
				where concat(a.name,a.cabinetNum) = b.column_ and a.id = #{id} 
		]]>
	</select>
	<insert id="insertDataCenterArea" parameterType="java.util.HashMap">
		<![CDATA[
			insert into resourcedatacenterarea (dataCenterId,name,cabinetNum) 
			select #{dataCenterId},#{name},#{cabinetNum} 
			from dual 
			where not exists(select name from resourcedatacenterarea t where t.dataCenterId = #{dataCenterId} and t.name= #{name} and t.cabinetNum = #{cabinetNum})
		]]>
	</insert>
	<delete id="deleteDataCenterArea" parameterType="java.util.HashMap">
		<![CDATA[
			delete from resourcedatacenterarea where id = #{id}   
		]]>
	</delete>
	<update id="updateDataCenterArea" parameterType="java.util.HashMap">
		<![CDATA[
			update resourcedatacenterarea set dataCenterId = #{dataCenterId}
		]]>
			<if test="name != null">
				, name = #{name}
			</if>
			<if test="cabinetNum != null">
				, cabinetNum = #{cabinetNum}
			</if>
		<![CDATA[
			where id = #{id} 
		]]>
	</update>
	
	<select id="selectDataCenters" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select * from ResourceDataCenter a 		
		]]>
		<where>
			<![CDATA[ and rnStatus = 'NORMAL' ]]>
			<if test="groupId != null">
				and groupId = #{groupId}
			</if>
			
			<if test="id != null">
				and id = #{id}
			</if>
		</where>
	</select>
	
	<select id="selectDataCenterGroups" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select * from rn_datacenter_group 		
		]]>
		<where>
			<![CDATA[ and rnStatus = 'NORMAL' ]]>
			<if test="id != null">
				and id = #{id}
			</if>
		</where>
	</select>
	
	<insert id="insertDataCenter" parameterType="java.util.HashMap">
		<![CDATA[
		INSERT INTO ResourceDataCenter(name,address,longitude,latitude,phone,description,create_user,authentication,scale)
		VALUES(#{name},#{address},#{longitude},#{latitude},#{phone},#{description},#{loginId},#{authentication},#{scale})
		]]>
		<selectKey keyProperty="dataCenterId" resultType="int" order="AFTER">
			select LAST_INSERT_ID()
		</selectKey>
	</insert>
	<!-- <insert id="insertDefaultResourcePool" parameterType="java.util.HashMap">
		<![CDATA[
			insert into ResourcePool(name,dataCenterId,poolType,description,isDefault,create_user)
			select concat(a.dictName,'未分配资源池'),b.id,a.dictId,concat(a.dictName,'未分配资源池'),1,b.create_user
			from OSS_DICT a,ResourceDataCenter b
			where a.dictType = 'RESOURCE_TYPE'
				and b.id = #{dataCenterId}
		]]>
	</insert> -->
	
	<update id="updateDataCenter" parameterType="java.util.HashMap">
		<![CDATA[
			update ResourceDataCenter set id = #{id}
		]]>
			<if test="name != null">
				, name = #{name}
			</if>
			<if test="longitude != null">
				, longitude = #{longitude}
			</if>
			<if test="latitude != null">
				, latitude = #{latitude}
			</if>
			<if test="phone != null">
				, phone = #{phone}
			</if>
			<if test="description != null">
				, description = #{description}
			</if>
			<if test="address != null">
				, address = #{address}
			</if>
			<if test="authentication != null">
				, authentication = #{authentication}
			</if>
			<if test="scale != null">
				, scale = #{scale}
			</if>
			<if test="alias != null">
				, alias = #{alias}
			</if>
		<![CDATA[
			where id = #{id}
		]]>
	</update>
	<update id="updateDataCenterGroup" parameterType="java.util.HashMap">
		<![CDATA[
			update rn_datacenter_group set id = #{id}
		]]>
			<if test="name != null">
				, name = #{name}
			</if>
			<if test="longitude != null">
				, longitude = #{longitude}
			</if>
			<if test="latitude != null">
				, latitude = #{latitude}
			</if>
			<if test="phone != null">
				, phone = #{phone}
			</if>
			<if test="description != null">
				, description = #{description}
			</if>
			<if test="address != null">
				, address = #{address}
			</if>
			<if test="authentication != null">
				, authentication = #{authentication}
			</if>
			<if test="scale != null">
				, scale = #{scale}
			</if>
			<if test="alias != null">
				, alias = #{alias}
			</if>
		<![CDATA[
			where id = #{id}
		]]>
	</update>
	<delete id="deleteDataCenter" parameterType="java.util.HashMap">
		<![CDATA[
			delete from resourcedatacenter where id = #{id}
		]]>
	</delete>
	<select id="selectResourceLifeCycles" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select * from oss_resource_lifecycle_action order by id  
		]]>
		<if test="beginIndex != null">
			limit #{beginIndex},#{perPage}
		</if>
	</select>
	<select id="selectResourceLifeCyclesCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select count(*) totalSize from oss_resource_lifecycle_action b 
		]]>
	</select>
	
	<select id="selectResourcePoolSystemsCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select count(*) totalSize from resourcepoolsystem b 
		]]>
	</select>
	<select id="selectResourcePoolSystems" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select * from resourcepoolsystem b 
		]]>
	</select>
	<insert id="insertResourcePoolSystem" parameterType="java.util.HashMap">
		<![CDATA[
			insert into ResourcePoolSystem(name,vendorName,description,department)
			values(#{name},#{vendorName},#{description},#{department})
		]]>
		<selectKey keyProperty="systemId" resultType="int" order="AFTER">
			select LAST_INSERT_ID()
		</selectKey>
	</insert>
	<update id="updateResourcePoolSystem" parameterType="java.util.HashMap">
		<![CDATA[
			update ResourcePoolSystem
			set name = #{name},
				vendorName = #{vendorName},
				description = #{description},
				department = #{department}
			where id = #{id}
		]]>
	</update>
	<delete id="deleteResourcePoolSystem" parameterType="java.util.HashMap">
		<![CDATA[
			delete from ResourcePoolSystem where id = #{id}
		]]>
	</delete>
	<select id="selectResourcePoolMonitorCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select (select count(*) from oss_engine_regions where region_name = b.regionname) regionStatus,
				b.*,
				(select dictName FROM OSS_DICT where dictType = 'RESOURCE_TYPE' and dictId = b.poolType) poolTypeName,
				case b.poolType  
				  	when 'BARE' then 'RESOURCE_POOL_COMPUTE_TYPE'
				  	when 'COMPUTE' then 'RESOURCE_POOL_COMPUTE_TYPE' 
				  	when 'STORAGE' then 'RESOURCE_POOL_STORAGE_TYPE' 
				  	when 'NETWORK' then 'RESOURCE_POOL_NETWORK_TYPE' 
				  	when 'MANAGE' then 'RESOURCE_POOL_COMPUTE_TYPE' 
					else  'RESOURCE_POOL_OTHER_TYPE' end typeCode ,
				(select dictName FROM OSS_DICT where dictType = typeCode and dictId = b.type) typeName, 
				ifnull(t.nodeCount,0) nodeCount,
				m.fileName,m.fileAbsPath,
				ifnull(x.cpuUsage,0) cpuUsage,
				ifnull(x.memoryUsage,0) memoryUsage
			from ResourcePool b 
				left join oss_file m on b.icon = m.filePath 
				left join (select k.poolId,avg(cpuUsage) cpuUsage,avg(memoryUsage) memoryUsage
					from report_rp_monitor_count k
					where unix_timestamp(k.createTime) > #{beginTimeStamp}
						and unix_timestamp(k.createTime) < #{endTimeStamp}
					group by poolId) x on x.poolId = b.id
				left join (select a.poolId,count(*) nodeCount from rn_ext_physical a join rn_base b on a.nodeId = b.id 
		]]>
		<where>
			<![CDATA[ and b.rnStatus='NORMAL'  ]]>
			<if test="countSize == 100 and loginId != null">
				and a.poolId in (select a.poolId 
								from resourcepooldepartment a,
									oss_system_user b,
									oss_system_department c 
								where concat(',',#{loginId},',') like concat('%,',loginId,',%')
									and a.groupId = c.refGroupId
									and b.department = c.id)
			</if>
			<if test="countSize == 10 and loginId != null">
				and a.poolId in (select poolId from resourcepoolusers where concat(',',#{loginId},',') like concat('%,',loginId,',%'))
			</if>
		</where>
		<![CDATA[
				group by a.poolId) t on
			 b.id = t.poolId
		]]>
		<where>
			<![CDATA[ and b.status='NORMAL'  ]]>
			
			<if test="poolType != null">
				and b.poolType = #{poolType}
			</if>
			<if test="type != null">
				and b.type = #{type}
			</if>
			<if test="poolId != null">
				and b.id = #{poolId}
			</if>
			<if test="countSize == 100 and loginId != null">
				and b.id in (select a.poolId 
								from resourcepooldepartment a,
									oss_system_user b,
									oss_system_department c 
								where concat(',',#{loginId},',') like concat('%,',loginId,',%')
									and a.groupId = c.refGroupId
									and b.department = c.id)
			</if>
			<if test="countSize == 10 and loginId != null">
				and b.id in (select k.poolId from resourcepoolusers k where concat(',',#{loginId},',') like concat('%,',loginId,',%'))
			</if>
			<if test="key != null">
				and b.name like concat('%',#{key},'%')
			</if>
		</where>
		<if test="beginIndex != null">
			limit #{beginIndex},#{perPage}
		</if>
	</select>
	
	<select id="selectResourcePools" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select (select count(*) from oss_engine_regions where region_name = b.regionname) regionStatus,
				b.*,
				(select dictName FROM OSS_DICT where dictType = 'RESOURCE_TYPE' and dictId = b.poolType) poolTypeName,
				case b.poolType  
				  	when 'BARE' then 'RESOURCE_POOL_COMPUTE_TYPE'
				  	when 'COMPUTE' then 'RESOURCE_POOL_COMPUTE_TYPE' 
				  	when 'STORAGE' then 'RESOURCE_POOL_STORAGE_TYPE' 
				  	when 'NETWORK' then 'RESOURCE_POOL_NETWORK_TYPE' 
				  	when 'MANAGE' then 'RESOURCE_POOL_COMPUTE_TYPE' 
					else  'RESOURCE_POOL_OTHER_TYPE' end typeCode ,
				(select dictName FROM OSS_DICT where dictType = typeCode and dictId = b.type) typeName, 

				ifnull(t.nodeCount,0) nodeCount,
				m.fileName,m.fileAbsPath, 
				h.*
			from ResourcePool b 
				left join oss_file m on b.icon = m.filePath 
				left join (select a.poolId,count(*) nodeCount from rn_ext_physical a join rn_base b on a.nodeId = b.id 
		]]>
		<where>
			<![CDATA[ and b.rnStatus='NORMAL'  ]]>
			<if test="countSize == 100 and loginId != null">
				and a.poolId in (select a.poolId 
								from resourcepooldepartment a,
									oss_system_user b,
									oss_system_department c 
								where concat(',',#{loginId},',') like concat('%,',loginId,',%')
									and a.groupId = c.refGroupId
									and b.department = c.id)
			</if>
			<if test="countSize == 10 and loginId != null">
				and a.poolId in (select poolId from resourcepoolusers where concat(',',#{loginId},',') like concat('%,',loginId,',%'))
			</if>
		</where>
		<![CDATA[
				group by a.poolId) t on b.id = t.poolId
				left join (select n.id poolId,
								sum(ifnull(k.vcpus_used,0)) vcpusUsed,
								sum(ifnull(k.ram_used,0)) memoryUsed,
								if(m.type='POWERVC' or m.type='VMWARE',ifnull(k.local_disk_used,0),sum(ifnull(k.local_disk_used,0))) diskUsed,
								sum(ifnull(k.memory,0)) memoryTotal,
								sum(ifnull(k.vcpus,0)) vcpusTotal,
								if(m.type='POWERVC' or m.type='VMWARE',ifnull(k.localDisk,0),sum(ifnull(k.localDisk,0))) diskTotal,
								sum(ifnull(k.memory,0) * ifnull(t.ram_oversub,1)) memoryTotalOver,
								sum(ifnull(k.vcpus,0) * ifnull(t.cpu_oversub,1)) vcpusTotalOver,
								if(m.type='POWERVC' or m.type='VMWARE',ifnull(k.localDisk,0) * ifnull(t.disk_oversub,1),sum(ifnull(k.localDisk,0) * ifnull(t.disk_oversub,1))) diskTotalOver,

								sum(ifnull(k.vcpus_used,0))/if(sum(ifnull(k.vcpus,0) * ifnull(t.cpu_oversub,1))>0,sum(ifnull(k.vcpus,0) * ifnull(t.cpu_oversub,1)),1)*100 vcpusUsageRateOver,
								sum(ifnull(k.ram_used,0))/if(sum(ifnull(k.memory,0) * ifnull(t.ram_oversub,1))>0,sum(ifnull(k.memory,0) * ifnull(t.ram_oversub,1)),1)*100 memoryUsageRateOver,
								if(m.type='POWERVC' or m.type='VMWARE',ifnull(k.local_disk_used,0),sum(ifnull(k.local_disk_used,0)))/
								if(if(m.type='POWERVC' or m.type='VMWARE',ifnull(k.localDisk,0) * ifnull(t.disk_oversub,1),sum(ifnull(k.localDisk,0) * ifnull(t.disk_oversub,1)))>0,
									if(m.type='POWERVC' or m.type='VMWARE',ifnull(k.localDisk,0) * ifnull(t.disk_oversub,1),sum(ifnull(k.localDisk,0) * ifnull(t.disk_oversub,1))),1)*100 diskUsageRateOver
								from rp_vir_host_aggregates t
								  	join oss_engine_regions m on m.region_name = t.region
								  	join resourcepool n on n.regionName = m.region_name
									left join(select a.host_aggregate,
														b.poolId,
														c.regionName,
														sum(d.memory) memory,
														sum(d.vcpus) vcpus,
														if(e.type='POWERVC' or e.type='VMWARE',d.localDisk,sum(d.localDisk)) localDisk,
														sum(a.vcpus_used) vcpus_used,
														sum(a.ram_used) ram_used,
														if(e.type='POWERVC' or e.type='VMWARE',a.local_disk_used,sum(a.local_disk_used)) local_disk_used,
														count(*) subCount
												from rn_ext_vir_hypervisor a,
														rn_ext_physical b,
														resourcepool c,
														rn_ext_compute d,
														rn_base f,
														oss_engine_regions e
												where a.nodeId = b.nodeId
													and c.id = b.poolId
													and d.nodeId = a.nodeId
													and a.nodeid = f.id
													and c.regionName = e.region_name
												group by a.host_aggregate,b.poolId,c.regionName ) k on  t.id = k.host_aggregate and t.region = k.regionName
									left join (select a.poolid,
													count(*) subCount,
													sum(b.memory) memory,
													sum(b.vcpus) vcpus,
													sum(b.localDisk) localDisk
											from rn_ext_physical a,
												rn_ext_compute b,
												rn_base c
											where a.nodeid = b.nodeid
												and a.nodeid = c.id
												and c.rnstatus = 'NORMAL'
												group by a.poolid) y on y.poolid = n.id
								where t.deleted = 0
								group by poolId) h on h.poolId = b.id
		]]>
		<where>
			<![CDATA[ and b.status='NORMAL'  ]]>
			
			<if test="poolType != null">
				and b.poolType = #{poolType}
			</if>
			<if test="type != null">
				and b.type = #{type}
			</if>
			<if test="poolId != null">
				and b.id = #{poolId}
			</if>
			<if test="countSize == 100 and loginId != null">
				and b.id in (select a.poolId 
								from resourcepooldepartment a,
									oss_system_user b,
									oss_system_department c 
								where concat(',',#{loginId},',') like concat('%,',loginId,',%')
									and a.groupId = c.refGroupId
									and b.department = c.id)
			</if>
			<if test="countSize == 10 and loginId != null">
				and b.id in (select k.poolId from resourcepoolusers k where concat(',',#{loginId},',') like concat('%,',loginId,',%'))
			</if>
			<if test="key != null">
				and b.name like concat('%',#{key},'%')
			</if>
			<if test="shardingItem != null">
				and MOD(b.id,#{shardingCount}) = #{shardingItem}
			</if>
			<if test="list != null">
				<![CDATA[ and ( ]]>
				<foreach collection="list" index="index" item="rule" open=" " separator="" close=" ">
					<if test="index > 0">
						<if test="queryColumn != null and queryColumn == 'ALL'">
							<choose>
								<when test="rule.type == 'notContain' or rule.type == 'notEqual' or rule.type == 'notStartWith' or rule.type == 'notEndWith' or rule.type == 'isEmpty'">
									and 
								</when>
								<otherwise>
									or
								</otherwise>
							</choose>
						</if>
						<if test="queryColumn == null">
							and 
						</if>
					</if>
					<choose>
						<when test="rule.key == 'poolTypeName'">
							ifnull((select dictName FROM OSS_DICT where dictType = 'RESOURCE_TYPE' and dictId = b.poolType),'')
						</when>
						<when test="rule.key == 'typeName'">
							ifnull(b.type,'')
						</when>
						<when test="rule.key == 'nodeCount'">
							ifnull(t.nodeCount,0) 
						</when>
						<otherwise>
							ifnull(${rule.key},'') 
						</otherwise>
					</choose>
		   			
					<if test="rule.type == 'contain'">
						<![CDATA[ like concat('%',#{rule.value},'%') ]]>
					</if>
					<if test="rule.type == 'notContain'">
						<![CDATA[ not like concat('%',#{rule.value},'%') ]]>
					</if>
					<if test="rule.type == 'equal'">
						<![CDATA[ = #{rule.value} ]]>
					</if>
					<if test="rule.type == 'notEqual'">
						<![CDATA[ != #{rule.value} ]]>
					</if>
					<if test="rule.type == 'notStartWith'">
						<![CDATA[ not like concat (#{rule.value},'%') ]]>
					</if>
					<if test="rule.type == 'startWith'">
						<![CDATA[ like concat (#{rule.value},'%') ]]>
					</if>
					<if test="rule.type == 'notEndWith'">
						<![CDATA[ not like concat('%',#{rule.value}) ]]>
					</if>
					<if test="rule.type == 'endWith'">
						<![CDATA[ like concat('%',#{rule.value}) ]]>
					</if>
					<if test="rule.type == 'isEmpty'">
						<![CDATA[ = '' ]]>
					</if>
		  		</foreach>
		  		<![CDATA[ ) ]]>
			</if>
		</where>
		
		<if test="instanceSort != null">
			order by ${instanceSort} ${instanceSortDirection}
		</if>
		
		<if test="instanceSort == null">
			order by nodeCount desc 
		</if>
		
		<if test="beginIndex != null">
			limit #{beginIndex},#{perPage}
		</if>
	</select>
	<select id="selectResourcePoolsCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select count(*) totalSize 
			from ResourcePool b 
		]]>
		<where>
			<![CDATA[ and b.status='NORMAL'  ]]>
			<if test="poolType != null">
				and b.poolType = #{poolType}
			</if>
			<if test="type != null">
				and b.type = #{type}
			</if>
			<if test="poolId != null">
				and b.id = #{poolId}
			</if>
			<if test="countSize == 100 and loginId != null">
				and b.id in (select a.poolId 
								from resourcepooldepartment a,
									oss_system_user b,
									oss_system_department c 
								where concat(',',#{loginId},',') like concat('%,',loginId,',%')
									and a.groupId = c.refGroupId
									and b.department = c.id)
			</if>
			<if test="countSize == 10 and loginId != null">
				and b.id in (select poolId from resourcepoolusers where concat(',',#{loginId},',') like concat('%,',loginId,',%'))
			</if>
			<if test="key != null">
				and b.name like concat('%',#{key},'%')
			</if>
			<if test="list != null">
				<![CDATA[ and ( ]]>
				<foreach collection="list" index="index" item="rule" open=" " separator="" close=" ">
					<if test="index > 0">
						<if test="queryColumn != null and queryColumn == 'ALL'">
							<choose>
								<when test="rule.type == 'notContain' or rule.type == 'notEqual' or rule.type == 'notStartWith' or rule.type == 'notEndWith' or rule.type == 'isEmpty'">
									and 
								</when>
								<otherwise>
									or
								</otherwise>
							</choose>
						</if>
						<if test="queryColumn == null">
							and 
						</if>
					</if>
					<choose>
						<when test="rule.key == 'poolTypeName'">
							ifnull((select dictName FROM OSS_DICT where dictType = 'RESOURCE_TYPE' and dictId = b.poolType),'')
						</when>
						<when test="rule.key == 'typeName'">
							ifnull(b.type,'')
						</when>
						<when test="rule.key == 'nodeCount'">
							ifnull(t.nodeCount,0) 
						</when>
						<otherwise>
							ifnull(${rule.key},'') 
						</otherwise>
					</choose>
		   			
					<if test="rule.type == 'contain'">
						<![CDATA[ like concat('%',#{rule.value},'%') ]]>
					</if>
					<if test="rule.type == 'notContain'">
						<![CDATA[ not like concat('%',#{rule.value},'%') ]]>
					</if>
					<if test="rule.type == 'equal'">
						<![CDATA[ = #{rule.value} ]]>
					</if>
					<if test="rule.type == 'notEqual'">
						<![CDATA[ != #{rule.value} ]]>
					</if>
					<if test="rule.type == 'notStartWith'">
						<![CDATA[ not like concat (#{rule.value},'%') ]]>
					</if>
					<if test="rule.type == 'startWith'">
						<![CDATA[ like concat (#{rule.value},'%') ]]>
					</if>
					<if test="rule.type == 'notEndWith'">
						<![CDATA[ not like concat('%',#{rule.value}) ]]>
					</if>
					<if test="rule.type == 'endWith'">
						<![CDATA[ like concat('%',#{rule.value}) ]]>
					</if>
					<if test="rule.type == 'isEmpty'">
						<![CDATA[ = '' ]]>
					</if>
		  		</foreach>
		  		<![CDATA[ ) ]]>
			</if>
		</where>
	</select>
	<select id="selectResourcePoolDetails" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
		SELECT a.*,(select dictName FROM OSS_DICT where dictType = 'RESOURCE_TYPE' and dictId = a.poolType) poolTypeName,
			ifnull((select e.name from oss_engine e where e.id=a.engineId),'') engineName,
			b.cpuFrame,b.virtualType,c.medium,c.accessType,c.linkType,c.recoveryLevel,d.askType,d.factory,d.controlType,d.sdnType,
			case a.poolType  
				  	when 'BARE' then 'RESOURCE_POOL_COMPUTE_TYPE'
				  	when 'COMPUTE' then 'RESOURCE_POOL_COMPUTE_TYPE' 
				  	when 'STORAGE' then 'RESOURCE_POOL_STORAGE_TYPE' 
				  	when 'NETWORK' then 'RESOURCE_POOL_NETWORK_TYPE' 
				  	when 'MANAGE' then 'RESOURCE_POOL_COMPUTE_TYPE' 
					else 'RESOURCE_POOL_OTHER_TYPE' end typeCode ,
			(select dictName from oss_dict where dictType = typeCode and dictId = a.type) typeName 
		FROM ResourcePool a
			left join ResourcePoolComputeInfo b on a.id = b.poolId
		    left join ResourcePoolStorageInfo c on a.id = c.poolId
		    left join ResourcePoolNetworkInfo d on a.id = d.poolId 
		]]>
		<where>
			<if test="poolId != null">
				and a.id = #{poolId}
			</if>
		</where>
	</select>
	<select id="selectBareResourcePools" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select max(a.id) id from resourcepool a  
			left join resourcepooldepartment b on a.id=b.poolId  
			left join resourcedatacenter c on c.groupId=b.groupId where c.id=#{dataCenterId} and a.poolType='BARE' 
		]]>
	</select>
	<insert id="insertResourcePool" parameterType="java.util.HashMap">
		<![CDATA[
			insert into ResourcePool(name,poolType,description,create_user,type,regionName,engineId)
			values(#{name},#{poolType},#{description},#{loginId},#{type},#{regionName},#{engineId})
		]]>
		<selectKey keyProperty="poolId" resultType="int" order="AFTER">
			select LAST_INSERT_ID()
		</selectKey>
	</insert>
	<update id="updateResourcePool" parameterType="java.util.HashMap">
		<![CDATA[
			update ResourcePool set id=#{id}
		]]>
			<if test="name != null">
				, name = #{name}
			</if>
			<if test="description != null">
				, description = #{description}
			</if>
			<if test="type != null">
				, type = #{type}
			</if>
			<if test="regionName != null">
				,regionName = #{regionName} 
			</if>
			<if test="regionName == null">
				,regionName = null
			</if>
			<if test="engineId != null">
				,engineId = #{engineId} 
			</if>
		where id = #{id}
	</update>
	<update id="updateResourcePoolRegion" parameterType="java.util.HashMap">
		<![CDATA[
			update ResourcePool set regionName = #{newRegionName},engineId = #{newEngineId} 
		]]>
		<where>
			<if test="regionName !=null">
				and regionName = #{regionName} 
			</if>
			<if test="engineId !=null">
				and engineId = #{engineId} 
			</if>
		</where>
	</update>
	<delete id="deleteResourcePool" parameterType="java.util.HashMap">
		<![CDATA[
			delete from ResourcePool where id = #{id}
		]]>
	</delete>
	
	<select id="selectResourcePoolUsers" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.id,a.poolId,b.loginId,b.name,b.department,b.email,b.phone,b.position,b.status 
			from resourcepoolusers a join oss_system_user b on a.loginId=b.loginId  
		]]>
		<where>
			<if test="poolId != null">
				and a.poolId = #{poolId}
			</if>
			<if test="id != null">
				and a.id = #{id}
			</if>
		</where>
	</select>
	<insert id="insertResourcePoolUsers" parameterType="java.util.HashMap">
		<![CDATA[
			insert into resourcepoolusers (poolId,loginId) 
			select #{poolId},#{loginId}  
			from dual 
			where not exists(select t.id from resourcepoolusers t where t.poolId = #{poolId} and t.loginId= #{loginId}) 
		]]>
	</insert>
	<delete id="deleteResourcePoolUser" parameterType="java.util.HashMap">
		<![CDATA[
			delete from resourcepoolusers where poolId = #{poolId} and loginId=#{loginId} 
		]]>
	</delete>
	<delete id="deleteResourcePoolUserByDeptGroup" parameterType="java.util.HashMap">
		<![CDATA[
			delete from resourcepoolusers where loginId in (
			select a.loginId from oss_system_user a 
			join oss_system_department b on a.department=b.id where b.refGroupId=#{groupId} ) and poolId=#{poolId}  
		]]>
	</delete>
	<select id="selectResourcePoolDeptGroup" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select b.*,a.poolId from resourcepooldepartment a join oss_system_department_group b on a.groupId=b.id 
		]]>
		<where>
			<if test="poolId != null">
				and a.poolId = #{poolId}
			</if>
		</where>
	</select>
	<select id="selectResourcePoolDeptGroupUsers" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.*,ifnull(h.poolCount,0) poolCount
			from oss_system_department b,
			  	oss_system_department_group c,
				oss_system_user a
				left join (select count(*) poolCount,loginId from resourcepoolusers where poolId = #{poolId} group by loginId) h on h.loginId=a.loginId 
			where a.department = b.id
				and b.refGroupId = c.id
			  	and c.id in (select groupId from resourcepooldepartment where poolId = #{poolId})
			  	and b.isDisplay = 1
		]]>
	</select>
	<select id="selectDataCenterDeptGroupUsers" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.*,ifnull(h.poolCount,0) poolCount
			from oss_system_department b,
			  	oss_system_department_group c,
				oss_system_user a
				left join (select count(*) poolCount,loginId from resourcedatacenterusers where datacenterid = #{dataCenterId} group by loginId) h on h.loginId=a.loginId 
			where a.department = b.id
				and b.refGroupId = c.id
			  	and c.id in (select groupId from resourcedatacenterdepartment where datacenterid = #{dataCenterId})
			  	and b.isDisplay = 1
		]]>
	</select>
	<insert id="insertResourcePoolDeptGroup" parameterType="java.util.HashMap">
		<![CDATA[
			insert into resourcepooldepartment (poolId,groupId) 
			select #{poolId},#{groupId} 
			from dual 
			where not exists(select t.poolId,t.groupId from resourcepooldepartment t where t.poolId = #{poolId} and t.groupId= #{groupId})  
		]]>
	</insert>
	<delete id="deleteResourcePoolDeptGroup" parameterType="java.util.HashMap">
		<![CDATA[
			delete from resourcepooldepartment where poolId=#{poolId} and groupId = #{groupId} 
		]]>
	</delete>
	<select id="selectDataCenterDeptGroup" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select b.*,a.dataCenterId from resourcedatacenterdepartment a join oss_system_department_group b on a.groupId=b.id  
		]]>
		<where>
			<if test="dataCenterId != null">
				and a.dataCenterId = #{dataCenterId}
			</if>
		</where>
	</select>
	<insert id="insertDataCenterDeptGroup" parameterType="java.util.HashMap">
		<![CDATA[
			insert into resourcedatacenterdepartment (dataCenterId,groupId) 
			select #{dataCenterId},#{groupId} 
			from dual 
			where not exists(select t.dataCenterId,t.groupId from resourcedatacenterdepartment t where t.dataCenterId = #{dataCenterId} and t.groupId= #{groupId})  
		]]>
	</insert>
	<delete id="deleteDataCenterDeptGroup" parameterType="java.util.HashMap">
		<![CDATA[
			delete from resourcedatacenterdepartment where dataCenterId=#{dataCenterId} and groupId = #{groupId} 
		]]>
	</delete>
	
	<insert id="insertResourceComputePool" parameterType="java.util.HashMap">
		<![CDATA[
			insert into ResourcePoolComputeInfo(poolId,cpuFrame,virtualType)
			values(#{poolId},#{cpuFrame},#{virtualType})
		]]>
	</insert>
	<update id="updateResourceComputePool" parameterType="java.util.HashMap">
		<![CDATA[
			update ResourcePoolComputeInfo set poolId=#{id}
		]]>
			<if test="cpuFrame != null">
				, cpuFrame = #{cpuFrame}
			</if>
			<if test="virtualType != null">
				, virtualType = #{virtualType}
			</if>
		<![CDATA[	
			where poolId = #{id}
		]]>
	</update>
	<insert id="insertResourceStoragePool" parameterType="java.util.HashMap">
		<![CDATA[
			insert into ResourcePoolStorageInfo(poolId,medium,linkType,accessType,recoveryLevel)
			values(#{poolId},#{medium},#{linkType},#{accessType},#{recoveryLevel})
		]]>
	</insert>
	<update id="updateResourceStoragePool" parameterType="java.util.HashMap">
		<![CDATA[
			update ResourcePoolStorageInfo set poolId=#{id}
		]]>
			<if test="medium != null">
				, medium = #{medium}
			</if>
			<if test="linkType != null">
				, linkType = #{linkType}
			</if>
			<if test="accessType != null">
				, accessType = #{accessType}
			</if>
			<if test="recoveryLevel != null">
				, recoveryLevel = #{recoveryLevel}
			</if>
		<![CDATA[	
			where poolId = #{id}
		]]>
	</update>
	<insert id="insertResourceNetworkPool" parameterType="java.util.HashMap">
		<![CDATA[
			insert into ResourcePoolNetworkInfo(poolId,askType,factory,controlType,sdnType)
			values(#{poolId},#{askType},#{factory},#{controlType},#{sdnType})
		]]>
	</insert>
	<update id="updateResourceNetworkPool" parameterType="java.util.HashMap">
		<![CDATA[
			update ResourcePoolNetworkInfo set poolId=#{id}
		]]>
			<if test="askType != null">
				, askType = #{askType}
			</if>
			<if test="factory != null">
				, factory = #{factory}
			</if>
			<if test="controlType != null">
				, controlType = #{controlType}
			</if>
			<if test="sdnType != null">
				, sdnType = #{sdnType}
			</if>
		<![CDATA[	
			where poolId = #{id}
		]]>
	</update>

	<select id="selectResourceBareNodesCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select count(*) totalSize 
			from rn_base a 
			join rn_ext_physical b on a.id = b.nodeId 
		]]>
		<if test="tagId != null">
			join oss_system_tag_resource r on r.resourceId  = a.id 
		</if>
		<where>
			<![CDATA[ 
				and (
					a.id in (select resourceId from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='BARE')  or 
					0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='BARE') or 
					(0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='BARE') and false)
				)
			]]>
			<if test="poolId != null">
				and b.poolId = #{poolId}
			</if>
			<if test="dataCenterId != null">
				and b.dataCenterId = #{dataCenterId}
			</if>
			<if test="nodeId != null">
				and a.id = #{nodeId} 
			</if>
			<if test="tagId != null">
				and r.tagId = #{tagId} 
			</if>
			<if test="type != null">
				and a.type = #{type} 
			</if>
			<if test="subType != null">
				and a.subType = #{subType}
			</if>
			<if test="countSize == 100 and loginId != null">
				and b.poolId in (select a.poolId 
								from resourcepooldepartment a,
									oss_system_user b,
									oss_system_department c 
								where concat(',',#{loginId},',') like concat('%,',loginId,',%')
									and a.groupId = c.refGroupId
									and b.department = c.id)
			</if>
			<if test="countSize == 10 and loginId != null">
				and b.poolId in (select poolId from resourcepoolusers where concat(',',#{loginId},',') like concat('%,',loginId,',%'))
			</if>
		</where>
	</select>
	<select id="selectResourceBareNodes" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.*, 
				b.*,
				(select d.name from ResourceDataCenter d where d.id = b.dataCenterId) dataCenterName,
				(select name from ResourcePool c where c.id = b.poolId) poolName,
				f.vcpus,
				f.memory,
				f.localDisk,
				c.row_,
				c.column_,
				c.unum ,
				c.height,
				c.slot,
				d.connectStatus,
				e.ipAddress,
		      	e.password,
		      	e.macAddress,
		      	e.port,
		      	e.userName,
				ifnull(k.taskid,-1) taskid,
		      	ifnull(k.status,-1)  deployStatus 
			from rn_base a 
			join rn_ext_physical b on a.id = b.nodeId 
			join rn_ext_compute f on a.id = f.nodeId	
			join rn_ext_rackinfo c on a.id = c.nodeId 
			join rn_ext_systeminfo d on a.id = d.nodeId 
			join rn_ext_mgmtinfo e on a.id = e.nodeId 
			left join tpmfosd_node_deploy k on a.id = k.nodeId 
		]]>
		<if test="tagId != null">
			join oss_system_tag_resource r on r.resourceId  = a.id 
		</if>
		<where>
			<![CDATA[ 
				and (
					a.id in (select resourceId from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='BARE')  or 
					0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='BARE') or 
					(0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='BARE') and false)
				)
			]]>
			<if test="poolId != null">
				and b.poolId = #{poolId}
			</if>
			<if test="datacenterId != null">
				and b.dataCenterId = #{datacenterId}
			</if>
			<if test="nodeId != null">
				and a.id = #{nodeId}
			</if>
			<if test="tagId != null">
				and r.tagId = #{tagId} 
			</if>
			<if test="type != null">
				and a.type = #{type}
			</if>
			<if test="subType != null">
				and a.subType = #{subType}
			</if>
			<if test="countSize == 100 and loginId != null">
				and b.poolId in (select a.poolId 
								from resourcepooldepartment a,
									oss_system_user b,
									oss_system_department c 
								where concat(',',#{loginId},',') like concat('%,',loginId,',%')
									and a.groupId = c.refGroupId
									and b.department = c.id)
			</if>
			<if test="countSize == 10 and loginId != null">
				and b.poolId in (select poolId from resourcepoolusers where concat(',',#{loginId},',') like concat('%,',loginId,',%'))
			</if>
		</where>
		<if test="beginIndex != null">
			limit #{beginIndex},#{perPage}
		</if>
	</select>
	
	<select id="selectResourceManageNodesCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select count(*) totalSize from ResourceNode a,rn_ext_platform b where a.id = b.nodeId		
		]]>
		<if test="poolId != null">
			and poolId = #{poolId}
		</if>
		<if test="datacenterId != null">
			and dataCenterId = #{datacenterId}
		</if>
		<if test="nodeType != null">
			and nodeType = #{nodeType}
		</if>
		<if test="loginId != null">
			and concat(',',#{loginId},',') like concat('%,',a.create_user,',%')
		</if>
	</select>
	<select id="selectResourceManageNodes" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.*,
				(select dictName from OSS_DICT where dictType = 'RESOURCE_SYSTEM_TYPE' and dictId = a.systemSubType) systemSubTypeName ,
				(select d.name from ResourceDataCenter d where d.id = a.dataCenterId) dataCenterName,
				(select name from ResourcePool c where c.id = a.poolId) poolName,
				c.row_,
				c.column_,
				c.unum ,
                ifnull(t.hostid,-1) hostId,
                ifnull(k.id,-1) minionId,
                d.connectStatus,
                d.agentId,
                b.deployType
			from ResourceNode a
				left join MonitorNodeHost t on t.nodeId = a.id and t.nodeType = 'PHYSICAL'
				left join SALTSTACK_Minion k on k.nodeId = a.id and k.nodeType = 'PHYSICAL'
				join rn_ext_platform b on a.id = b.nodeId and b.nodeType = 'PHYSICAL'
                join ResourceNodeRackInfo c  on a.id=c.nodeId   
                join ResourceNodeSystemInfo d  on a.id=d.nodeId and d.type = 'PHYSICAL' 
		]]>
		<where>
			<if test="poolId != null">
				and a.poolId = #{poolId}
			</if>
			<if test="datacenterId != null">
				and dataCenterId = #{datacenterId}
			</if>
			<if test="nodeId != null">
				and  a.id = #{nodeId}
			</if>
			<if test="nodeType != null">
				and a.nodeType = #{nodeType}
			</if>
			<if test="loginId != null">
				and concat(',',#{loginId},',') like concat('%,',a.create_user,',%')
			</if>
			<if test="deployType != null">
				and b.deployType = #{deployType}
			</if>
		</where>
		<if test="beginIndex != null">
			limit #{beginIndex},#{perPage}
		</if>
	</select>
	
	<select id="selectRNExtComputeNodesHypervisorCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select count(distinct a.id) totalSize
			from rn_base a 
				join rn_ext_physical b on a.id = b.nodeId 
				join rn_ext_mgmtinfo c on a.id = c.nodeId 
				join rn_ext_rackinfo d on a.id = d.nodeId 
				join rn_ext_systeminfo e on a.id = e.nodeId 
				join rn_ext_compute f on a.id = f.nodeId 
				join rn_ext_osinfo o on a.id  = o.nodeId 	
		]]>
		<where>
			<![CDATA[  
				and rnStatus='NORMAL' 
			]]>
			<if test="loginId != null">
				and (
					a.id in (select resourceId from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIRTUAL')  or 
					0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIRTUAL') or 
					(0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIRTUAL') and false)
				)
			</if>
			<if test="poolId != null">
				and b.poolId = #{poolId}
			</if>
			<if test="poolId == null">
				and b.poolId in (select id from resourcepool where poolType = #{type} and type in ('VIRTUAL'))
			</if>
			<if test="datacenterId != null">
				and b.dataCenterId = #{datacenterId}
			</if>
			<if test="nodeId != null">
				and  a.id = #{nodeId}
			</if>
			<if test="tagId != null">
				and a.id in ( select a.resourceId from oss_system_tag_resource a where a.createUser = #{loginId} and a.tagId = #{tagId} )
			</if>
			<if test="tagValue != null">
				and a.id in ( select a.resourceId from oss_system_tag_resource a 
							where a.createUser = #{loginId} and concat(',',#{tagValue},',') like concat('%,',a.value,',%'))
			</if>
			<if test="saltAgentStatus != null">
				and e.saltAgentStatus = #{saltAgentStatus}
			</if>
			<if test="type != null">
				and a.type = #{type}
			</if>
			<if test="subType != null">
				and a.subType = #{subType}
			</if>
			<if test="virtualizationType != null">
				and f.virtualizationType = #{virtualizationType}
			</if>
			<if test="vcpus != null">
				<![CDATA[and f.vcpus >= #{vcpus}]]>
			</if>
			<if test="memory != null">
				<![CDATA[and f.memory >= #{memory}]]>
			</if>
			<if test="localDisk != null">
				<![CDATA[and f.localDisk >= #{localDisk}]]>
			</if>
			
			<if test="countSize == 100 and loginId != null">
				and b.poolId in (select a.poolId 
								from resourcepooldepartment a,
									oss_system_user b,
									oss_system_department c 
								where concat(',',#{loginId},',') like concat('%,',loginId,',%')
									and a.groupId = c.refGroupId
									and b.department = c.id)
			</if>
			<if test="countSize == 10 and loginId != null">
				and b.poolId in (select poolId from resourcepoolusers where concat(',',#{loginId},',') like concat('%,',loginId,',%'))
			</if>
			<if test="hostName != null">
				<![CDATA[ and (a.hostName like concat('%',#{hostName},'%') or a.defaultName like concat('%',#{hostName},'%') or a.name like concat('%',#{hostName},'%'))]]>
			</if>
			<if test="businessAddress != null">
				<![CDATA[ and (b.nodeId in 
				(select i.nodeId from rn_ext_interface i  left join rn_ip_map j on i.ipaddress = j.sourceip 
				where concat('%.',c.ipAddress,'.%') like concat('%.',#{businessAddress},'.%') or concat('%.',j.mapIp,'.%') like concat('%.',#{businessAddress},'.%')) 
				or concat('%.',o.osIpAddress,'.%') like concat('%.',#{businessAddress},'.%'))
				]]>
			</if>
			<if test="businessAddressList != null">
				<![CDATA[ and (b.nodeId in 
				(select i.nodeId from rn_ext_interface i  left join rn_ip_map j on i.ipaddress = j.sourceip 
				where concat(',',#{businessAddressList},',') like concat('%,',c.ipAddress,',%') or concat(',',#{businessAddressList},',') like concat('%,',j.mapIp,',%')) 
				or concat(',',#{businessAddressList},',') like concat('%,',o.osIpAddress,',%'))
				]]>
			</if>
			<if test="sysMacAddress != null">
				<![CDATA[ and concat(',',#{sysMacAddress},',') like concat('%,',o.sysMacAddr,',%') ]]>
			</if>
			<if test="macAddress != null">
				<![CDATA[ and concat(',',#{macAddress},',') like concat('%,',c.macAddress,',%') ]]>
			</if>
			<if test="key != null">
				<![CDATA[ and (
							a.name like concat('%',#{key},'%') 
							or a.hostName like concat('%',#{key},'%') 
							or a.defaultName like concat('%',#{key},'%') 
							or ( o.osipAddress like concat('%',#{key},'%') or a.id in (select i.nodeId from rn_ext_interface i where i.ipAddress like concat('%',#{key},'%')))
							or o.sysMacAddr like concat('%',#{key},'%')  
							or c.macAddress like concat('%',#{key},'%')  
							or a.id in (select i.nodeId from rn_ext_interface i where i.macAddress like concat('%',#{key},'%'))
							or a.id in (select i.nodeId from rn_ext_wwn i where i.wwn like concat('%',#{key},'%'))
							or a.id in (
								  		select a.resourceId from oss_system_tag_resource a 
										where a.createUser = #{loginId} and a.value like concat('%',#{key},'%') 
								  	)
						  	)
				]]>
			</if>
			<if test="systemSubTypeName != null">
				and (select dictName from OSS_DICT where dictType = 'OS_SYSTEM_TYPE_VERSION' and dictId = concat(e.systemType,'_',e.systemSubType)) like concat('%',#{systemSubTypeName},'%') 
			</if>
			<if test="virtualCount != null">
				and (select count(*) from rn_ext_vir_instance m join rn_base n on m.nodeId = n.id where m.parentNodeId = a.id and n.rnStatus ='NORMAL' and m.host is not null) = #{virtualCount}
			</if>
			<if test="osUserName != null">
				and o.osUserName = #{osUserName}
			</if>
			<if test="osIpAddress != null">
				and concat('%.',o.osIpAddress,'.%') like concat('%.',#{osIpAddress},'.%')
			</if>
			<if test="zabbixAgentStatus != null">
				and e.zabbixAgentStatus = #{zabbixAgentStatus}
			</if>
			<if test="connectStatus != null">
				and e.connectStatus = #{connectStatus}
			</if>
			<if test="list != null">
				<![CDATA[ and ( ]]>
				<foreach collection="list" index="index" item="rule" open=" " separator="" close=" ">
					<if test="index > 0">
						<if test="queryColumn != null and queryColumn == 'ALL'">
							<choose>
								<when test="rule.type == 'notContain' or rule.type == 'notEqual' or rule.type == 'notStartWith' or rule.type == 'notEndWith' or rule.type == 'isEmpty'">
									and 
								</when>
								<otherwise>
									or
								</otherwise>
							</choose>
						</if>
						<if test="queryColumn == null">
							and 
						</if>
					</if>
					<choose>
						<when test="rule.key == 'systemSubTypeName'">
							ifnull((select dictName from OSS_DICT where dictType = 'OS_SYSTEM_TYPE_VERSION' and dictId = concat(e.systemType,'_',e.systemSubType)),'')
						</when>
						<when test="rule.key == 'virtualCount'">
							ifnull((select count(*) from rn_ext_vir_instance m join rn_base n on m.nodeId = n.id where m.parentNodeId = a.id and n.rnStatus ='NORMAL' and m.host is not null),'')
						</when>
						<when test="rule.key == 'name'">
							ifnull(a.name,'')
						</when>
						<otherwise>
							ifnull(${rule.key},'') 
						</otherwise>
					</choose>
		   			
					<if test="rule.type == 'contain'">
						<![CDATA[ like concat('%',#{rule.value},'%') ]]>
					</if>
					<if test="rule.type == 'notContain'">
						<![CDATA[ not like concat('%',#{rule.value},'%') ]]>
					</if>
					<if test="rule.type == 'equal'">
						<![CDATA[ = #{rule.value} ]]>
					</if>
					<if test="rule.type == 'notEqual'">
						<![CDATA[ != #{rule.value} ]]>
					</if>
					<if test="rule.type == 'notStartWith'">
						<![CDATA[ not like concat (#{rule.value},'%') ]]>
					</if>
					<if test="rule.type == 'startWith'">
						<![CDATA[ like concat (#{rule.value},'%') ]]>
					</if>
					<if test="rule.type == 'notEndWith'">
						<![CDATA[ not like concat('%',#{rule.value}) ]]>
					</if>
					<if test="rule.type == 'endWith'">
						<![CDATA[ like concat('%',#{rule.value}) ]]>
					</if>
					<if test="rule.type == 'isEmpty'">
						<![CDATA[ = '' ]]>
					</if>
		  		</foreach>
		  		<![CDATA[ ) ]]>
			</if>
		</where>
	</select> 
	<select id="selectRNExtComputeNodesHypervisor" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.*,
					b.*,
					(select dictName from OSS_DICT where dictType = 'OS_SYSTEM_TYPE_VERSION' and dictId = concat(e.systemType,'_',e.systemSubType)) systemSubTypeName ,
					(select d.name from ResourceDataCenter d where d.id = b.dataCenterId) dataCenterName,
					(select name from ResourcePool c where c.id = b.poolId) poolName,
					(select dictName from OSS_DICT where dictType = 'RESOURCE_POOL_METADATA_VIRTUALTYPE' and dictId = f.virtualizationType) typeName ,
					f.virtualizationType,
					f.cpuFrame,
					f.vcpus,
					f.memory,
					f.localDisk,
					f.localDisk root_gb,
					f.cpucores,
					f.memoryNum,
					f.diskNum,
					f.aggregateId,
					o.osIpAddress,
					o.osUserName,
					o.osPassword,
					o.osPort,
					c.ipAddress,
					c.password,
			        c.macAddress,
			        c.port,
			        c.userName,
					d.row_,
			        d.column_,
			        d.unum,
			        d.height,
			        d.slot,
			        d.purpose,
			        e.zabbixAgentStatus,
			        e.saltAgentStatus,
					e.connectStatus,
					e.systemSubType,
		        	e.systemType,
			        e.agentId,
			        ifnull(h.hostid,-1) hostid,
			        ifnull(h.hostid,-1) monitorHostId,
			        (select max(interface) from rn_ext_interface m where m.nodeId = a.id and m.isShow = 1) defaultInterface,
			        (select count(*) from rn_ext_vir_instance m join rn_base n on m.nodeId = n.id where (m.parentNodeId = a.id or m.host = a.hostName) and n.rnStatus ='NORMAL' and m.host is not null) virtualCount,
			        ifnull(h.memoryUsed,0) memoryUsed,
					ifnull(h.vcpusUsed,0) vcpusUsed,
					ifnull(h.diskUsed,0) diskUsed
			from rn_base a 
			join rn_ext_physical b on a.id = b.nodeId 
			join rn_ext_mgmtinfo c on a.id = c.nodeId 
			join rn_ext_rackinfo d on a.id = d.nodeId 
			join rn_ext_systeminfo e on a.id = e.nodeId 
			join rn_ext_compute f on a.id = f.nodeId 
			join rn_ext_osinfo o on a.id  = o.nodeId 
			left join monitornodehost h on a.id = h.nodeId 
			left join (select b.`host`,b.parentNodeId,sum(b.memory) memoryUsed,sum(b.vcpus) vcpusUsed,sum(b.root_gb) diskUsed 
						from rn_base a join rn_ext_vir_instance b on a.id = b.nodeId where a.rnStatus = 'NORMAL' group by b.host,b.parentNodeId) h on (a.hostName = h.`host` or a.id = h.parentNodeId)
		]]>
		<where>
			<![CDATA[  
				and rnStatus='NORMAL' 
			]]>
			<if test="loginId != null">
				and (
					a.id in (select resourceId from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIRTUAL')  or 
					0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIRTUAL') or 
					(0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIRTUAL') and false)
				)
			</if>
			<if test="poolId != null">
				and b.poolId = #{poolId}
			</if>
			<if test="poolId == null">
				and b.poolId in (select id from resourcepool where poolType = #{type} and type in ('VIRTUAL'))
			</if>
			<if test="datacenterId != null">
				and b.dataCenterId = #{datacenterId}
			</if>
			<if test="nodeId != null">
				and  a.id = #{nodeId}
			</if>
			<if test="tagId != null">
				and a.id in ( select a.resourceId from oss_system_tag_resource a where a.createUser = #{loginId} and a.tagId = #{tagId} )
			</if>
			<if test="tagValue != null">
				and a.id in ( select a.resourceId from oss_system_tag_resource a 
							where a.createUser = #{loginId} and concat(',',#{tagValue},',') like concat('%,',a.value,',%'))
			</if>
			<if test="saltAgentStatus != null">
				and e.saltAgentStatus = #{saltAgentStatus}
			</if>
			<if test="type != null">
				and a.type = #{type}
			</if>
			<if test="subType != null">
				and a.subType = #{subType}
			</if>
			<if test="virtualizationType != null">
				and f.virtualizationType = #{virtualizationType}
			</if>
			<if test="vcpus != null">
				<![CDATA[and f.vcpus >= #{vcpus}]]>
			</if>
			<if test="memory != null">
				<![CDATA[and f.memory >= #{memory}]]>
			</if>
			<if test="localDisk != null">
				<![CDATA[and f.localDisk >= #{localDisk}]]>
			</if>
			
			<if test="countSize == 100 and loginId != null">
				and b.poolId in (select a.poolId 
								from resourcepooldepartment a,
									oss_system_user b,
									oss_system_department c 
								where concat(',',#{loginId},',') like concat('%,',loginId,',%')
									and a.groupId = c.refGroupId
									and b.department = c.id)
			</if>
			<if test="countSize == 10 and loginId != null">
				and b.poolId in (select poolId from resourcepoolusers where concat(',',#{loginId},',') like concat('%,',loginId,',%'))
			</if>
			<if test="hostName != null">
				<![CDATA[ and (a.hostName like concat('%',#{hostName},'%') or a.defaultName like concat('%',#{hostName},'%') or a.name like concat('%',#{hostName},'%'))]]>
			</if>
			<if test="businessAddress != null">
				<![CDATA[ and (b.nodeId in 
				(select i.nodeId from rn_ext_interface i  left join rn_ip_map j on i.ipaddress = j.sourceip 
				where concat('%.',c.ipAddress,'.%') like concat('%.',#{businessAddress},'.%') or concat('%.',j.mapIp,'.%') like concat('%.',#{businessAddress},'.%')) 
				or concat('%.',o.osIpAddress,'.%') like concat('%.',#{businessAddress},'.%'))
				]]>
			</if>
			<if test="businessAddressList != null">
				<![CDATA[ and (b.nodeId in 
				(select i.nodeId from rn_ext_interface i  left join rn_ip_map j on i.ipaddress = j.sourceip 
				where concat(',',#{businessAddressList},',') like concat('%,',c.ipAddress,',%') or concat(',',#{businessAddressList},',') like concat('%,',j.mapIp,',%')) 
				or concat(',',#{businessAddressList},',') like concat('%,',o.osIpAddress,',%'))
				]]>
			</if>
			<if test="sysMacAddress != null">
				<![CDATA[ and concat(',',#{sysMacAddress},',') like concat('%,',o.sysMacAddr,',%') ]]>
			</if>
			<if test="macAddress != null">
				<![CDATA[ and concat(',',#{macAddress},',') like concat('%,',c.macAddress,',%') ]]>
			</if>
			<if test="key != null">
				<![CDATA[ and (
							a.name like concat('%',#{key},'%') 
							or a.hostName like concat('%',#{key},'%') 
							or a.defaultName like concat('%',#{key},'%') 
							or ( o.osipAddress like concat('%',#{key},'%') or a.id in (select i.nodeId from rn_ext_interface i where i.ipAddress like concat('%',#{key},'%')))
							or o.sysMacAddr like concat('%',#{key},'%')  
							or c.macAddress like concat('%',#{key},'%')  
							or a.id in (select i.nodeId from rn_ext_interface i where i.macAddress like concat('%',#{key},'%'))
							or a.id in (select i.nodeId from rn_ext_wwn i where i.wwn like concat('%',#{key},'%'))
							or a.id in (
								  		select a.resourceId from oss_system_tag_resource a 
										where a.createUser = #{loginId} and a.value like concat('%',#{key},'%') 
								  	)
						  	)
				]]>
			</if>
			<if test="systemSubTypeName != null">
				and (select dictName from OSS_DICT where dictType = 'OS_SYSTEM_TYPE_VERSION' and dictId = concat(e.systemType,'_',e.systemSubType)) like concat('%',#{systemSubTypeName},'%') 
			</if>
			<if test="virtualCount != null">
				and (select count(*) from rn_ext_vir_instance m join rn_base n on m.nodeId = n.id where m.parentNodeId = a.id and n.rnStatus ='NORMAL' and m.host is not null) = #{virtualCount}
			</if>
			<if test="osUserName != null">
				and o.osUserName = #{osUserName}
			</if>
			<if test="osIpAddress != null">
				and concat('%.',o.osIpAddress,'.%') like concat('%.',#{osIpAddress},'.%')
			</if>
			<if test="zabbixAgentStatus != null">
				and e.zabbixAgentStatus = #{zabbixAgentStatus}
			</if>
			<if test="connectStatus != null">
				and e.connectStatus = #{connectStatus}
			</if>
			<if test="list != null">
				<![CDATA[ and ( ]]>
				<foreach collection="list" index="index" item="rule" open=" " separator="" close=" ">
					<if test="index > 0">
						<if test="queryColumn != null and queryColumn == 'ALL'">
							<choose>
								<when test="rule.type == 'notContain' or rule.type == 'notEqual' or rule.type == 'notStartWith' or rule.type == 'notEndWith' or rule.type == 'isEmpty'">
									and 
								</when>
								<otherwise>
									or
								</otherwise>
							</choose>
						</if>
						<if test="queryColumn == null">
							and 
						</if>
					</if>
					<choose>
						<when test="rule.key == 'systemSubTypeName'">
							ifnull((select dictName from OSS_DICT where dictType = 'OS_SYSTEM_TYPE_VERSION' and dictId = concat(e.systemType,'_',e.systemSubType)),'')
						</when>
						<when test="rule.key == 'virtualCount'">
							ifnull((select count(*) from rn_ext_vir_instance m join rn_base n on m.nodeId = n.id where m.parentNodeId = a.id and n.rnStatus ='NORMAL' and m.host is not null),'')
						</when>
						<when test="rule.key == 'name'">
							ifnull(a.name,'')
						</when>
						<otherwise>
							ifnull(${rule.key},'') 
						</otherwise>
					</choose>
		   			
					<if test="rule.type == 'contain'">
						<![CDATA[ like concat('%',#{rule.value},'%') ]]>
					</if>
					<if test="rule.type == 'notContain'">
						<![CDATA[ not like concat('%',#{rule.value},'%') ]]>
					</if>
					<if test="rule.type == 'equal'">
						<![CDATA[ = #{rule.value} ]]>
					</if>
					<if test="rule.type == 'notEqual'">
						<![CDATA[ != #{rule.value} ]]>
					</if>
					<if test="rule.type == 'notStartWith'">
						<![CDATA[ not like concat (#{rule.value},'%') ]]>
					</if>
					<if test="rule.type == 'startWith'">
						<![CDATA[ like concat (#{rule.value},'%') ]]>
					</if>
					<if test="rule.type == 'notEndWith'">
						<![CDATA[ not like concat('%',#{rule.value}) ]]>
					</if>
					<if test="rule.type == 'endWith'">
						<![CDATA[ like concat('%',#{rule.value}) ]]>
					</if>
					<if test="rule.type == 'isEmpty'">
						<![CDATA[ = '' ]]>
					</if>
		  		</foreach>
		  		<![CDATA[ ) ]]>
			</if>
		</where>
		<if test="hostids != null">
			<![CDATA[  order by if(h.hostId is null, -1,1) desc, position(concat(',',#{hostids},',') like concat('%,',ifnull(h.hostId,-1),',%')) ]]>
		</if>
		<if test="hostids = null and instanceSort = null">
			<![CDATA[  order by monitorHostId desc ,a.id desc ]]>
		</if>
		<if test="instanceSort != null and instanceSort == 'info'">
			<![CDATA[  order by o.osIpAddress ${instanceSortDirection} ]]>
		</if>
		<if test="instanceSort != null and instanceSort == 'status'">
			<![CDATA[ order by e.connectStatus ${instanceSortDirection}, e.zabbixAgentStatus ${instanceSortDirection}, e.saltAgentStatus ${instanceSortDirection} ]]>
		</if>
		<if test="instanceSort != null and instanceSort != 'info' and instanceSort != 'status'">
			<![CDATA[  order by ${instanceSort} ${instanceSortDirection} ]]>
		</if>
		
		<if test="beginIndex != null">
			limit #{beginIndex},#{perPage}
		</if>
	</select>
	
	<select id="selectOpenstackHypervisors" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.*,a.hypervisor_hostname hostName,a.host_ip osIpAddress,b.id poolId,b.name poolName 
			from openstack_hypervisor a left join resourcepool b on a.regionName = b.regionName where b.poolType = 'COMPUTE'
		]]>
		<if test="beginIndex != null">
			limit #{beginIndex},#{perPage}
		</if>
	</select>
	<select id="selectOpenstackHypervisorsCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select count(*) totalSize from openstack_hypervisor a 
		]]>
	</select>
	<delete id="deleteOpenstackHypervisor" parameterType="java.util.HashMap">
		<![CDATA[
			delete from openstack_hypervisor where hypervisor_hostname = #{hypervisor_hostname} 
		]]>
	</delete>
	
	<select id="selectRNExtComputeNodesPowerCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select count(*) totalSize
			from rn_base a 
				join rn_ext_physical b on a.id = b.nodeId 
				join rn_ext_compute c on a.id = c.nodeId
				join rn_ext_systeminfo d on a.id = d.nodeId
				join rn_ext_rackinfo e on a.id = e.nodeId 
		]]>
		<where>
			<![CDATA[  
				and (
					a.id in (select resourceId from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='POWER')  or 
					0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='POWER') or 
					(0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='POWER') and false)
				)
			]]>
			<if test="poolId != null">
				and b.poolId = #{poolId}
			</if>
			<if test="poolId == null">
				and b.poolId in (select id from resourcepool where poolType = #{type} and type in ('POWER'))
			</if>
			<if test="dataCenterId != null">
				and b.dataCenterId = #{dataCenterId}
			</if>
			<if test="type != null">
				and a.type = #{type}
			</if>
			<if test="subType != null">
				and a.subType = #{subType}
			</if>
			<if test="virtualizationType != null">
				and c.virtualizationType = #{virtualizationType}
			</if>
			<if test="vcpus != null">
				<![CDATA[and c.vcpus >= #{vcpus}]]>
			</if>
			<if test="memory != null">
				<![CDATA[and c.memory >= #{memory}]]>
			</if>
			<if test="countSize == 100 and loginId != null">
				and b.poolId in (select a.poolId 
								from resourcepooldepartment a,
									oss_system_user b,
									oss_system_department c 
								where concat(',',#{loginId},',') like concat('%,',loginId,',%')
									and a.groupId = c.refGroupId
									and b.department = c.id)
			</if>
			<if test="countSize == 10 and loginId != null">
				and b.poolId in (select poolId from resourcepoolusers where concat(',',#{loginId},',') like concat('%,',loginId,',%'))
			</if>
			<if test="hostName != null">
				<![CDATA[ and (a.hostName like concat('%',#{hostName},'%') or a.defaultName like concat('%',#{hostName},'%') or a.name like concat('%',#{hostName},'%'))]]>
			</if>
		</where>
	</select>
	<select id="selectRNExtComputeNodesPower" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.*,
				b.*,
				(select d.name from ResourceDataCenter d where d.id = b.dataCenterId) dataCenterName,
				(select name from ResourcePool c where c.id = b.poolId) poolName,
				(select dictName from OSS_DICT where dictType = 'RESOURCE_POOL_METADATA_VIRTUALTYPE' and dictId = c.virtualizationType) typeName ,
				(select dictName from OSS_DICT where dictType = 'IPPOOL_MACHINE_TYPE' and dictId = b.machineType) machineTypeName ,
				c.virtualizationType,
				c.cpuFrame,
				c.vcpus,
				c.memory,
				c.localDisk,
				c.cpucores,
				c.memoryNum,
				c.diskNum,
				o.osIpAddress,
				o.osUserName,
				o.osPassword,
				o.osPort,
				e.row_,
				e.column_,
				e.unum,
				e.height,
				e.slot,
				e.purpose,
				d.connectStatus,
	      		d.agentId,
				(select count(*) from rn_ext_lpar i where i.parentNodeId=a.id) lparCount 
			from rn_base a 
			join rn_ext_physical b on a.id = b.nodeId 
			join rn_ext_compute c on a.id = c.nodeId
			join rn_ext_systeminfo d on a.id = d.nodeId
			join rn_ext_osinfo o on a.id = o.nodeId
			join rn_ext_rackinfo e on a.id = e.nodeId 
		]]>
		<where>
			<![CDATA[  
				and (
					a.id in (select resourceId from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='POWER')  or 
					0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='POWER') or 
					(0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='POWER') and false)
				)
			]]>
			<if test="poolId != null">
				and b.poolId = #{poolId}
			</if>
			<if test="poolId == null">
				and b.poolId in (select id from resourcepool where poolType = #{type} and type in ('POWER'))
			</if>
			<if test="dataCenterId != null">
				and b.dataCenterId = #{dataCenterId}
			</if>
			<if test="nodeId != null">
				and a.id = #{nodeId}
			</if>
			<if test="type != null">
				and a.type = #{type}
			</if>
			<if test="subType != null">
				and a.subType = #{subType}
			</if>
			<if test="virtualizationType != null">
				and c.virtualizationType = #{virtualizationType}
			</if>
			<if test="vcpus != null">
				<![CDATA[and c.vcpus >= #{vcpus}]]>
			</if>
			<if test="memory != null">
				<![CDATA[and c.memory >= #{memory}]]>
			</if>
			<if test="countSize == 100 and loginId != null">
				and b.poolId in (select a.poolId 
								from resourcepooldepartment a,
									oss_system_user b,
									oss_system_department c 
								where concat(',',#{loginId},',') like concat('%,',loginId,',%')
									and a.groupId = c.refGroupId
									and b.department = c.id)
			</if>
			<if test="countSize == 10 and loginId != null">
				and b.poolId in (select poolId from resourcepoolusers where concat(',',#{loginId},',') like concat('%,',loginId,',%'))
			</if>
			<if test="hostName != null">
				<![CDATA[ and (a.hostName like concat('%',#{hostName},'%') or a.defaultName like concat('%',#{hostName},'%') or a.name like concat('%',#{hostName},'%'))]]>
			</if>
		</where>
		<![CDATA[
			order by a.hostName desc 
		]]>
		<if test="beginIndex != null">
			limit #{beginIndex},#{perPage}
		</if>
	</select>
	
	<select id="selectResourceComputeNodesPhysicalCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select count(*) totalSize
			from rn_base a 
				join rn_ext_physical c on a.id = c.nodeId 
				join rn_ext_mgmtinfo x on a.id = x.nodeId
				join rn_ext_rackinfo y on a.id = y.nodeId
                join rn_ext_systeminfo d  on a.id=d.nodeId 
				join rn_ext_compute b on a.id = b.nodeId	
				join rn_ext_osinfo z on a.id = z.nodeId 	
		]]>
		<where>
			<![CDATA[ 
				and a.rnStatus = 'NORMAL' 
			]]>
			<![CDATA[  
				and (
					a.id in (select resourceId from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='PHYSICAL')  or 
					0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='PHYSICAL') or 
					(0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='PHYSICAL') and false)
				)
			]]>
			<if test="tagId != null">
				and a.id in ( select a.resourceId from oss_system_tag_resource a where a.createUser = #{loginId} and a.tagId = #{tagId} )
			</if>
			<if test="tagValue != null">
				and a.id in ( select a.resourceId from oss_system_tag_resource a 
							where a.createUser = #{loginId} and concat(',',#{tagValue},',') like concat('%,',a.value,',%'))
			</if>
			<if test="poolId != null and poolId != 0">
				and c.poolId = #{poolId}
			</if>
			<if test="poolId == null">
				and c.poolId in (select id from resourcepool where poolType = 'COMPUTE' and type = 'PHYSICAL')
			</if>
			<if test="poolId == 0">
				and c.poolId in (select id from resourcepool where poolType = 'MANAGE' and type = 'PHYSICAL')
			</if>
			<if test="datacenterId != null">
				and c.dataCenterId = #{datacenterId}
			</if>
			<if test="nodeId != null">
				and a.id = #{nodeId}
			</if>
			<if test="saltAgentStatus != null">
				and d.saltAgentStatus = #{saltAgentStatus}
			</if>
			<if test="type != null">
				and a.type = #{type}
			</if>
			<if test="subType != null">
				and a.subType = #{subType}
			</if>
			<if test="virtualizationType != null">
				and b.virtualizationType = #{virtualizationType}
			</if>
			<if test="vcpus != null">
				<![CDATA[and b.vcpus >= #{vcpus}]]>
			</if>
			<if test="memory != null">
				<![CDATA[and b.memory >= #{memory}]]>
			</if>
			<if test="localDisk != null">
				<![CDATA[and b.localDisk >= #{localDisk}]]>
			</if>
			<if test="countSize == 100 and loginId != null">
				and c.poolId in (select a.poolId 
								from resourcepooldepartment a,
									oss_system_user b,
									oss_system_department c 
								where concat(',',#{loginId},',') like concat('%,',loginId,',%')
									and a.groupId = c.refGroupId
									and b.department = c.id)
			</if>
			<if test="countSize == 10 and loginId != null">
				and c.poolId in (select poolId from resourcepoolusers where concat(',',#{loginId},',') like concat('%,',loginId,',%'))
			</if>
			<if test="hostName != null">
				<![CDATA[ and (a.hostName like concat('%',#{hostName},'%') or a.defaultName like concat('%',#{hostName},'%') or a.name like concat('%',#{hostName},'%'))]]>
			</if>
			<if test="businessAddress != null">
				<![CDATA[ and 
					(b.nodeId in 
					(select i.nodeId from rn_ext_interface i left join rn_ip_map j on i.ipaddress = j.sourceip 
					where concat('%.',i.ipAddress,'.%') like concat('%.',#{businessAddress},'.%') or concat('%.',j.mapIp,'.%') like concat('%.',#{businessAddress},'.%'))
					or concat('%.',z.osIpAddress,'.%') like concat('%.',#{businessAddress},'.%')) 
				]]>
			</if>
			<if test="businessAddressList != null">
				<![CDATA[ and 
					(b.nodeId in 
					(select i.nodeId from rn_ext_interface i left join rn_ip_map j on i.ipaddress = j.sourceip 
					where concat(',',#{businessAddressList},',') like concat('%,',i.ipAddress,',%') or concat(',',#{businessAddressList},',') like concat('%,',j.mapIp,',%'))
					or concat(',',#{businessAddressList},',') like concat('%,',z.osIpAddress,',%')) 
				]]>
			</if>
			<if test="sysMacAddress != null">
				<![CDATA[ and concat(',',#{sysMacAddress},',') like concat('%,',z.sysMacAddr,',%') ]]>
			</if>
			<if test="macAddress != null">
				<![CDATA[ and concat(',',#{macAddress},',') like concat('%,',x.macAddress,',%') ]]>
			</if>
			<if test="key != null">
				<![CDATA[ and (
							a.name like concat('%',#{key},'%') 
							or a.hostName like concat('%',#{key},'%') 
							or a.defaultName like concat('%',#{key},'%') 
							or ( z.osipAddress like concat('%',#{key},'%') or a.id in (select i.nodeId from rn_ext_interface i where i.ipAddress like concat('%',#{key},'%')))
							or z.sysMacAddr like concat('%',#{key},'%')  
							or x.macAddress like concat('%',#{key},'%')  
							or a.id in (select i.nodeId from rn_ext_interface i where i.macAddress like concat('%',#{key},'%'))
							or a.id in (select i.nodeId from rn_ext_wwn i where i.wwn like concat('%',#{key},'%'))
						  	or a.id in (
						  		select a.resourceId from oss_system_tag_resource a 
								where a.createUser = #{loginId} and a.value like concat('%',#{key},'%') 
						  	)
						  )
				]]>
			</if>
			<if test="list != null">
				<![CDATA[ and ( ]]>
				<foreach collection="list" index="index" item="rule" open=" " separator="" close=" ">
					<if test="index > 0">
						<if test="queryColumn != null and queryColumn == 'ALL'">
							<choose>
								<when test="rule.type == 'notContain' or rule.type == 'notEqual' or rule.type == 'notStartWith' or rule.type == 'notEndWith' or rule.type == 'isEmpty'">
									and 
								</when>
								<otherwise>
									or
								</otherwise>
							</choose>
						</if>
						<if test="queryColumn == null">
							and 
						</if>
					</if>
					<choose>
						<when test="rule.key == 'systemSubTypeName'">
							ifnull((select dictName from oss_dict where dictType = 'OS_SYSTEM_TYPE_VERSION' and dictId = concat(d.systemType,'_',d.systemSubType)),'')
						</when>
						<when test="rule.key == 'ipAddress'">
							ifnull(x.ipAddress,'')
						</when>
						<otherwise>
							ifnull(${rule.key},'') 
						</otherwise>
					</choose>
		   			
					<if test="rule.type == 'contain'">
						<![CDATA[ like concat('%',#{rule.value},'%') ]]>
					</if>
					<if test="rule.type == 'notContain'">
						<![CDATA[ not like concat('%',#{rule.value},'%') ]]>
					</if>
					<if test="rule.type == 'equal'">
						<![CDATA[ = #{rule.value} ]]>
					</if>
					<if test="rule.type == 'notEqual'">
						<![CDATA[ != #{rule.value} ]]>
					</if>
					<if test="rule.type == 'notStartWith'">
						<![CDATA[ not like concat (#{rule.value},'%') ]]>
					</if>
					<if test="rule.type == 'startWith'">
						<![CDATA[ like concat (#{rule.value},'%') ]]>
					</if>
					<if test="rule.type == 'notEndWith'">
						<![CDATA[ not like concat('%',#{rule.value}) ]]>
					</if>
					<if test="rule.type == 'endWith'">
						<![CDATA[ like concat('%',#{rule.value}) ]]>
					</if>
					<if test="rule.type == 'isEmpty'">
						<![CDATA[ = '' ]]>
					</if>
		  		</foreach>
		  		<![CDATA[ ) ]]>
			</if>
		</where>
	</select> 
	<select id="selectResourceComputeNodesPhysical" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.*, 
				c.*,
				(select dictName from oss_dict where dictType = 'OS_SYSTEM_TYPE_VERSION' and dictId = concat(d.systemType,'_',d.systemSubType)) systemSubTypeName ,
				(select e.name from resourcedatacenter e where e.id = c.dataCenterId) dataCenterName,
				(select name from resourcepool f where f.id = c.poolId) poolName,
				b.virtualizationType,
				b.cpuFrame,
				b.vcpus,
				b.memory,
				b.localDisk,
				b.cpucores,
				b.memoryNum,
				b.diskNum,
				(select dictName from oss_dict where dictType = 'RESOURCE_POOL_METADATA_VIRTUALTYPE' and dictId = b.virtualizationType) typeName ,
                x.ipAddress,
                x.password,
                x.macAddress,
                x.port,
                x.userName,
                z.osIpAddress,
				z.osUserName,
				z.osPassword,
				z.osPort,
                y.row_,
                y.column_,
                y.unum,
                y.height,
                y.slot,
                y.purpose,
                ifnull(c.initStatus,0) initStatus,
                ifnull(d.zabbixAgentStatus,0) zabbixAgentStatus,
                ifnull(d.saltAgentStatus,0) saltAgentStatus,
				ifnull(d.powerStatus,0) powerStatus,
				d.systemSubType,
				d.systemType,
                d.agentId,
                d.connectStatus,
                ifnull(h.hostid,-1) hostid,
                (select max(interface) from rn_ext_interface m where m.nodeId = a.id and m.isShow = 1) defaultInterface,
                (select count(*) from rn_ext_os_security n where n.minion = d.agentId) passwordStatus
			from rn_base a 
				join rn_ext_physical c on a.id = c.nodeId 
				join rn_ext_mgmtinfo x on a.id = x.nodeId
				join rn_ext_rackinfo y on a.id = y.nodeId
                join rn_ext_systeminfo d  on a.id=d.nodeId 
				join rn_ext_compute b on a.id = b.nodeId	
				join rn_ext_osinfo z on a.id = z.nodeId 
				left join monitornodehost h on a.id = h.nodeId 
		]]>
		<where>
			<![CDATA[ 
				and a.rnStatus = 'NORMAL' 
			]]>
			<![CDATA[  
				and (
					a.id in (select resourceId from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='PHYSICAL')  or 
					0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='PHYSICAL') or 
					(0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='PHYSICAL') and false)
				)
			]]>
			<if test="tagId != null">
				and a.id in ( select a.resourceId from oss_system_tag_resource a where a.createUser = #{loginId} and a.tagId = #{tagId} )
			</if>
			<if test="tagValue != null">
				and a.id in ( select a.resourceId from oss_system_tag_resource a 
							where a.createUser = #{loginId} and concat(',',#{tagValue},',') like concat('%,',a.value,',%'))
			</if>
			<if test="poolId != null and poolId != 0">
				and c.poolId = #{poolId}
			</if>
			<if test="poolId == null">
				and c.poolId in (select id from resourcepool where poolType = 'COMPUTE' and type = 'PHYSICAL')
			</if>
			<if test="poolId == 0">
				and c.poolId in (select id from resourcepool where poolType = 'MANAGE' and type = 'PHYSICAL')
			</if>
			<if test="datacenterId != null">
				and c.dataCenterId = #{datacenterId}
			</if>
			<if test="nodeId != null">
				and a.id = #{nodeId}
			</if>
			<if test="saltAgentStatus != null">
				and d.saltAgentStatus = #{saltAgentStatus}
			</if>
			<if test="type != null">
				and a.type = #{type}
			</if>
			<if test="subType != null">
				and a.subType = #{subType}
			</if>
			<if test="virtualizationType != null">
				and b.virtualizationType = #{virtualizationType}
			</if>
			<if test="vcpus != null">
				<![CDATA[and b.vcpus >= #{vcpus}]]>
			</if>
			<if test="memory != null">
				<![CDATA[and b.memory >= #{memory}]]>
			</if>
			<if test="localDisk != null">
				<![CDATA[and b.localDisk >= #{localDisk}]]>
			</if>
			<if test="countSize == 100 and loginId != null">
				and c.poolId in (select a.poolId 
								from resourcepooldepartment a,
									oss_system_user b,
									oss_system_department c 
								where concat(',',#{loginId},',') like concat('%,',loginId,',%')
									and a.groupId = c.refGroupId
									and b.department = c.id)
			</if>
			<if test="countSize == 10 and loginId != null">
				and c.poolId in (select poolId from resourcepoolusers where concat(',',#{loginId},',') like concat('%,',loginId,',%'))
			</if>
			<if test="hostName != null">
				<![CDATA[ and (a.hostName like concat('%',#{hostName},'%') or a.defaultName like concat('%',#{hostName},'%') or a.name like concat('%',#{hostName},'%'))]]>
			</if>
			<if test="businessAddress != null">
				<![CDATA[ and 
					(b.nodeId in 
					(select i.nodeId from rn_ext_interface i left join rn_ip_map j on i.ipaddress = j.sourceip 
					where concat('%.',i.ipAddress,'.%') like concat('%.',#{businessAddress},'.%') or concat('%.',j.mapIp,'.%') like concat('%.',#{businessAddress},'.%'))
					or concat('%.',z.osIpAddress,'.%') like concat('%.',#{businessAddress},'.%')) 
				]]>
			</if>
			<if test="businessAddressList != null">
				<![CDATA[ and 
					(b.nodeId in 
					(select i.nodeId from rn_ext_interface i left join rn_ip_map j on i.ipaddress = j.sourceip 
					where concat(',',#{businessAddressList},',') like concat('%,',i.ipAddress,',%') or concat(',',#{businessAddressList},',') like concat('%,',j.mapIp,',%'))
					or concat(',',#{businessAddressList},',') like concat('%,',z.osIpAddress,',%')) 
				]]>
			</if>
			<if test="sysMacAddress != null">
				<![CDATA[ and concat(',',#{sysMacAddress},',') like concat('%,',z.sysMacAddr,',%') ]]>
			</if>
			<if test="macAddress != null">
				<![CDATA[ and concat(',',#{macAddress},',') like concat('%,',x.macAddress,',%') ]]>
			</if>
			<if test="key != null">
				<![CDATA[ and (
							a.name like concat('%',#{key},'%') 
							or a.hostName like concat('%',#{key},'%') 
							or a.defaultName like concat('%',#{key},'%') 
							or ( z.osipAddress like concat('%',#{key},'%') or a.id in (select i.nodeId from rn_ext_interface i where i.ipAddress like concat('%',#{key},'%')))
							or z.sysMacAddr like concat('%',#{key},'%')  
							or x.macAddress like concat('%',#{key},'%')  
							or a.id in (select i.nodeId from rn_ext_interface i where i.macAddress like concat('%',#{key},'%'))
							or a.id in (select i.nodeId from rn_ext_wwn i where i.wwn like concat('%',#{key},'%'))
						  	or a.id in (
						  		select a.resourceId from oss_system_tag_resource a 
								where a.createUser = #{loginId} and a.value like concat('%',#{key},'%') 
						  	)
						  )
				]]>
			</if>
			<if test="list != null">
				<![CDATA[ and ( ]]>
				<foreach collection="list" index="index" item="rule" open=" " separator="" close=" ">
					<if test="index > 0">
						<if test="queryColumn != null and queryColumn == 'ALL'">
							<choose>
								<when test="rule.type == 'notContain' or rule.type == 'notEqual' or rule.type == 'notStartWith' or rule.type == 'notEndWith' or rule.type == 'isEmpty'">
									and 
								</when>
								<otherwise>
									or
								</otherwise>
							</choose>
						</if>
						<if test="queryColumn == null">
							and 
						</if>
					</if>
					<choose>
						<when test="rule.key == 'systemSubTypeName'">
							ifnull((select dictName from oss_dict where dictType = 'OS_SYSTEM_TYPE_VERSION' and dictId = concat(d.systemType,'_',d.systemSubType)),'')
						</when>
						<when test="rule.key == 'ipAddress'">
							ifnull(x.ipAddress,'')
						</when>
						<otherwise>
							ifnull(${rule.key},'') 
						</otherwise>
					</choose>
		   			
					<if test="rule.type == 'contain'">
						<![CDATA[ like concat('%',#{rule.value},'%') ]]>
					</if>
					<if test="rule.type == 'notContain'">
						<![CDATA[ not like concat('%',#{rule.value},'%') ]]>
					</if>
					<if test="rule.type == 'equal'">
						<![CDATA[ = #{rule.value} ]]>
					</if>
					<if test="rule.type == 'notEqual'">
						<![CDATA[ != #{rule.value} ]]>
					</if>
					<if test="rule.type == 'notStartWith'">
						<![CDATA[ not like concat (#{rule.value},'%') ]]>
					</if>
					<if test="rule.type == 'startWith'">
						<![CDATA[ like concat (#{rule.value},'%') ]]>
					</if>
					<if test="rule.type == 'notEndWith'">
						<![CDATA[ not like concat('%',#{rule.value}) ]]>
					</if>
					<if test="rule.type == 'endWith'">
						<![CDATA[ like concat('%',#{rule.value}) ]]>
					</if>
					<if test="rule.type == 'isEmpty'">
						<![CDATA[ = '' ]]>
					</if>
		  		</foreach>
		  		<![CDATA[ ) ]]>
			</if>
		</where>
		
		<if test="instanceSort != null and instanceSort == 'configuration'">
			<![CDATA[  order by b.vcpus ${instanceSortDirection}, b.memory ${instanceSortDirection}, b.localDisk ${instanceSortDirection}]]>
		</if>
		<if test="instanceSort != null and instanceSort == 'status'">
			<![CDATA[  order by d.connectStatus ${instanceSortDirection}, zabbixAgentStatus ${instanceSortDirection}, saltAgentStatus ${instanceSortDirection}]]>
		</if>
		<if test="instanceSort != null and instanceSort != 'configuration' and instanceSort != 'status'">
			<![CDATA[  order by ${instanceSort} ${instanceSortDirection} ]]>
		</if>
		<if test="instanceSort == null">
			<![CDATA[  order by a.hostName desc  ]]>
		</if>
		
		<if test="beginIndex != null">
			limit #{beginIndex},#{perPage}
		</if>
	</select>
	<select id="selectResourceComputeNodesPhysicalInterface" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.*
			from rn_ext_interface a
			where a.nodeId = #{nodeId}
		]]>
	</select>
	
	
	<update id="updateNodeDefaultInterface" parameterType="java.util.HashMap">
		<![CDATA[
			update rn_ext_interface 
		]]>
		<if test="interfaceId == null">
			set isShow = 0
			where nodeId = #{nodeId}
		</if>
		<if test="interfaceId != null">
			set isShow = 1
			where id = #{interfaceId}
		</if>
	</update>
	
	<update id="updateRNExtDefaultInterface" parameterType="java.util.HashMap">
		<![CDATA[
			update rn_ext_interface 
		]]>
		<if test="interfaceId == null">
			set isShow = 0
			where nodeId = #{nodeId}
		</if>
		<if test="interfaceId != null">
			set isShow = 1
			where id = #{interfaceId}
		</if>
	</update>
	
	<select id="selectResourceNodeDisk" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.*
			from rn_ext_compute_disk a
			where a.nodeId = #{nodeId} 
		]]>
	</select>
	
	<select id="selectResourceIpPoolsCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select count(*) totalSize
			from rn_ip_pool a
		]]>
		<where>
			<if test="datacenterId != null">
				and dataCenterId = #{datacenterId}
			</if>
			<if test="poolId != null">
				and  a.id = #{poolId}
			</if>
		</where>
	</select>
	
	<delete id="deleteResourceIpPool" parameterType="java.util.HashMap">
		<![CDATA[
			delete from rn_ip_pool where id = #{poolId}
		]]>
	</delete>
	
	<insert id="insertResourceIpPool" parameterType="java.util.HashMap">
		<![CDATA[
			insert into rn_ip_pool(name,dataCenterId,machineType,resourceType,type,vlan,baseIp,mask,gateway,dns,ipRange,createUser)
			values(#{name},#{dataCenterId},#{machineType},#{resourceType},#{type},#{vlan},#{baseIp},#{mask},#{gateway},#{dns},#{ipRange},#{loginId})
		]]>
		<selectKey keyProperty="poolId" resultType="int" order="AFTER">
			select LAST_INSERT_ID()
		</selectKey>
	</insert>
	
	<update id="updateResourceIpPool" parameterType="java.util.HashMap">
		<![CDATA[
			update rn_ip_pool set id=#{poolId}
		]]>
		<if test="name != null">
			, name = #{name}
		</if>
		<if test="dataCenterId != null">
			, dataCenterId = #{dataCenterId}
		</if>
		<if test="machineType != null">
			, machineType = #{machineType}
		</if>
		<if test="resourceType != null">
			, resourceType = #{resourceType}
		</if>
		<if test="type != null">
			, type = #{type}
		</if>
		<if test="vlan != null">
			, vlan = #{vlan}
		</if>
		<if test="baseIp != null">
			, baseIp = #{baseIp}
		</if>
		<if test="mask != null">
			, mask = #{mask}
		</if>
		<if test="gateway != null">
			, gateway = #{gateway}
		</if>
		<if test="ipRange != null">
			, ipRange = concat(ipRange,',',#{ipRange})
		</if>
		<![CDATA[	
			where id = #{poolId}
		]]>
	</update>
	
	<insert id="insertResourceIpPoolRelation" parameterType="java.util.HashMap">
		<![CDATA[
			insert into rn_ip_pool_relation(poolId,refPoolId) values (#{poolId},#{refPoolId})
		]]>
	</insert>
	<select id="selectResourceIpPoolRelation" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.* , (select d.name from ResourceDataCenter d where d.id = a.dataCenterId) dataCenterName ,ifnull(b.refPoolId,-1) checkStatus
			from rn_ip_pool a 
				     left join rn_ip_pool_relation b on b.poolId = 6 and b.refPoolId = a.id
				where 
					a.datacenterId=#{datacenterId} 
					and a.type = #{type} 
				    and a.machineType = #{machineType} 
				    and a.resourceType = #{resourceType} 
		]]>
	</select>
	<delete id="deleteResourceIpPoolRelation" parameterType="java.util.HashMap">
		<![CDATA[
			delete from rn_ip_pool_relation 
		]]>
		<where>
			<if test="poolId != null">
				and poolId = #{poolId}
			</if>
		</where>
	</delete>
	
	<delete id="deleteResourceIpItem" parameterType="java.util.HashMap">
		<![CDATA[
			delete from rn_ip_item 
		]]>
		<where>
			<if test="poolId != null">
				and poolId = #{poolId}
			</if>
			<if test="ipItemId != null">
				and id = #{id}
			</if>
		</where>
	</delete>
	<insert id="insertResourceIpItem" parameterType="java.util.HashMap">
		<![CDATA[
			insert into rn_ip_item(poolId,ipAddress,ipAddressLong)
			select #{poolId},#{ipAddress},#{ipAddressLong}
			from dual
			where not exists(select poolid from rn_ip_item t where t.poolId = #{poolId} and t.ipaddress = #{ipAddress})
		]]>
	</insert>
	
	<select id="selectResourceNodesByNodeId" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.*,
				c.ipaddress mgmtIpAddress,
				c.port mgmtPort,
				c.userName mgmtUserName,
				c.password mgmtPassword,
				b.connectStatus,
				b.mgmtConneteStatus,
				b.powerStatus,
				c.macAddress,
				a.serialNumber,
				a.unitType
			from ResourceNode a,
				ResourceNodeSystemInfo b,
				resourcenodemgmtinfo c
			where nodeType in ('BARE','COMPUTE','MANAGE','OPERATION')
				and a.id = b.nodeId
				and b.type = 'PHYSICAL'
				and a.id = c.nodeId
				and a.id = #{nodeId}
		]]>
	</select>
	
	<select id="selectIpPoolInfoByNodeId" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.ipAddress,e.* 
			from rn_ext_mgmtinfo a,
			     rn_ip_pool b,
			     rn_ip_item c,
			     rn_ip_pool_relation d,
			     rn_ip_pool e
			where a.ipaddress = c.ipaddress
			      and b.id = c.poolId
			      and a.nodeid = #{nodeId}
			      and b.id = d.poolId
			      and e.id = d.refPoolId
		]]>
	</select>
	
	<select id="selectResourceIpPools" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.*,
				(select d.name from ResourceDataCenter d where d.id = a.dataCenterId) dataCenterName,
				(select dictName from oss_dict where dictType = 'IPPOOL_TYPE' and dictId = a.type) typName ,
				(select count(*) from rn_ip_item k where k.poolid = a.id) totalCount,
		    	if(a.type = 'MGMT',ifnull(k.useCount,0),ifnull(m.useCount,0)) useCount
			from rn_ip_pool a
	          left join (select t.id,count(*) useCount
			            from rn_ip_pool t,
			                 rn_ip_item a,
			                 rn_ext_mgmtinfo b
			            where b.ipaddress is not null
			                  and a.poolid = t.id
                        and t.type = 'MGMT'
                        and a.ipaddress = b.ipaddress
			            group by t.id) k on a.id = k.id 
              left join (select t.id,count(*) useCount
		            from rn_ip_pool t,
		                 rn_ip_item a,
                     rn_ext_osinfo c
		            where a.ipaddress = c.osipaddress
		                  and a.poolid = t.id
                      and t.type = 'MANAGE'
		            group by t.id) m on a.id = m.id
		]]>
		<where>
			<if test="datacenterId != null">
				and dataCenterId = #{datacenterId}
			</if>
			<if test="poolId != null">
				and  a.id = #{poolId}
			</if>
			<if test="type != null">
				and  a.type = #{type}
			</if>
			<if test="machineType != null">
				and  a.machineType = #{machineType}
			</if>
			<if test="resourceType != null">
				and  a.resourceType = #{resourceType}
			</if>
		</where>
		
		<![CDATA[ order by a.vlan desc ]]>
		
		<if test="beginIndex != null">
			limit #{beginIndex},#{perPage}
		</if>
	</select>
	
	<select id="selectResourceIpItemsCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select count(*) totalSize
			from rn_ip_item a
		]]>
		<where>
			<if test="poolId != null">
				and  a.poolId = #{poolId}
			</if>
			<if test="status != null">
				and  a.status = #{status}
			</if>
		</where>
	</select>
	<select id="selectResourceIpItems" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[	
			select a.*,
       			concat(if(t.ipAddress is null,'',t.hostName),if(k.osipaddress is null,'',k.hostname),if(y.osipaddress is null,'',y.name)) hostname
			from rn_ip_item a
	      		left join resourcenode k on k.osipaddress = a.ipaddress
	      		left join (select b.ipaddress,if(m.name is null or m.name = '',m.defaultName,m.name ) hostname 
                      from resourcenode m
                        join resourcenodemgmtinfo b on m.id = b.nodeid) t  on t.ipaddress = a.ipaddress
            left join (select b.osipaddress,a.name from rn_ext_vir_instance a,openstack_instance_systeminfo b where a.uuid = b.uuid) y on y.osipaddress = a.ipaddress
	      		]]>
		<where>
			<if test="poolId != null">
				and  a.poolId = #{poolId}
			</if>
			<!-- <if test="status != null">
				and  a.status = #{status}
			</if> -->
			<if test="status == 1">
				and (t.ipAddress is not null or k.osipaddress is not null or y.osipaddress is not null)
			</if>
			<if test="status == 0">
				and (t.ipaddress is null and k.osipaddress is null and y.osipaddress is null)
			</if>
		</where>
		<!-- 
		<if test="beginIndex != null">
			limit #{beginIndex},#{perPage}
		</if> 
		-->
			order by a.ipaddresslong
		<if test="lockNum != null">
			limit 0,#{lockNum}
		</if> 
	</select>
	
	<update id="updateResourceIpItem" parameterType="java.util.HashMap">
		<![CDATA[
			update rn_ip_item set id=#{ipItemId}
		]]>
		<if test="status != null">
			, status = #{status}
		</if>
		<![CDATA[	
			where id = #{ipItemId}
		]]>
	</update>
	
	<select id="selectResourceNetworkPorts" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[	
			select a.*,m.*
			from rn_ext_network_port a
     		left join (select a.*,t.id,t.hostname,o.osIpAddress from (select portnum,max(vlan) vlan,max(macaddress) macAddress,max(type) type from rn_ext_network_port_mac group by portnum) a,
        ]]> 	
        <if test="type == 'CON'">
                      rn_ext_mgmtinfo b,
                     rn_base t,
                     rn_ext_osinfo o 
                where a.macAddress = b.macAddress 
                	  and o.nodeId=t.id 
                      and b.nodeId = t.id) m on m.portNum = a.id
        </if>
        <if test="type != 'CON'">
                     rn_ext_interface b,
                     rn_base t ,
                     rn_ext_osinfo o 
                where a.macAddress = b.macAddress
                	  and o.nodeId=t.id 
                      and b.nodeId = t.id) m on m.portNum = a.id
        </if>
        <![CDATA[	
			where nodeid = #{nodeId} 
			order by convert(substring_index(a.name,'/',-1),SIGNED);
   		]]> 		
	</select>

	<insert id="insertResourceIpMap" parameterType="java.util.HashMap">
		<![CDATA[
			insert into rn_ip_map(sourceIp,mapIp,remark) values (#{sourceIp},#{mapIp},#{remark})
		]]>
	</insert>
	<select id="selectResourceIpMapCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select count(*) totalSize
			from rn_ip_map a
		]]>
		<where>
			<if test="sourceIp != null">
				and  a.sourceIp = #{sourceIp}
			</if>
			<if test="mapIp != null">
				and  a.mapIp = #{mapIp}
			</if>
		</where>
	</select>
	<select id="selectResourceIpMap" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.* from rn_ip_map a 
		]]>
		<where>
			<if test="sourceIp != null">
				and sourceIp = #{sourceIp}
			</if>
			<if test="mapIp != null">
				and mapIp = #{mapIp}
			</if>
		</where>
		<if test="beginIndex != null">
			limit #{beginIndex},#{perPage}
		</if>
	</select>
	<delete id="deleteResourceIpMap" parameterType="java.util.HashMap">
		<![CDATA[
			delete from rn_ip_map where id = #{id}
		]]>
	</delete>
	
	<update id="updateResourceIpMap" parameterType="java.util.HashMap">
		<![CDATA[
			update rn_ip_map set id=#{id}
		]]>
		<if test="sourceIp != null">
			, sourceIp = #{sourceIp}
		</if>
		<if test="mapIp != null">
			, mapIp = #{mapIp} 
		</if>
		<if test="remark != null">
			, remark = #{remark} 
		</if>
		<![CDATA[	
			where id = #{id}
		]]>
	</update>
	
	<select id="selectRNExtComputeNodesCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select count(*) totalSize
				from rn_base a 
				join rn_ext_physical b on a.id=b.nodeId
				join rn_ext_systeminfo c on a.id=c.nodeId 
				join rn_ext_compute d on a.id = d.nodeId 
				join rn_ext_mgmtinfo x on a.id = x.nodeId
				join rn_ext_rackinfo y on a.id = y.nodeId 
				join rn_ext_osinfo o on a.id = o.nodeId 
		]]>
		<where>
			<![CDATA[ 
				and a.rnStatus = 'NORMAL' 
			]]>
			<!-- 
			<if test="loginId != null">
				and (
					a.id in (select resourceId from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='COMPUTE')  or 
					0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='COMPUTE') or 
					(0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='COMPUTE') and false)
				)
			</if>
			 -->
			<if test="poolId != null">
				and b.poolId = #{poolId}
			</if>
			<if test="datacenterId != null">
				and b.dataCenterId = #{datacenterId}
			</if>
			<if test="nodeId != null">
				and  a.id = #{nodeId}
			</if>
			<if test="type != null">
				and a.type = #{type}
			</if>
			<if test="subType != null">
				and a.subType = #{subType}
			</if>
			<if test="virtualizationType != null">
				and d.virtualizationType = #{virtualizationType}
			</if>
			<if test="vcpus != null">
				<![CDATA[and d.vcpus >= #{vcpus}]]>
			</if>
			<if test="memory != null">
				<![CDATA[and d.memory >= #{memory}]]>
			</if>
			<if test="localDisk != null">
				<![CDATA[and d.localDisk >= #{localDisk}]]>
			</if>
			<if test="countSize == 100 and loginId != null">
				and b.poolId in (select a.poolId 
								from resourcepooldepartment a,
									oss_system_user b,
									oss_system_department c 
								where concat(',',#{loginId},',') like concat('%,',loginId,',%')
									and a.groupId = c.refGroupId
									and b.department = c.id)
			</if>
			<if test="countSize == 10 and loginId != null">
				and b.poolId in (select poolId from resourcepoolusers where concat(',',#{loginId},',') like concat('%,',loginId,',%'))
			</if>
			<if test="hostName != null">
				<![CDATA[ and (a.hostName like concat('%',#{hostName},'%') or a.defaultName like concat('%',#{hostName},'%') or a.name like concat('%',#{hostName},'%'))]]>
			</if>
			<if test="businessAddress != null">
				<![CDATA[ and 
					(b.nodeId in 
					(select i.nodeId from rn_ext_interface i left join rn_ip_map j on i.ipaddress = j.sourceip 
					where concat('%.',i.ipAddress,'.%') like concat('%.',#{businessAddress},'.%') or concat('%.',j.mapIp,'.%') like concat('%.',#{businessAddress},'.%'))
					or concat('%.',o.osIpAddress,'.%') like concat('%.',#{businessAddress},'.%') 
					or concat('%.',x.ipAddress,'.%') like concat('%.',#{businessAddress},'.%')) 
				]]>
			</if>
			<if test="businessAddressList != null">
				<![CDATA[ and 
					(b.nodeId in 
					(select i.nodeId from rn_ext_interface i  left join rn_ip_map j on i.ipaddress = j.sourceip 
					where concat(',',#{businessAddressList},',') like concat('%,',i.ipAddress,',%') or concat(',',#{businessAddressList},',') like concat('%,',j.mapIp,',%')) 
					or concat(',',#{businessAddressList},',') like concat('%,',o.osIpAddress,',%') 
					or concat(',',#{businessAddressList},',') like concat('%,',x.ipAddress,',%')) 
				]]>
			</if>
			<if test="sysMacAddress != null">
				<![CDATA[ and concat(',',#{sysMacAddress},',') like concat('%,',o.sysMacAddr,',%') ]]>
			</if>
			<if test="macAddress != null">
				<![CDATA[ and concat(',',#{macAddress},',') like concat('%,',x.macAddress,',%') ]]>
			</if>
			<if test="key != null">
				and (a.hostName like concat('%',#{key},'%') 
						or a.defaultName like concat('%',#{key},'%') 
						or a.name like concat('%',#{key},'%') 
						or o.sysMacAddr like concat('%',#{key},'%')  
						or x.macAddress like concat('%',#{key},'%') 						
						or a.id in (select i.nodeId from rn_ext_interface i where i.macAddress like concat('%',#{key},'%'))
						or a.id in (select i.nodeId from rn_ext_wwn i where i.wwn like concat('%',#{key},'%'))
						or (o.osipAddress like concat('%',#{key},'%') or a.id in (select i.nodeId from rn_ext_interface i where i.ipAddress like concat('%',#{key},'%')))
					)
			</if>
			<if test="list != null">
				<![CDATA[ and ( ]]>
				<foreach collection="list" index="index" item="rule" open=" " separator="" close=" ">
					<if test="index > 0">
						<if test="queryColumn != null and queryColumn == 'ALL'">
							<choose>
								<when test="rule.type == 'notContain' or rule.type == 'notEqual' or rule.type == 'notStartWith' or rule.type == 'notEndWith' or rule.type == 'isEmpty'">
									and 
								</when>
								<otherwise>
									or
								</otherwise>
							</choose>
						</if>
						<if test="queryColumn == null">
							and 
						</if>
					</if>
					<choose>
						<when test="rule.key == 'systemSubTypeName'">
							ifnull((select dictName from OSS_DICT where dictType = 'RESOURCE_SYSTEM_TYPE' and dictId = c.systemSubType),'')
						</when>
						<when test="rule.key == 'poolName'">
							ifnull((select name from ResourcePool c where c.id = b.poolId),'')
						</when>
						<when test="rule.key == 'connectStatus'">
							ifnull(c.connectStatus,0)
						</when>
						<when test="rule.key == 'zabbixAgentStatus'">
							ifnull(c.zabbixAgentStatus,0)
						</when>
						<when test="rule.key == 'saltAgentStatus'">
							ifnull(c.saltAgentStatus,0)
						</when>
						<when test="rule.key == 'powerStatus'">
							ifnull(c.powerStatus,0)
						</when>
						<when test="rule.key == 'mgmtConneteStatus'">
							ifnull(c.mgmtConnectStatus,0)
						</when>
						<otherwise>
							ifnull(${rule.key},'') 
						</otherwise>
					</choose>
		   			
					<if test="rule.type == 'contain'">
						<![CDATA[ like concat('%',#{rule.value},'%') ]]>
					</if>
					<if test="rule.type == 'notContain'">
						<![CDATA[ not like concat('%',#{rule.value},'%') ]]>
					</if>
					<if test="rule.type == 'equal'">
						<![CDATA[ = #{rule.value} ]]>
					</if>
					<if test="rule.type == 'notEqual'">
						<![CDATA[ != #{rule.value} ]]>
					</if>
					<if test="rule.type == 'notStartWith'">
						<![CDATA[ not like concat (#{rule.value},'%') ]]>
					</if>
					<if test="rule.type == 'startWith'">
						<![CDATA[ like concat (#{rule.value},'%') ]]>
					</if>
					<if test="rule.type == 'notEndWith'">
						<![CDATA[ not like concat('%',#{rule.value}) ]]>
					</if>
					<if test="rule.type == 'endWith'">
						<![CDATA[ like concat('%',#{rule.value}) ]]>
					</if>
					<if test="rule.type == 'isEmpty'">
						<![CDATA[ = '' ]]>
					</if>
		  		</foreach>
		  		<![CDATA[ ) ]]>
			</if>
		</where>
	</select>

	<select id="selectRNExtComputeNodes" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.*,
				b.*,
				(select dictName from OSS_DICT where dictType = 'RESOURCE_SYSTEM_TYPE' and dictId = c.systemSubType) systemSubTypeName,
				(select d.name from ResourceDataCenter d where d.id = b.dataCenterId) dataCenterName,
				(select name from ResourcePool c where c.id = b.poolId) poolName,
				(select dictName from OSS_DICT where dictType = 'RESOURCE_POOL_METADATA_VIRTUALTYPE' and dictId = d.virtualizationType) typeName ,
				d.virtualizationType,
				d.cpuFrame,
				d.vcpus,
				d.memory,
				d.localDisk,
				d.localDisk root_gb,
				d.cpucores,
				d.memoryNum,
				d.diskNum,
				x.ipAddress,
		        x.password,
		        x.macAddress,
		        x.port,
		        x.userName,
		        o.osIpAddress,
		        o.osUserName,
		        o.osPassword,
		        o.osPort,
				y.row_,
		        y.column_,
		        y.unum,
		        y.height,
		        y.slot,
		        y.purpose,
		        c.systemSubType,
		        c.systemType,
				c.connectStatus,
		        ifnull(h.hostid,-1) hostid,
		        ifnull(h.hostid,-1) monitorHostId,
				ifnull(c.zabbixAgentStatus,0) zabbixAgentStatus,
				ifnull(c.saltAgentStatus,0) saltAgentStatus,
				ifnull(c.powerStatus,0) powerStatus,
				ifnull(c.mgmtConnectStatus,0) mgmtConneteStatus,
				c.agentId
			from rn_base a 
			join rn_ext_physical b on a.id=b.nodeId
			join rn_ext_systeminfo c on a.id=c.nodeId 
			join rn_ext_compute d on a.id = d.nodeId 
			join rn_ext_mgmtinfo x on a.id = x.nodeId
			join rn_ext_rackinfo y on a.id = y.nodeId 
			join rn_ext_osinfo o on a.id = o.nodeId 
			left join monitornodehost h on a.id = h.nodeId
		]]>
		<where>
			<![CDATA[ 
				and a.rnStatus = 'NORMAL' 
			]]>
			<!-- 
			<if test="loginId != null">
				and (
					a.id in (select resourceId from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='COMPUTE')  or 
					0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='COMPUTE') or 
					(0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='COMPUTE') and false)
				)
			</if>
			 -->
			<if test="poolId != null">
				and b.poolId = #{poolId}
			</if>
			<if test="mgmtIpAddress != null">
				and x.ipAddress = #{mgmtIpAddress}
			</if>
			<if test="osIpAddress != null">
				and o.osIpAddress = #{osIpAddress}
			</if>
			<if test="datacenterId != null">
				and b.dataCenterId = #{datacenterId}
			</if>
			<if test="nodeId != null">
				and  a.id = #{nodeId}
			</if>
			<if test="type != null">
				and a.type = #{type}
			</if>
			<if test="subType != null">
				and a.subType = #{subType}
			</if>
			<if test="virtualizationType != null">
				and d.virtualizationType = #{virtualizationType}
			</if>
			<if test="vcpus != null">
				<![CDATA[and d.vcpus >= #{vcpus}]]>
			</if>
			<if test="memory != null">
				<![CDATA[and d.memory >= #{memory}]]>
			</if>
			<if test="localDisk != null">
				<![CDATA[and d.localDisk >= #{localDisk}]]>
			</if>
			<if test="countSize == 100 and loginId != null">
				and b.poolId in (select a.poolId 
								from resourcepooldepartment a,
									oss_system_user b,
									oss_system_department c 
								where concat(',',#{loginId},',') like concat('%,',loginId,',%')
									and a.groupId = c.refGroupId
									and b.department = c.id)
			</if>
			<if test="countSize == 10 and loginId != null">
				and b.poolId in (select poolId from resourcepoolusers where concat(',',#{loginId},',') like concat('%,',loginId,',%'))
			</if>
			<if test="hostName != null">
				<![CDATA[ and (a.hostName like concat('%',#{hostName},'%') or a.defaultName like concat('%',#{hostName},'%') or a.name like concat('%',#{hostName},'%'))]]>
			</if>
			<if test="businessAddress != null">
				<![CDATA[ and 
					(b.nodeId in 
					(select i.nodeId from rn_ext_interface i  left join rn_ip_map j on i.ipaddress = j.sourceip 
					where concat('%.',i.ipAddress,'.%') like concat('%.',#{businessAddress},'.%') or concat('%.',j.mapIp,'.%') like concat('%.',#{businessAddress},'.%')) 
					or concat('%.',o.osIpAddress,'.%') like concat('%.',#{businessAddress},'.%') 
					or concat('%.',x.ipAddress,'.%') like concat('%.',#{businessAddress},'.%')) 
				]]>
			</if>
			<if test="businessAddressList != null">
				<![CDATA[ and 
					(b.nodeId in 
					(select i.nodeId from rn_ext_interface i  left join rn_ip_map j on i.ipaddress = j.sourceip 
					where concat(',',#{businessAddressList},',') like concat('%,',i.ipAddress,',%') or concat(',',#{businessAddressList},',') like concat('%,',j.mapIp,',%')) 
					or concat(',',#{businessAddressList},',') like concat('%,',o.osIpAddress,',%') 
					or concat(',',#{businessAddressList},',') like concat('%,',x.ipAddress,',%')) 
				]]>
			</if>
			<if test="sysMacAddress != null">
				<![CDATA[ and concat(',',#{sysMacAddress},',') like concat('%,',o.sysMacAddr,',%') ]]>
			</if>
			<if test="macAddress != null">
				<![CDATA[ and concat(',',#{macAddress},',') like concat('%,',x.macAddress,',%') ]]>
			</if>
			<if test="key != null">
				and (a.hostName like concat('%',#{key},'%') 
						or a.defaultName like concat('%',#{key},'%') 
						or a.name like concat('%',#{key},'%') 
						or o.sysMacAddr like concat('%',#{key},'%')  
						or x.macAddress like concat('%',#{key},'%')
						or a.id in (select i.nodeId from rn_ext_interface i where i.macAddress like concat('%',#{key},'%'))
						or a.id in (select i.nodeId from rn_ext_wwn i where i.wwn like concat('%',#{key},'%'))
						or (o.osipAddress like concat('%',#{key},'%') or a.id in (select i.nodeId from rn_ext_interface i where i.ipAddress like concat('%',#{key},'%')))
					)
			</if>
			<if test="list != null">
				<![CDATA[ and ( ]]>
				<foreach collection="list" index="index" item="rule" open=" " separator="" close=" ">
					<if test="index > 0">
						<if test="queryColumn != null and queryColumn == 'ALL'">
							<choose>
								<when test="rule.type == 'notContain' or rule.type == 'notEqual' or rule.type == 'notStartWith' or rule.type == 'notEndWith' or rule.type == 'isEmpty'">
									and 
								</when>
								<otherwise>
									or
								</otherwise>
							</choose>
						</if>
						<if test="queryColumn == null">
							and 
						</if>
					</if>
					<choose>
						<when test="rule.key == 'systemSubTypeName'">
							ifnull((select dictName from OSS_DICT where dictType = 'RESOURCE_SYSTEM_TYPE' and dictId = c.systemSubType),'')
						</when>
						<when test="rule.key == 'poolName'">
							ifnull((select name from ResourcePool c where c.id = b.poolId),'')
						</when>
						<when test="rule.key == 'connectStatus'">
							ifnull(c.connectStatus,0)
						</when>
						<when test="rule.key == 'zabbixAgentStatus'">
							ifnull(c.zabbixAgentStatus,0)
						</when>
						<when test="rule.key == 'saltAgentStatus'">
							ifnull(c.saltAgentStatus,0)
						</when>
						<when test="rule.key == 'powerStatus'">
							ifnull(c.powerStatus,0)
						</when>
						<when test="rule.key == 'mgmtConneteStatus'">
							ifnull(c.mgmtConnectStatus,0)
						</when>
						<otherwise>
							ifnull(${rule.key},'') 
						</otherwise>
					</choose>
		   			
					<if test="rule.type == 'contain'">
						<![CDATA[ like concat('%',#{rule.value},'%') ]]>
					</if>
					<if test="rule.type == 'notContain'">
						<![CDATA[ not like concat('%',#{rule.value},'%') ]]>
					</if>
					<if test="rule.type == 'equal'">
						<![CDATA[ = #{rule.value} ]]>
					</if>
					<if test="rule.type == 'notEqual'">
						<![CDATA[ != #{rule.value} ]]>
					</if>
					<if test="rule.type == 'notStartWith'">
						<![CDATA[ not like concat (#{rule.value},'%') ]]>
					</if>
					<if test="rule.type == 'startWith'">
						<![CDATA[ like concat (#{rule.value},'%') ]]>
					</if>
					<if test="rule.type == 'notEndWith'">
						<![CDATA[ not like concat('%',#{rule.value}) ]]>
					</if>
					<if test="rule.type == 'endWith'">
						<![CDATA[ like concat('%',#{rule.value}) ]]>
					</if>
					<if test="rule.type == 'isEmpty'">
						<![CDATA[ = '' ]]>
					</if>
		  		</foreach>
		  		<![CDATA[ ) ]]>
			</if>
		</where>
		
		<if test="hostids != null">
			<![CDATA[  order by if(h.hostId is null, -1,1) desc, position(concat(',',#{hostids},',') like concat('%,',ifnull(h.hostId,-1),',%')) ]]>
		</if>
		<if test="hostids = null and instanceSort = null">
			<![CDATA[  order by monitorHostId desc ,a.id desc ]]>
		</if>
		<if test="instanceSort != null and instanceSort == 'address'">
			<![CDATA[ order by y.row_ ${instanceSortDirection}, y.column_ ${instanceSortDirection}, y.unum ${instanceSortDirection}, y.height ${instanceSortDirection} ]]>
		</if>
		<if test="instanceSort != null and instanceSort == 'bandInfo'">
			<![CDATA[ order by x.ipAddress ${instanceSortDirection} ]]>
		</if>
		<if test="instanceSort != null and instanceSort == 'size'">
			<![CDATA[ order by d.vcpus ${instanceSortDirection}, d.memory ${instanceSortDirection}, d.localDisk ${instanceSortDirection} ]]>
		</if>
		<if test="instanceSort != null and instanceSort != 'address' and instanceSort != 'size' and instanceSort != 'bandInfo'">
			<![CDATA[ order by ${instanceSort} ${instanceSortDirection} ]]>
		</if>
		<if test="beginIndex != null">
			limit #{beginIndex},#{perPage}
		</if>
	</select>
	
	<insert id="insertRNExtMgmtInfo" parameterType="java.util.HashMap">
		<![CDATA[
			insert into rn_ext_mgmtinfo(nodeId,ipAddress,port,macAddress,userName,password,switchPort,switchId)
			values(#{nodeId},#{ipAddress},#{port},#{macAddress},#{userName},#{password},#{switchPort},#{switchId})
		]]>
	</insert>
	<update id="updateRNExtMgmtInfo" parameterType="java.util.HashMap">
		<![CDATA[
			update rn_ext_mgmtinfo set nodeId = #{nodeId} 
		]]>
		<if test="ipAddress == null or ipAddress == ''">
			, ipAddress = null
		</if>
		<if test="ipAddress != null and ipAddress != ''">
			, ipAddress = #{ipAddress}
		</if>
		<if test="port == null or port == ''">
			, port = null
		</if>
		<if test="port != null and port != ''">
			, port = #{port}
		</if>
		<if test="macAddress == null or macAddress == ''">
			, macAddress = null
		</if>
		<if test="macAddress != null and macAddress != ''">
			, macAddress = #{macAddress}
		</if>
		<if test="userName == null or userName == ''">
			, userName = null
		</if>
		<if test="userName != null and userName != ''">
			, userName = #{userName}
		</if>
		<if test="password == null or password == ''">
			, password = null
		</if>
		<if test="password != null and password != ''">
			, password = #{password}
		</if>
		<if test="switchId != null">
			, switchId = #{switchId}
		</if>
		<if test="switchPort != null">
			, switchPort = #{switchPort}
		</if>
		<![CDATA[	
			where nodeId = #{nodeId}
		]]>
	</update>
	
	<select id="selectRNExtOSinfoIpaddress" parameterType="java.util.HashMap" resultType="java.lang.Integer">
		<![CDATA[
			select count(*) totalCount
			from rn_ext_osinfo a
			where a.osIpAddress = #{osIpAddress}
		]]>
		<if test="nodeId != null">
			and a.nodeId != #{nodeId}
		</if>
	</select>
	<select id="selectRNExtSystemInfo" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select * from rn_ext_systeminfo where nodeId = #{nodeId} 
		]]>
	</select>
	
	<insert id="insertRNExtSystemInfo" parameterType="java.util.HashMap">
		<![CDATA[
			insert into rn_ext_systeminfo (
				nodeId,systemType,systemSubType,agentId,zabbixAgentStatus,saltAgentStatus,connectStatus,powerStatus
			) values (
				#{nodeId},#{systemType},#{systemSubType},#{agentId},#{zabbixAgentStatus},#{saltAgentStatus},#{connectStatus},#{powerStatus} 
			)
		]]>
	</insert>
	<delete id="deleteRNExtSystemInfo" parameterType="java.util.HashMap">
		<![CDATA[
			delete from rn_ext_systeminfo where nodeId = #{nodeId} 
		]]>
	</delete>
	
	<insert id="insertRNExtRackInfo" parameterType="java.util.HashMap">
		<![CDATA[
			insert into rn_ext_rackinfo(nodeId,row_,column_,unum,height,slot,purpose)
			values(#{nodeId},#{row_},#{column_},#{unum},#{height},#{slot},#{purpose})
		]]>
	</insert>
	<update id="updateRNExtRackInfo" parameterType="java.util.HashMap">
		<![CDATA[
			update rn_ext_rackinfo set nodeId = #{nodeId}
		]]>
		<if test="row_ != null">
			, row_ = #{row_}
		</if>
		<if test="column_ != null">
			, column_ = #{column_}
		</if>
		<if test="unum != null">
			, unum = #{unum}
		</if>
		<if test="height != null">
			, height = #{height} 
		</if>
		<if test="slot != null">
			, slot = #{slot} 
		</if>
		<if test="purpose != null">
			, purpose = #{purpose} 
		</if>
		<![CDATA[	
			where nodeId = #{nodeId}
		]]>
	</update>
	
	<insert id="insertRNExtComputeNode" parameterType="java.util.HashMap">
		<![CDATA[
			insert into rn_ext_compute(nodeId,vcpus,memory,localDisk,virtualizationType,cpuFrame)
			values(#{nodeId},#{vcpus},#{memory}*1024,#{localDisk},#{virtualizationType},#{cpuFrame}) 
		]]>
	</insert>
	<update id="updateRNExtComputeNode" parameterType="java.util.HashMap">
		<![CDATA[
			update rn_ext_compute set virtualizationType = #{virtualizationType}, cpuFrame = #{cpuFrame}
		]]>
		<if test="vcpus != null">
			, vcpus = #{vcpus}
		</if>
		<if test="memory != null">
			, memory = #{memory}*1024
		</if>
		<if test="localDisk != null">
			, localDisk = #{localDisk}
		</if>
		<![CDATA[	
			where nodeId = #{nodeId}
		]]>
	</update>
	
	<insert id="insertResourceComputeIronicNode" parameterType="java.util.HashMap">
		<![CDATA[
			insert into ResourceNodeComputeIronicInfo(nodeId,uuid,deploy_kernel,deploy_ramdisk,portUuid)
			values(#{nodeId},#{uuid},#{deploy_kernel},#{deploy_ramdisk},#{portUuid})
		]]>
	</insert>
	
	<update id="updateResourceComputeIronicNode" parameterType="java.util.HashMap">
		<![CDATA[
			update ResourceNodeComputeIronicInfo set nodeId = #{nodeId}
		]]>
		<if test="deploy_kernel != null">
			, deploy_kernel = #{deploy_kernel}
		</if>
		<if test="deploy_ramdisk != null">
			, deploy_ramdisk = #{deploy_ramdisk}
		</if>
		<![CDATA[	
			where nodeId = #{nodeId}
		]]>
	</update>
	
	<insert id="insertRNExtPhysicalNode" parameterType="java.util.HashMap">
		<![CDATA[
			insert into rn_ext_physical(
				nodeId,dataCenterId,poolId,sysSwitchPort,sysSwitchId,sysReticleTag,manufacturerCode,manufacturerName,
				serialNumber,unitType,machineType,microCode,cmdType,march,systemInfo,mgmtConneteStatus,initStatus)
			values(
				#{nodeId},#{dataCenterId},#{poolId},#{sysSwitchPort},#{sysSwitchId},#{sysReticleTag},#{manufacturerCode},#{manufacturerName},
			#{serialNumber},#{unitType},#{machineType},#{microCode},#{cmdType},#{march},#{systemInfo},#{mgmtConneteStatus},#{initStatus}) 
		]]>
	</insert>
	<update id="updateRNExtPhysicalNode" parameterType="java.util.HashMap">
		<![CDATA[
			update rn_ext_physical set nodeId = #{nodeId} 
		]]>
		<if test="dataCenterId != null">
			, dataCenterId = #{dataCenterId}
		</if>
		<if test="poolId != null">
			, poolId = #{poolId}
		</if>
		<if test="sysSwitchPort != null">
			, sysSwitchPort = #{sysSwitchPort}
		</if>
		<if test="sysSwitchId != null">
			, sysSwitchId = #{sysSwitchId}
		</if>
		<if test="sysReticleTag != null">
			, sysReticleTag = #{sysReticleTag}
		</if>
		<if test="manufacturerCode != null">
			, manufacturerCode = #{manufacturerCode}
		</if>
		<if test="manufacturerName != null">
			, manufacturerName = #{manufacturerName}
		</if>
		<if test="serialNumber != null">
			, serialNumber = #{serialNumber}
		</if>
		<if test="unitType != null">
			, unitType = #{unitType}
		</if>
		<if test="machineType != null">
			, machineType = #{machineType}
		</if>
		<if test="microCode != null">
			, microCode = #{microCode}
		</if>
		<if test="cmdType != null">
			, cmdType = #{cmdType}
		</if>
		<if test="march != null">
			, march = #{march}
		</if>
		<if test="systemInfo != null">
			, systemInfo = #{systemInfo}
		</if>
		<if test="mgmtConneteStatus != null">
			, mgmtConneteStatus = #{mgmtConneteStatus}
		</if>
		<if test="initStatus != null">
			, initStatus = #{initStatus}
		</if>
		<![CDATA[	
			where nodeId = #{nodeId}
		]]>
	</update>
	
	<insert id="deleteResourceComputeIronicNode" parameterType="java.util.HashMap">
		<![CDATA[
			delete from ResourceNodeComputeIronicInfo where nodeId = #{nodeId}
		]]>
	</insert>
	
	<insert id="insertRNExtManageNode" parameterType="java.util.HashMap">
		<![CDATA[
			insert into rn_ext_platform(nodeId,deployType)
			values(#{nodeId},#{deployType})
		]]>
	</insert>
	
	<update id="updateRNExtManageNode" parameterType="java.util.HashMap">
		<![CDATA[
			update rn_ext_platform set nodeId = #{nodeId}
		]]>
		<if test="deployType != null">
			, deployType = #{deployType}
		</if>
		<![CDATA[	
			where nodeId = #{nodeId}
		]]>
	</update>
	
	<select id="selectResourceNetworkNodesCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select count(*) totalSize  
			from rn_base a 
			join rn_ext_network b on a.id=b.nodeId 
		]]>
		<where>
			<![CDATA[ 
				and a.type='NETWORK' and a.subType='NETWORK' and a.rnStatus = 'NORMAL'  
				and (
					a.id in (select resourceId from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='NETWORK')  or 
					0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='NETWORK') or 
					(0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='NETWORK') and false)
				)
			]]>
			
		</where>
		<if test="datacenterId != null">
			and b.datacenterId= #{datacenterId}
		</if>
		<if test="nodeId != null">
			and a.id = #{nodeId}
		</if>
		<if test="type != null">
			and a.type = #{type}
		</if>
		<if test="subType != null">
			and a.subType = #{subType}
		</if>
		<if test="countSize == 100 and loginId != null">
			and b.datacenterId in (select dataCenterId from resourcedatacenterusers where concat(',',#{loginId},',') like concat('%,',loginId,',%'))
		</if>
		<if test="countSize == 10 and loginId != null">
			and b.datacenterId in (select dataCenterId from resourcedatacenterusers where concat(',',#{loginId},',') like concat('%,',loginId,',%'))
		</if>
		<!-- 
		<if test="loginId != null">
			and concat(',',#{loginId},',') like concat('%,',a.createUser,',%')
		</if>
		-->
	</select>

	<select id="selectResourceNetworkNodes" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.*,
				b.*,
				(select d.name from ResourceDataCenter d where d.id = b.dataCenterId) dataCenterName,
				e.dictName functionName,
				g.osIpAddress,
				g.osUserName,
				g.osPassword,
				g.osPort,
				c.row_,
				c.column_,
				c.unum,
				c.height,
				c.purpose,
				f.serialNumber,
				f.unitType,
				f.manufacturerCode,
				f.microCode 
			from rn_base a 
			join rn_ext_network b on a.id=b.nodeId 
			join rn_ext_rackinfo c on a.id = c.nodeId 
			join rn_ext_physical f on a.id = f.nodeId 
			join rn_ext_osinfo g on a.id = g.nodeId 
			left join oss_dict e on e.dictId = b.function 
		]]>
		<where>
			<![CDATA[ 
				and a.type='NETWORK' and a.subType='NETWORK' and a.rnStatus = 'NORMAL'  
				and (
					a.id in (select resourceId from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='NETWORK')  or 
					0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='NETWORK') or 
					(0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='NETWORK') and false)
				)
			]]>
			
			<if test="datacenterId != null">
				and b.datacenterId= #{datacenterId}
			</if>
			<if test="nodeId != null">
				and  a.id = #{nodeId}
			</if>
			<if test="type != null">
				and a.type = #{type}
			</if>
			<if test="subType != null">
				and a.subType = #{subType}
			</if>
			<if test="countSize == 100 and loginId != null">
				and b.datacenterId in (select dataCenterId from resourcedatacenterusers where concat(',',#{loginId},',') like concat('%,',loginId,',%'))
			</if>
			<if test="countSize == 10 and loginId != null">
				and b.datacenterId in (select dataCenterId from resourcedatacenterusers where concat(',',#{loginId},',') like concat('%,',loginId,',%'))
			</if>
			<!-- 
			<if test="loginId != null">
				and concat(',',#{loginId},',') like concat('%,',a.createUser,',%')
			</if>
			 -->
		</where>
		<![CDATA[ order by a.createTs desc ]]>
		<if test="beginIndex != null">
			limit #{beginIndex},#{perPage}
		</if>
	</select>
	
	<insert id="insertRNExtNetworkNode" parameterType="java.util.HashMap">
		<![CDATA[
			insert into rn_ext_network (nodeId,dataCenterId,model,function,upPortType,upPort,upPortRate) 
			values (#{nodeId},#{dataCenterId},#{model},#{function},#{upPortType},#{upPort},#{upPortRate}) 
		]]>
	</insert>
	<update id="updateRNExtNetworkNode" parameterType="java.util.HashMap">
		<![CDATA[
			update rn_ext_network set nodeId = #{nodeId}
		]]>
		<if test="dataCenterId != null">
			, dataCenterId = #{dataCenterId}
		</if>
		<if test="model != null">
			, model = #{model}
		</if>
		<if test="function != null">
			, function = #{function}
		</if>
		<if test="upPortType != null">
			, upPortType = #{upPortType}
		</if>
		<if test="upPort != null">
			, upPort = #{upPort}
		</if>
		<if test="upPortRate != null">
			, upPortRate = #{upPortRate}
		</if>
		<![CDATA[	
			where nodeId = #{nodeId}
		]]>
	</update>
	<insert id="insertRNExtNetworkNodePort" parameterType="java.util.HashMap">
		<![CDATA[
			insert into rn_ext_network_port(nodeId,portId,status,portType,endPort,endName) 
			values (#{nodeId},#{portId},#{status},#{portType},#{endPort},#{endName}) 
		]]>
	</insert>
	<update id="updateRNExtNetworkNodePort" parameterType="java.util.HashMap">
		<![CDATA[
			update rn_ext_network_port set nodeId = #{nodeId}
		]]>
		<if test="portId != null">
			, portId = #{portId}
		</if>
		<if test="status != null">
			, status = #{status}
		</if>
		<if test="type != null">
			, portType = #{portType}
		</if>
		<if test="endPort != null">
			, endPort = #{endPort}
		</if>
		<if test="endName != null">
			, endName = #{endName}
		</if>
		<![CDATA[	
			where nodeId = #{nodeId}
		]]>
	</update>
	
	<select id="selectResourceStorageNodesCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select count(*) totalSize
			from rn_base a,
				rn_ext_osinfo c ,
				rn_ext_physical d
			where a.id = c.nodeId
				and a.id = d.nodeId
				and a.type='STORAGE' and a.subType='STORAGE' and a.rnStatus = 'NORMAL'  
				and (
					a.id in (select resourceId from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='STORAGE')  or 
					0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='STORAGE') or 
					(0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='STORAGE') and false)
				)
		]]>
		<if test="datacenterId != null">
			and d.dataCenterId= #{datacenterId}
		</if>
		<if test="countSize == 100 and loginId != null">
			and d.datacenterId in (select dataCenterId from resourcedatacenterusers where concat(',',#{loginId},',') like concat('%,',loginId,',%'))
		</if>
		<if test="countSize == 10 and loginId != null">
			and d.datacenterId in (select dataCenterId from resourcedatacenterusers where concat(',',#{loginId},',') like concat('%,',loginId,',%'))
		</if>
		<if test="function != null">
			and a.id in (select b.nodeId from rn_ext_storage b where concat(',',#{function},',') like concat('%,',b.function,',%'))
		</if>
		<if test="osIpAddress != null">
			and g.osIpAddress = #{osIpAddress}
		</if>
		<if test="nodeId != null">
			and a.id = #{nodeId}
		</if>
	</select>

	<select id="selectResourceStorageNodes" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.*,
				f.dataCenterId,
				(select d.name from ResourceDataCenter d where d.id = f.dataCenterId) dataCenterName,
				(select sum(diskCount * diskSize) from rn_ext_storage e where e.nodeId = a.id) totalSize,
				(select sum(diskUsedSize) from rn_ext_storage e where e.nodeId = a.id) usedSize,
				g.osIpAddress,
				g.osUserName,
				g.osPassword,
				g.osPort,
				c.row_,
				c.column_,
				c.unum,
				c.height,
				c.purpose,
				f.serialNumber,
				f.unitType,
				f.manufacturerCode,
				f.microCode 
			from rn_base a 
			join rn_ext_rackinfo c on a.id = c.nodeId 
			join rn_ext_physical f on a.id = f.nodeId 
			join rn_ext_osinfo g on a.id = g.nodeId 
		]]>
		<where>
			<![CDATA[ 
				and a.type='STORAGE' and a.subType='STORAGE' and a.rnStatus = 'NORMAL'  
				and (
					a.id in (select resourceId from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='STORAGE')  or 
					0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='STORAGE') or 
					(0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='STORAGE') and false)
				)
			]]>
			<if test="datacenterId != null">
				and f.datacenterId= #{datacenterId}
			</if>
			<if test="countSize == 100 and loginId != null">
				and f.datacenterId in (select dataCenterId from resourcedatacenterusers where concat(',',#{loginId},',') like concat('%,',loginId,',%'))
			</if>
			<if test="countSize == 10 and loginId != null">
				and f.datacenterId in (select dataCenterId from resourcedatacenterusers where concat(',',#{loginId},',') like concat('%,',loginId,',%'))
			</if>
			<if test="nodeId != null">
				and  a.id = #{nodeId}
			</if>
			<if test="type != null">
				and a.type = #{type}
			</if>
			<if test="subType != null">
				and a.subType = #{subType}
			</if>
			<if test="function != null">
				and a.id in (select b.nodeId from rn_ext_storage b where concat(',',#{function},',') like concat('%,',b.function,',%'))
			</if>
			<if test="osIpAddress != null">
				and g.osIpAddress = #{osIpAddress}
			</if>
			<if test="serialNumber != null">
				and f.serialNumber like concat('%',#{serialNumber})
			</if>
		</where>
		<![CDATA[ order by a.createTs desc ]]>
		<if test="beginIndex != null">
			limit #{beginIndex},#{perPage}
		</if>
	</select>
	<select id="selectResourceStorageItemNodes" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.*, e.dictName functionName from rn_ext_storage a left join oss_dict e on e.dictId = a.function 
		]]>
		<where>
			<if test="nodeId != null">
				and a.nodeId = #{nodeId}
			</if>
			<if test="function != null">
				and concat(',',#{function},',') like concat('%,',a.function,',%')
			</if>
		</where>
	</select>
	
	<insert id="insertRNExtStorageNode" parameterType="java.util.HashMap">
		<![CDATA[
			insert into rn_ext_vir_storage(nodeId,type,medium,linkType,accessType,size,sizeUnit)
			values(#{nodeId},#{type},#{medium},#{linkType},#{accessType},#{size},#{sizeUnit})
		]]>
	</insert>
	
	<update id="updateRNExtStorageNode" parameterType="java.util.HashMap">
		<![CDATA[
			update rn_ext_vir_storage set nodeId = #{nodeId}
		]]>
		<if test="type != null">
			, type = #{type}
		</if>
		<if test="medium != null">
			, medium = #{medium}
		</if>
		<if test="linkType != null">
			, linkType = #{linkType}
		</if>
		<if test="accessType != null">
			, accessType = #{accessType}
		</if>
		<if test="size != null">
			, size = #{size}
		</if>
		<if test="sizeUnit != null">
			, sizeUnit = #{sizeUnit}
		</if>
		<![CDATA[	
			where nodeId = #{nodeId}
		]]>
	</update>
	
	<select id="selectResourceServices" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			SELECT * FROM ResourceService where type = #{type} and serviceType = #{serviceType} and parentId != -1
    	]]>
	</select>
	
	<select id="selectResourceNodeServices" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
		select d.id nodeId,d.nodeType,d.name nodeName,d.hostName,a.serviceStatus,k.key,k.id serviceId,k.name serviceName,k.description serviceDescription
		from ResourceServiceNodeMap a,
			(select c.id,c.name,c.hostName,t.ipaddress,'PHYSICAL' nodeType,-1 parentNodeId,'' parentNodeName
				from ResourceNode c,
				ResourceNodeMgmtInfo t
				where c.nodeType = #{type}
					and t.nodeId = c.id
		]]>
	    		<if test="physicalNodeIds != null">
					and concat(',',#{physicalNodeIds},',') like concat('%,',c.id,',%')
				</if>
				<if test="type == 'MANAGE'">
					<![CDATA[
					union all
					SELECT a.id,a.name,a.host,a.ipaddress,'VIRTUAL' nodeType,b.id parentNodeId,b.name parentNodeName
					FROM ResourceNodeVirtual a,
						ResourceNode b
					where a.nodeId = b.id
					]]>
				</if>
	    		<if test="type == 'MANAGE' and virtualNodeIds != null">
					and concat(',',#{virtualNodeIds},',') like concat('%,',a.id,',%') 
				</if>
		<![CDATA[
			) d,
			ResourceService k
		where a.nodeId = d.id
			and a.nodeType = d.nodeType
		    and a.serviceId = k.id
    	]]>
	</select>
	
	<delete id="deleteResourceNodeService" parameterType="java.util.HashMap">
		<![CDATA[
			delete ResourceServiceNodeMap where nodeId = #{nodeId} and nodeType = #{nodeType}
		]]>
	</delete>
	
	<select id="selectAllResourceNodes" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
				 select n.id UUID,
					case n.`name` when '' then n.defaultName 
						else n.`name` end `NAME`,
					'使用中' `STATUS`,'已审核' `CHECKSTATUS`,n.create_ts CREATETIME,
					'正常' DELSTATUS,'在用' LOCAL_STATUS,d.`name` IN_ROOM,
					ifnull(r.column_,'') COLUMNID,ifnull(r.unum,'') INSTALLPOSITION,ifnull(n.manufacturerCode,'') MANUFACTURE,ifnull(n.serialNumber,'') SEQCODE,ifnull(n.unitType,'') MODELCODE,
					i.dictName INSTMETHOD,ifnull(m.ipAddress,'未接入网络') MANAGERIP,ifnull(c.cputype,'') CPUINFO,
					ifnull(case c.memory when '' then '' else round(c.memory/1024/1024,2) end,'') MEMORYSIZE,
					ifnull(case c.cpuspeed when '' then '' else round(c.cpuspeed/1024/1024/1024,2) end,'') CPUSIZE,
					ifnull(c.vcpus,'') CPUNUM ,
					case c.virtualizationType 
						when 'TPMOSD' then '无分区' 
						when 'VMWARE' then '软分区' 
  						when 'KVM' then '无分区'
						when 'Power' then '硬分区' 
					end FDISKTYPE,
					ifnull(concat(d.`name`,'-',r.column_,'(',r.unum,')'),'') PHYSICSPLACE,
					ifnull((select group_concat(ipAddress order by id separator ';') ipAddress from rn_ext_interface f where f.nodeId=n.id),'未接入网络') IPINFO,
					ifnull(n.systemSubType,'') OSINFO,ifnull(c.cpuFrame,'') VERSION_XIXTYFOUR,p.name VMCRP
					from resourcenode n
					join resourcenodemgmtinfo m on n.id=m.nodeId
					join resourcenoderackinfo r on n.id=r.nodeId 
					join ResourceNodeSystemInfo s on n.id=s.nodeId and s.type = 'PHYSICAL' 
					join resourcedatacenter d on n.dataCenterId=d.id 
					join oss_dict i on i.dictId=n.machineType and i.dictType='IPPOOL_MACHINE_TYPE' 
					join rn_ext_compute c on n.id= c.nodeId 
					join resourcepool p on p.id=n.poolId 
			]]>
			<if test="op != null">
				<![CDATA[ right join resourcenodechange h on h.id=n.id ]]>
			</if>
			
			<![CDATA[
				where n.poolId in (select id from resourcepool where (poolType = 'COMPUTE' or poolType='MANAGE') and type = 'TPMOSD') 
			]]>
			<if test="op != null and op=='UPDATE'">
				and h.op='UPDATE' 
			</if>
	</select>
	<select id="selectAllHypervisorResourceNodes" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
				 select n.id UUID,
					case n.`name` when '' then n.defaultName 
						else n.`name` end `NAME`,
					'使用中' `STATUS`,'已审核' `CHECKSTATUS`,n.create_ts CREATETIME,
					'正常' DELSTATUS,'在用' LOCAL_STATUS,d.`name` IN_ROOM,
					ifnull(r.column_,'') COLUMNID,ifnull(r.unum,'') INSTALLPOSITION,ifnull(n.manufacturerCode,'') MANUFACTURE,ifnull(n.serialNumber,'') SEQCODE,ifnull(n.unitType,'') MODELCODE,
					i.dictName INSTMETHOD,ifnull(m.ipAddress,'未接入网络') MANAGERIP,ifnull(c.cputype,'') CPUINFO,
					ifnull(case c.memory when '' then '' else round(c.memory/1024/1024,2) end,'') MEMORYSIZE,
					ifnull(case c.cpuspeed when '' then '' else round(c.cpuspeed/1024/1024/1024,2) end,'') CPUSIZE,
					ifnull(c.vcpus,'') CPUNUM ,
					case c.virtualizationType 
						when 'TPMOSD' then '无分区' 
						when 'VMWARE' then '软分区' 
  						when 'KVM' then '无分区'
						when 'Power' then '硬分区' 
					end FDISKTYPE,
					ifnull(concat(d.`name`,'-',r.column_,'(',r.unum,')'),'') PHYSICSPLACE,
					ifnull((select group_concat(ipAddress order by id separator ';') ipAddress from rn_ext_interface f where f.nodeId=n.id),'未接入网络') IPINFO,
					ifnull(n.systemSubType,'') OSINFO,ifnull(c.cpuFrame,'') VERSION_XIXTYFOUR,p.name VMCRP
					from resourcenode n
					join resourcenodemgmtinfo m on n.id=m.nodeId
					join resourcenoderackinfo r on n.id=r.nodeId 
					join ResourceNodeSystemInfo s on n.id=s.nodeId and s.type = 'PHYSICAL' 
					join resourcedatacenter d on n.dataCenterId=d.id 
					join oss_dict i on i.dictId=n.machineType and i.dictType='IPPOOL_MACHINE_TYPE' 
					join rn_ext_compute c on n.id= c.nodeId 
					join resourcepool p on p.id=n.poolId 
			]]>
			<if test="op != null">
				<![CDATA[ right join resourcenodechange h on h.id=n.id and h.type in ('VMWARE','KVM') ]]>
			</if>
			
			<![CDATA[
				where n.poolId in (select id from resourcepool where poolType = 'COMPUTE' and type in ('VMWARE','KVM')) 
			]]>
			<if test="op != null and op=='UPDATE'">
				and h.op='UPDATE' 
			</if>
	</select>
	<select id="selectAllOpenstackInstances" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select 
				n.uuid UUID,n.`name` `NAME`,
				case n.vmState when 'ACTIVE' then '运行中' when 'SHUTOFF' then '关机' else '其他' end `STATUS`,
				'已审核' CHECKSTATUS,n.updated CREATETIME,'VMware' MANUFACTURE,
				ifnull(case n.memory when '' then '' else round(n.memory/1024,0) end,'') VMMEMORYSIZE,
				n.vcpus VMCPUSIZE,n.vcpus VMCPUNUM,
				'通力多维' PROVIDER,'7*24' SERVICELEVEL,'' SEQCODE,
				ifnull((select group_concat(ipAddress order by instanceId separator ';') ipAddress from openstack_instance_interface i where i.instanceId=n.ID),'') IPINFO,
				ifnull(s.osIpAddress,'未接入网络') MANAGERIP,
				ifnull(concat(m.osType,' ',m.os,' ',m.osVersion),'') VMOSINFO,
				ifnull((select d.serialNumber from resourcenode d where d.id=n.parentNodeId),'') VMCPS ,
				(select p.`name` from resourcepool p where p.regionName=n.region) VMCRP 
				
				from rn_ext_vir_instance n 
				join rn_ext_systeminfo s on s.nodeId=n.nodeId 
				join rn_ext_vir_image m on m.uuid=n.imageRef 
		]]>
		<if test="op != null and op =='UPDATE'">
			<![CDATA[ right join openstack_change c on c.uuid=n.uuid  ]]>
		</if>
		
		<![CDATA[ where n.region in (select regionName from resourcepool where (poolType = 'COMPUTE' or poolType='MANAGE') and type in ('KVM','VMWARE') and regionName is not null) ]]>
		
		<if test="op != null and op=='UPDATE'">
			and c.op='UPDATE'  
		</if>
	</select>
	
	<select id="selectDeletedOpenstackInstances" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select uuid UUID from openstack_change where op='DELETE' 
		]]>
	</select>
	<select id="selectDeletedHypervisorResourceNodes" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select id UUID from resourcenodechange where type in ('KVM','VMWARE') and op='DELETE' 
		]]>
	</select>
	<select id="selectDeletedResourceNodes" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select id UUID from resourcenodechange where op='DELETE' 
		]]>
	</select>
	<delete id="deleteOpenstackChange" parameterType="java.util.HashMap">
		<![CDATA[
			delete from openstack_change where op = #{op} 
		]]>
	</delete>
	<delete id="deleteHypervisorResourceNodeChange" parameterType="java.util.HashMap">
		<![CDATA[
			delete from resourcenodechange where op = #{op} and type in ('KVM','VMWARE') 
		]]>
	</delete>
	<delete id="deleteResourceNodeChange" parameterType="java.util.HashMap">
		<![CDATA[
			delete from resourcenodechange where op = #{op} and type is null or type not in ('KVM','VMWARE') 
		]]>
	</delete>
	
	<select id="selectResourceMonitorNodesCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
		select count(*) totalSize from (
	            select a.id,'' uuid,if(a.name != '',a.name,a.defaultName) name,a.hostName,a.defaultName,a.type nodeType,a.subType nodeSubType,a.hostName host,
					   (select max(interface) from rn_ext_interface m where m.nodeId = a.id and m.isShow = 1) defaultInterface,
					   t.agentId,t.zabbixAgentStatus,t.saltAgentStatus,t.connectStatus,ifnull(m.hostid,-1) hostid
				from rn_base a 
					join rn_ext_physical b on a.id = b.nodeId 
					left join rn_ext_systeminfo t on a.id = t.nodeId 
					left join monitornodehost m on a.id = m.nodeId 
				where a.rnstatus = 'NORMAL' and a.type=#{nodeType} and b.poolId in (select id from resourcepool where pooltype = #{nodeType})
		]]> 
			<if test="loginId != null">
				and (
					a.id in (select resourceId from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIRTUAL')  or 
					0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIRTUAL') or 
					(0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIRTUAL') and false)
				)
			</if>
			<if test="dataCenterId != null">
				and	b.dataCenterId = #{dataCenterId}
			</if>
			<if test="poolId != null">
				and	b.poolId = #{poolId}
			</if>
			<if test="countSize == 100 and loginId != null">
				and b.poolId in (select a.poolId 
								from resourcepooldepartment a,
									oss_system_user b,
									oss_system_department c 
								where concat(',',#{loginId},',') like concat('%,',loginId,',%')
									and a.groupId = c.refGroupId
									and b.department = c.id)
			</if>
			<if test="countSize == 10 and loginId != null">
				and b.poolId in (select poolId from resourcepoolusers where concat(',',#{loginId},',') like concat('%,',loginId,',%'))
			</if>
		<![CDATA[  
		  union all 
			select a.id,
				   b.uuid,
		           a.name,
		           a.hostName,
				   a.defaultName,
		           a.type,
		           a.subType,
		           b.host,
		           '' defaultInterface,
		           t.agentId,t.zabbixAgentStatus,t.saltAgentStatus,t.connectStatus,ifnull(m.hostid,-1) hostid
			from rn_base a join rn_ext_vir_instance b on a.id = b.nodeId 
			left join rn_ext_systeminfo t on a.id = t.nodeId 
					left join monitornodehost m on a.id = m.nodeId
    		where a.rnstatus = 'NORMAL' and b.region in (select regionName from resourcepool where pooltype = #{nodeType} and type in ('VIRTUAL') and regionName is not null)	
		]]>
			<if test="loginId != null">
					and (
						a.id in (select resourceId from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_INSTANCE')  or 
						0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_INSTANCE') or 
						(0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_INSTANCE') and false)
					)
			</if>
			<if test="dataCenterId != null">
			  	and exists (select * from rn_ext_vir_instance e join rn_base g on e.`host` = g.hostName join rn_ext_physical f on f.nodeId = g.id where g.rnStatus = 'NORMAL' and f.dataCenterId = #{dataCenterId})
			</if>
		    <if test="poolId != null"> 
			  	and	b.region = (select regionName from resourcepool where id = #{poolId})
			</if>
			<if test="countSize == 100 and loginId != null">
				and b.region in (select t.regionName 
								from resourcepool t,
									resourcepooldepartment a,
									oss_system_user b,
									oss_system_department c 
								where concat(',',#{loginId},',') like concat('%,',loginId,',%')
									and a.groupId = c.refGroupId
									and b.department = c.id
									and a.poolId = t.id
									and t.regionName is not null)
			</if>
			<if test="countSize == 10 and loginId != null">
				and b.region in (select t.regionName from resourcepool t,resourcepoolusers k where t.id = k.poolId and t.regionName is not null and concat(',',#{loginId},',') like concat('%,',loginId,',%'))
			</if>
			<if test="countSize == 10 and loginId != null">
				and b.projectId in (select d.projectId from v_department_projectId d where concat(',',#{loginId},',') like concat('%,',d.loginId,',%'))
			</if>
		<![CDATA[
		order by zabbixAgentStatus desc,id desc,nodeType ) t
		]]>
		<where>
				<if test="list != null">
					<foreach collection="list" index="index" item="rule" open=" " separator="" close=" ">
						<if test="index > 0">
							<if test="queryColumn != null and queryColumn == 'ALL'">
								<choose>
									<when test="rule.type == 'notContain' or rule.type == 'notEqual' or rule.type == 'notStartWith' or rule.type == 'notEndWith' or rule.type == 'isEmpty'">
										and 
									</when>
									<otherwise>
										or
									</otherwise>
								</choose>
							</if>
							<if test="queryColumn == null">
								and 
							</if>
						</if>
						<choose>
							<when test="rule.key == 'zabbixAgentStatus'">
								ifnull(zabbixAgentStatus,0)
							</when>
							<otherwise>
								ifnull(${rule.key},'') 
							</otherwise>
						</choose>
			   			
						<if test="rule.type == 'contain'">
							<![CDATA[ like concat('%',#{rule.value},'%') ]]>
						</if>
						<if test="rule.type == 'notContain'">
							<![CDATA[ not like concat('%',#{rule.value},'%') ]]>
						</if>
						<if test="rule.type == 'equal'">
							<![CDATA[ = #{rule.value} ]]>
						</if>
						<if test="rule.type == 'notEqual'">
							<![CDATA[ != #{rule.value} ]]>
						</if>
						<if test="rule.type == 'notStartWith'">
							<![CDATA[ not like concat (#{rule.value},'%') ]]>
						</if>
						<if test="rule.type == 'startWith'">
							<![CDATA[ like concat (#{rule.value},'%') ]]>
						</if>
						<if test="rule.type == 'notEndWith'">
							<![CDATA[ not like concat('%',#{rule.value}) ]]>
						</if>
						<if test="rule.type == 'endWith'">
							<![CDATA[ like concat('%',#{rule.value}) ]]>
						</if>
						<if test="rule.type == 'isEmpty'">
							<![CDATA[ = '' ]]>
						</if>
			  		</foreach>
				</if>
			</where>
	</select>
	<select id="selectResourceMonitorNodes" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[ 
			select * from (
	            select a.id,'' uuid,if(a.name != '',a.name,a.defaultName) name,a.hostName,a.defaultName,a.type nodeType,a.subType nodeSubType,a.hostName host,
					   (select max(interface) from rn_ext_interface m where m.nodeId = a.id and m.isShow = 1) defaultInterface,
					   t.agentId,t.zabbixAgentStatus,t.saltAgentStatus,t.connectStatus,ifnull(m.hostid,-1) hostid
				from rn_base a 
					join rn_ext_physical b on a.id = b.nodeId 
					left join rn_ext_systeminfo t on a.id = t.nodeId 
					left join monitornodehost m on a.id = m.nodeId 
		]]> 	
			<if test="hostids != null">
				and concat(',',#{hostids},',') like concat('%,',m.hostid,',%')
			</if>		
		<![CDATA[ 			
				where a.rnstatus = 'NORMAL' and a.type=#{nodeType} and b.poolId in (select id from resourcepool where pooltype = #{nodeType})
		]]> 
			<if test="loginId != null">
				and (
					a.id in (select resourceId from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIRTUAL')  or 
					0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIRTUAL') or 
					(0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIRTUAL') and false)
				)
			</if>
			<if test="dataCenterId != null">
				and	b.dataCenterId = #{dataCenterId}
			</if>
			<if test="poolId != null">
				and	b.poolId = #{poolId}
			</if>
			<if test="countSize == 100 and loginId != null">
				and b.poolId in (select a.poolId 
								from resourcepooldepartment a,
									oss_system_user b,
									oss_system_department c 
								where concat(',',#{loginId},',') like concat('%,',loginId,',%')
									and a.groupId = c.refGroupId
									and b.department = c.id)
			</if>
			<if test="countSize == 10 and loginId != null">
				and b.poolId in (select poolId from resourcepoolusers where concat(',',#{loginId},',') like concat('%,',loginId,',%'))
			</if>
		<![CDATA[  
		  union all 
			select a.id,
				   b.uuid,
		           a.name,
		           a.hostName,
				   a.defaultName,
		           a.type,
		           a.subType,
		           b.host,
		           '' defaultInterface,
		           t.agentId,t.zabbixAgentStatus,t.saltAgentStatus,t.connectStatus,ifnull(m.hostid,-1) hostid
			from rn_base a join rn_ext_vir_instance b on a.id = b.nodeId 
			left join rn_ext_systeminfo t on a.id = t.nodeId 
					left join monitornodehost m on a.id = m.nodeId
		]]> 	
			<if test="hostids != null">
				and concat(',',#{hostids},',') like concat('%,',m.hostid,',%')
			</if>		
		<![CDATA[ 		
    		where a.rnstatus = 'NORMAL' and b.region in (select regionName from resourcepool where pooltype = #{nodeType} and type in ('VIRTUAL') and regionName is not null)	
		]]>
			<if test="loginId != null">
					and (
						a.id in (select resourceId from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_INSTANCE')  or 
						0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_INSTANCE') or 
						(0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_INSTANCE') and false)
					)
			</if>
			<if test="dataCenterId != null">
			  	and exists (select * from rn_ext_vir_instance e join rn_base g on e.`host` = g.hostName join rn_ext_physical f on f.nodeId = g.id where g.rnStatus = 'NORMAL' and f.dataCenterId = #{dataCenterId})
			</if>
		    <if test="poolId != null"> 
			  	and	b.region = (select regionName from resourcepool where id = #{poolId})
			</if>
			<if test="countSize == 100 and loginId != null">
				and b.region in (select t.regionName 
								from resourcepool t,
									resourcepooldepartment a,
									oss_system_user b,
									oss_system_department c 
								where concat(',',#{loginId},',') like concat('%,',loginId,',%')
									and a.groupId = c.refGroupId
									and b.department = c.id
									and a.poolId = t.id
									and t.regionName is not null)
			</if>
			<if test="countSize == 10 and loginId != null">
				and b.region in (select t.regionName from resourcepool t,resourcepoolusers k where t.id = k.poolId and t.regionName is not null and concat(',',#{loginId},',') like concat('%,',loginId,',%'))
			</if>
			<if test="countSize == 10 and loginId != null">
				and b.projectId in (select d.projectId from v_department_projectId d where concat(',',#{loginId},',') like concat('%,',d.loginId,',%'))
			</if>
			
			<if test="hostids != null">
				<![CDATA[  order by if(hostid = -1, -1,1) desc, position(concat(',',#{hostids},',') like concat('%,',ifnull(hostid,-1),',%')) ]]>
			</if>
			<if test="hostids == null">
				<![CDATA[  order by zabbixAgentStatus desc,nodeType,id desc ]]>
			</if>
			<![CDATA[ ) t ]]>
			<where>
				<if test="list != null">
					<foreach collection="list" index="index" item="rule" open=" " separator="" close=" ">
						<if test="index > 0">
							<if test="queryColumn != null and queryColumn == 'ALL'">
								<choose>
									<when test="rule.type == 'notContain' or rule.type == 'notEqual' or rule.type == 'notStartWith' or rule.type == 'notEndWith' or rule.type == 'isEmpty'">
										and 
									</when>
									<otherwise>
										or
									</otherwise>
								</choose>
							</if>
							<if test="queryColumn == null">
								and 
							</if>
						</if>
						<choose>
							<when test="rule.key == 'zabbixAgentStatus'">
								ifnull(zabbixAgentStatus,0)
							</when>
							<otherwise>
								ifnull(${rule.key},'') 
							</otherwise>
						</choose>
			   			
						<if test="rule.type == 'contain'">
							<![CDATA[ like concat('%',#{rule.value},'%') ]]>
						</if>
						<if test="rule.type == 'notContain'">
							<![CDATA[ not like concat('%',#{rule.value},'%') ]]>
						</if>
						<if test="rule.type == 'equal'">
							<![CDATA[ = #{rule.value} ]]>
						</if>
						<if test="rule.type == 'notEqual'">
							<![CDATA[ != #{rule.value} ]]>
						</if>
						<if test="rule.type == 'notStartWith'">
							<![CDATA[ not like concat (#{rule.value},'%') ]]>
						</if>
						<if test="rule.type == 'startWith'">
							<![CDATA[ like concat (#{rule.value},'%') ]]>
						</if>
						<if test="rule.type == 'notEndWith'">
							<![CDATA[ not like concat('%',#{rule.value}) ]]>
						</if>
						<if test="rule.type == 'endWith'">
							<![CDATA[ like concat('%',#{rule.value}) ]]>
						</if>
						<if test="rule.type == 'isEmpty'">
							<![CDATA[ = '' ]]>
						</if>
			  		</foreach>
				</if>
			</where>
			<if test="instanceSort != null">
				<![CDATA[ order by ${instanceSort} ${instanceSortDirection} ]]>
			</if>
			<if test="beginIndex != null">
				limit #{beginIndex},#{perPage}
			</if>
	</select>
	
	<select id="selectResourceMonitorVirtualsCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select count(*) totalSize
			from rn_ext_vir_instance a 
				left join MonitorVirtualHost t on t.uuid = a.uuid	
                join rn_ext_vir_image k on k.uuid = a.imageRef	
                join v_department_projectId d on d.projectId = a.projectId and concat(',',#{loginId},',') like concat('%,',d.loginId,',%')
		]]>
		<where>
			<if test="countSize == 100 and loginId != null">
				and a.region in (select t.regionName 
								from resourcepool t,
									resourcepooldepartment a,
									oss_system_user b,
									oss_system_department c 
								where concat(',',#{loginId},',') like concat('%,',loginId,',%')
									and a.groupId = c.refGroupId
									and b.department = c.id
									and a.poolId = t.id
									and t.regionName is not null)
			</if>
			<if test="countSize == 10 and loginId != null">
				and a.region in (select t.regionName from resourcepool t,resourcepoolusers k where t.id = k.poolId and t.regionName is not null and concat(',',#{loginId},',') like concat('%,',loginId,',%'))
			</if>
		</where>
	</select>
	<select id="selectResourceMonitorVirtuals" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.id,
			    a.uuid,
			    a.name,
			    a.vmState,
			    k.virtualizationType,
    			IFNULL(t.hostid, - 1) hostid
			from rn_ext_vir_instance a 
				left join MonitorVirtualHost t on t.uuid = a.uuid	
                join rn_ext_vir_image k on k.uuid = a.imageRef	
				join v_department_projectId d on d.projectId = a.projectId and concat(',',#{loginId},',') like concat('%,',d.loginId,',%')
		]]>
		<where>
			<if test="uuid != null">
				and a.uuid = #{uuid}
			</if>
			<if test="countSize == 100 and loginId != null">
				and a.region in (select t.regionName 
								from resourcepool t,
									resourcepooldepartment a,
									oss_system_user b,
									oss_system_department c 
								where concat(',',#{loginId},',') like concat('%,',loginId,',%')
									and a.groupId = c.refGroupId
									and b.department = c.id
									and a.poolId = t.id
									and t.regionName is not null)
			</if>
			<if test="countSize == 10 and loginId != null">
				and a.region in (select t.regionName from resourcepool t,resourcepoolusers k where t.id = k.poolId and t.regionName is not null and concat(',',#{loginId},',') like concat('%,',loginId,',%'))
			</if>
		</where>
		<if test="beginIndex != null">
			limit #{beginIndex},#{perPage}
		</if>
	</select>
	
	<delete id="deleteMonitorVirtualGraph" parameterType="java.util.HashMap">
		<![CDATA[
		delete from MonitorVirtualGraphMap where uuid = #{uuid}
		]]>
	</delete>
	<insert id="insertMonitorVirtualGraph" parameterType="java.util.HashMap">
		<![CDATA[
		insert into MonitorVirtualGraphMap(uuid,graphId)
		values(#{uuid},#{graphId})
		]]>
	</insert>
	
	<delete id="deleteMonitorVirtualGraphItems" parameterType="java.util.HashMap">
		<![CDATA[
		delete from MonitorVirtualGraphItemMap where uuid = #{uuid}
		]]>
	</delete>
	<insert id="insertMonitorVirtualGraphItems" parameterType="java.util.HashMap">
		<![CDATA[
		insert into MonitorVirtualGraphItemMap(uuid,graphId,itemId,itemName,historyType)
		values(#{uuid},#{graphId},#{itemId},#{itemName},#{historyType})
		]]>
	</insert>
	<select id="selectMonitorLparGraphs" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select b.*
			from monitorlpargraphmap a, MonitorGraphInfo b
			where a.instanceId = #{instanceId} 
				and a.graphId = b.id
		]]>
	</select>
	<delete id="deleteMonitorLparGraph" parameterType="java.util.HashMap">
		<![CDATA[
		delete from monitorlpargraphmap where instanceId = #{instanceId} 
		]]>
	</delete>
	<insert id="insertMonitorLparGraph" parameterType="java.util.HashMap">
		<![CDATA[
		insert into monitorlpargraphmap(instanceId,graphId)
		values(#{instanceId},#{graphId})
		]]>
	</insert>
	
	<select id="resourcePoolComputeCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select 'used' name,sum(a.vcpus) vcpus,sum(a.memory) memory,sum(a.root_gb) + sum(a.ephemeral_gb) disk
			from rn_ext_vir_instance a,
				resourcepool t,
				rn_base b,
				rn_ext_physical c 
			where t.id = #{poolId}
				and b.type='PHYSICAL' and b.subType = 'COMPUTE'
				and a.parentNodeId = c.nodeId
			    and c.poolId = t.id
			    and a.vmState != 'error'
		]]>
		<if test="loginId != null">
			and concat(',',#{loginId},',') like concat('%,',b.createUser,',%') 
		</if>
		<![CDATA[
			union
			select 'total' name,sum(b.vcpus) vcpus,sum(b.memory) memory,sum(b.localDisk) disk
			from rn_base a,rn_ext_compute b,rn_ext_physical c 
			where c.poolId = #{poolId}
				and a.type='PHYSICAL' and a.subType = 'COMPUTE'
				and a.id = b.nodeId
		]]>
		<if test="loginId != null">
			and concat(',',#{loginId},',') like concat('%,',a.createUser,',%')
		</if>
	</select>
	<select id="resourcePoolStorageCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select 'used' name,sum(a.size) disk
			from OPENSTACK_Volumes a,
				ResourcePool t,
				ResourceNode b
			where t.id = #{poolId}
				and a.hostName = b.hostName
				and b.nodeType = 'STORAGE'
			    and b.poolid = t.id
		]]>
		<if test="loginId != null">
			and and concat(',',#{loginId},',') like concat('%,',b.create_user,',%') 
		</if>
		<![CDATA[
			union
			select 'total' name,sum(b.size) disk
			from ResourceNode a,(select nodeId,if(sizeUnit = 'TB',size*1024,size) size   from rn_ext_vir_storage) b
			where a.poolid = #{poolId}
				and a.nodeType = 'STORAGE'
				and a.id = b.nodeId
		]]>
		<if test="loginId != null">
			and concat(',',#{loginId},',') like concat('%,',a.create_user,',%') 
		</if>
	</select>
	<select id="dataCenterComputeCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select 'used' name,sum(a.vcpus) vcpus,sum(a.memory) memory,sum(a.root_gb) + sum(a.ephemeral_gb) disk
			from rn_ext_vir_instance a,
				ResourceNode b
			where a.parentNodeId = b.id
				and b.nodeType = 'COMPUTE'
			    and a.vmState != 'error'
                and b.poolid in (select k.id from ResourcePool k where k.dataCenterId = #{dataCenterId})
          ]]>
		<if test="loginId != null">
			and concat(',',#{loginId},',') like concat('%,',b.create_user,',%') 
		</if>
		<![CDATA[
			union
			select 'total' name,sum(a.vcpus) vcpus,sum(a.memory) memory,sum(a.localDisk) disk
			from ResourceNode b,rn_ext_compute a
			where a.nodeId = b.id
				and b.nodeType = 'COMPUTE'
				and b.poolid in (select k.id from ResourcePool k where k.dataCenterId = #{dataCenterId})
		]]>
		<if test="loginId != null">
			and concat(',',#{loginId},',') like concat('%,',b.create_user,',%') 
		</if>
	</select>
	<select id="dataCenterStorageCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select 'used' name,sum(a.size) disk
			from OPENSTACK_Volumes a,
				ResourceNode b
			where a.hostName = b.hostName
				and b.nodeType = 'STORAGE'
                and b.poolid in (select k.id from ResourcePool k where k.dataCenterId = #{dataCenterId})
          ]]>
		<if test="loginId != null">
			and concat(',',#{loginId},',') like concat('%,',b.create_user,',%') 
		</if>
		<![CDATA[
			union
			select 'total' name,sum(a.size) disk
			from ResourceNode b,(select nodeId,if(sizeUnit = 'TB',size*1024,size) size   from rn_ext_vir_storage) a
			where a.nodeId = b.id
				and b.nodeType = 'STORAGE'
				and b.poolid in (select k.id from ResourcePool k where k.dataCenterId = #{dataCenterId})
		]]>
		<if test="loginId != null">
			and and concat(',',#{loginId},',') like concat('%,',b.create_user,',%') 
		</if>
	</select>
	
	<select id="selectResourceMonitorTemplatesCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			SELECT count(*) totalSize
			FROM ZABBIX_Template a
		]]>
		<where>
			<if test="templateId != null">
				a.templateId = #{templateId}
			</if>
		</where>
	</select>
	<select id="selectResourceMonitorTemplates" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			SELECT a.*,
				ifnull(b.itemCount,0) itemCount,
				ifnull(c.triggerCount,0) triggerCount
			FROM ZABBIX_Template a
			left join (select templateId,count(*) itemCount from ZABBIX_Template_Item where flag in (0,2) group by templateId) b on a.templateId = b.templateId
			left join (select templateId,count(*) triggerCount from ZABBIX_Template_Trigger group by templateId) c on a.templateId = c.templateId
		]]>
		<where>
			<if test="templateId != null">
				a.templateId = #{templateId}
			</if>
		</where>
		order by a.displayName desc
		<if test="beginIndex != null">
			limit #{beginIndex},#{perPage}
		</if>
	</select>
	<update id="updateResourceMonitorTemplate" parameterType="java.util.HashMap">
		<![CDATA[
		update ZABBIX_Template set displayName = #{displayName} where templateId = #{templateId}
		]]>
	</update>
	
	<select id="selectResourceMonitorTemplateTriggersCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			SELECT count(*) totalSize
			FROM ZABBIX_Template_Trigger a 
			left join ZABBIX_Template_Trigger_Item_Relation b on a.triggerId = b.triggerId 
			where a.flags in (0,2)
		]]>
		<if test="templateId != null">
			and a.templateId = #{templateId}
		</if>
		<if test="triggerId != null">
			and a.triggerId = #{triggerId}
		</if>
		<if test="itemId != null">
			and a.triggerId in (select k.triggerId from ZABBIX_Template_Trigger_Item_Relation k where k.itemId = #{itemId})
		</if>
	</select>
	<select id="selectResourceMonitorTemplateTriggers" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			SELECT a.*,b.itemId 
			FROM ZABBIX_Template_Trigger a 
			left join ZABBIX_Template_Trigger_Item_Relation b on a.triggerId = b.triggerId 
			where a.flags in (0,2)
		]]>
		<if test="templateId != null">
			and a.templateId = #{templateId}
		</if>
		<if test="triggerId != null">
			and a.triggerId = #{triggerId}
		</if>
		<if test="itemId != null">
			and a.triggerId in (select k.triggerId from ZABBIX_Template_Trigger_Item_Relation k where k.itemId = #{itemId})
		</if>
		<if test="beginIndex != null">
			limit #{beginIndex},#{perPage}
		</if>
	</select>
	
	<select id="selectResourceMonitorTemplateItemsCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			SELECT count(*) totalSize
			FROM ZABBIX_Template_Item a
			where a.flag in (0,2)
		]]>
		<if test="templateId != null">
			and a.templateId = #{templateId}
		</if>
		<if test="itemId != null">
			and a.itemId = #{itemId}
		</if>
		<if test="keyWord != null">
			<![CDATA[ and a.name like concat('%',#{keyWord},'%') ]]>
		</if>
	</select>
	<select id="selectResourceMonitorTemplateItems" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			SELECT a.*,
				(select count(*) from ZABBIX_Template_Trigger_Item_Relation k where k.itemId = a.itemId) triggerCount,
				b.name templateName
			FROM ZABBIX_Template_Item a,ZABBIX_Template b
			where a.flag in (0,2)
				and a.templateId = b.templateId
		]]>
		<if test="templateId != null">
			and a.templateId = #{templateId}
		</if>
		<if test="itemId != null">
			and a.itemId = #{itemId}
		</if>
		<if test="keyWord != null">
			<![CDATA[ and a.name like concat('%',#{keyWord},'%') ]]>
		</if>
		<if test="beginIndex != null">
			limit #{beginIndex},#{perPage}
		</if>
	</select>
	<update id="updateResourceMonitorTemplateItem" parameterType="java.util.HashMap">
		<![CDATA[
		update ZABBIX_Template_Item 
		set itemId = #{itemId}
		]]>
		<if test="displayName != null">
			, displayName = #{displayName}
		</if>
		<if test="status != null">
			, status = #{status}
		</if>
		<![CDATA[ 
			where itemId = #{itemId}
		]]>
	</update>
	
	<select id="selectResourceMonitorHostTriggersCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			SELECT count(*) totalSize
			FROM ZABBIX_Host_Trigger a
			where a.flags in (0,4)
		]]>
		<if test="hostId != null">
			and a.hostId = #{hostId}
		</if>
	</select>
	<select id="selectResourceMonitorHostTriggers" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
		             
			SELECT a.*,
				(select displayName from ZABBIX_Template_Trigger where triggerId = a.parentTriggerId) displayName,
			    ifnull(b.eventCount,0) eventCount
			FROM ZABBIX_Host_Trigger a
				left join (select hostId,triggerId,count(*) eventCount from ZABBIX_Event  
				where status='PROBLEM' and eventId not in(select c.eventId from ZABBIX_Event_Ack c) 
			]]>
			<if test="hostId != null">
				and hostId = #{hostId}
			</if>
			<![CDATA[
				group by hostId,triggerId) b on a.triggerId = b.triggerId and a.hostId = b.hostId
			where a.flags in (0,4)
		]]>
		<if test="hostId != null">
			and a.hostId = #{hostId}
		</if>
		<if test="triggerId != null">
			and a.triggerId = #{triggerId}
		</if>
		<if test="beginIndex != null">
			limit #{beginIndex},#{perPage}
		</if>
	</select>
	<select id="selectResourceMonitorHostEventsCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			SELECT count(*) totalSize
			FROM ZABBIX_Event a
				left join ZABBIX_Event_Ack b on a.eventId = b.eventId
				]]>
		<where>
			<![CDATA[ exists (select hostid from v_monitor_host c where c.hostid = a.hostid ]]>
			<!-- 
			<if test="countSize == 100 and loginId != null">
				and (c.poolId in (select t.regionName
								from resourcepool t,
									resourcepooldepartment a,
									oss_system_user b,
									oss_system_department c
								where loginId in (${loginId})
									and a.groupId = c.refGroupId
									and b.department = c.id
									and a.poolId = t.id
									and t.regionName is not null) and c.nodeType = 'VIR_INSTANCE')
					or (c.poolId in (select a.poolId
								from resourcepooldepartment a,
									oss_system_user b,
									oss_system_department c
								where loginId in (${loginId})
									and a.groupId = c.refGroupId
									and b.department = c.id) and c.nodeType in ('PHYSICAL','VIRTUAL'))
			</if>
			<if test="countSize == 10 and loginId != null">
				and ((c.poolid in (select t.regionName from resourcepool t,resourcepoolusers k where t.id = k.poolId and t.regionName is not null and loginId in (${loginId})) and c.nodeType = 'VIR_INSTANCE')
					or (c.poolId in (select poolId from resourcepoolusers where loginId in (${loginId})) and c.nodeType in ('PHYSICAL','VIRTUAL')))
			</if>
			-->
			)
			<if test="hostId != null">
				and a.hostId = #{hostId}
			</if>
			<if test="itemId != null">
				and a.itemId = #{itemId}
			</if>
			<if test="triggerId != null">
				and a.triggerId = #{triggerId}
				and a.status ='PROBLEM'
				and a.eventId not in(select c.eventId from ZABBIX_Event_Ack c)
			</if>
			<if test="begin_clock != null">
				<![CDATA[ and clock >= #{begin_clock}]]>
			</if>
			<if test="end_clock != null">
				<![CDATA[ and clock <= #{end_clock}]]>
			</if>
			<if test="keyWord != null">
				<![CDATA[ and (a.hostName like concat('%',#{keyWord},'%') or a.description like concat('%',#{keyWord},'%'))]]>
			</if>
			<if test="nodeType != null">
				and #{nodeType} = (select nodeType from v_monitor_host k where k.hostid = a.hostid)
			</if>
			<if test="ackStatus > 0">
				and ackStatus = #{ackStatus}
			</if>
			<if test="ackStatus == 0">
				and ackStatus is null 
			</if>
			<if test="severity != null">
				and severity= #{severity}
			</if>
			<if test="severity == null">
				and severity != 'AVERAGE'
			</if>
		</where>
	</select>
	<select id="selectResourceMonitorHostEvents" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			SELECT a.*,
			case a.severity
				when 'DISASTER' then 4
				when 'WARNING' then 2
				when 'AVERAGE' then 1
				when 'INFORMATION' then 0
				else 0 end as severityNum,
		    ifnull(b.ackStatus,4) ackStatus,
		    b.remark,
			(select id from v_monitor_host k where k.hostid = a.hostid) targetId,
			(select nodeType from v_monitor_host k where k.hostid = a.hostid) nodeType,
			(select hostName from v_monitor_host k where k.hostid = a.hostid) targetHostName
			FROM ZABBIX_Event a
				left join ZABBIX_Event_Ack b on a.eventId = b.eventId
				]]>
		<where>
			<![CDATA[ exists (select hostid from v_monitor_host c where c.hostid = a.hostid ]]>
			<!-- 
			<if test="countSize == 100 and loginId != null">
				and (c.poolId in (select t.regionName
								from resourcepool t,
									resourcepooldepartment a,
									oss_system_user b,
									oss_system_department c
								where loginId in (${loginId})
									and a.groupId = c.refGroupId
									and b.department = c.id
									and a.poolId = t.id
									and t.regionName is not null) and c.nodeType = 'VIR_INSTANCE')
					or (c.poolId in (select a.poolId
								from resourcepooldepartment a,
									oss_system_user b,
									oss_system_department c
								where loginId in (${loginId})
									and a.groupId = c.refGroupId
									and b.department = c.id) and c.nodeType in ('PHYSICAL','VIRTUAL'))
			</if>
			<if test="countSize == 10 and loginId != null">
				and ((c.poolid in (select t.regionName from resourcepool t,resourcepoolusers k where t.id = k.poolId and t.regionName is not null and loginId in (${loginId})) and c.nodeType = 'VIR_INSTANCE')
					or (c.poolId in (select poolId from resourcepoolusers where loginId in (${loginId})) and c.nodeType in ('PHYSICAL','VIRTUAL')))
			</if>
			 -->
			)
			<if test="hostId != null">
				and a.hostId = #{hostId}
			</if>
			<if test="itemId != null">
				and a.itemId = #{itemId}
			</if>
			<if test="triggerId != null">
				and a.triggerId = #{triggerId}
				and a.status ='PROBLEM'
				and a.eventId not in(select c.eventId from ZABBIX_Event_Ack c)
			</if>
			<if test="begin_clock != null">
				<![CDATA[ and clock >= #{begin_clock}]]>
			</if>
			<if test="end_clock != null">
				<![CDATA[ and clock <= #{end_clock}]]>
			</if>
			<if test="keyWord != null">
				<![CDATA[ and (a.hostName like concat('%',#{keyWord},'%') or a.description like concat('%',#{keyWord},'%'))]]>
			</if>
			<if test="nodeType != null">
				and #{nodeType} = (select nodeType from v_monitor_host k where k.hostid = a.hostid)
			</if>
			<if test="ackStatus > 0">
				and ackStatus = #{ackStatus}
			</if>
			<if test="ackStatus == 0">
				and ackStatus is null
			</if>
			<if test="severity != null">
				and severity= #{severity}
			</if>
			<if test="severity == null">
				and severity != 'AVERAGE'
			</if>
		</where>

		<if test="instanceSort != null">
			<![CDATA[ order by ${instanceSort} ${instanceSortDirection} ]]>
		</if>
		<if test="instanceSort == null">
			<!-- order by a.clock desc, a.`status` desc, severityNum desc, ackStatus desc -->
			<![CDATA[ order by severityNum desc,a.clock desc ]]>
		</if>

		<if test="beginIndex != null">
			limit #{beginIndex},#{perPage}
		</if>
	</select>
	<select id="selectResourceMonitorHostEvents_ZABBIXCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			SELECT count(*) totalSize
			FROM ZABBIX_Event a
			join (select distinct c.*
			from (select h.* 
					from v_monitor_host h 
					where h.nodeType = 'VIRTUAL' and 
						(h.id in (select resourceId from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIRTUAL') 
						or 0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIRTUAL') 
						or (0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIRTUAL') and false)) 
					union all 
					select j.*
					from v_monitor_host j
					where j.nodeType = 'PHYSICAL' and 
						(j.id in(select resourceId from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='PHYSICAL') 
						or 0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='PHYSICAL') 
						or (0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='PHYSICAL') and false)) 
					union all 
					select k.*
					from v_monitor_host k 
					where k.nodeType = 'VIR_INSTANCE' and 
						(k.id in (select resourceId from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_INSTANCE') 
						or 0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_INSTANCE') 
						or (0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_INSTANCE') and false)) 
				) c ]]>
				 <where>
					<if test="countSize == 100 and loginId != null">
						and (c.poolId in (select t.id 
										from resourcepool t,
											resourcepooldepartment a,
											oss_system_user b,
											oss_system_department c 
										where concat(',',#{loginId},',') like concat('%,',loginId,',%')
											and a.groupId = c.refGroupId
											and b.department = c.id
											and a.poolId = t.id
											and t.regionName is not null) and c.nodeType = 'VIR_INSTANCE')
							or (c.poolId in (select a.poolId 
										from resourcepooldepartment a,
											oss_system_user b,
											oss_system_department c 
										where concat(',',#{loginId},',') like concat('%,',loginId,',%')
											and a.groupId = c.refGroupId
											and b.department = c.id) and c.nodeType in ('PHYSICAL','VIRTUAL'))
					</if>
					<if test="countSize == 10 and loginId != null">
						and ((c.poolid in (select t.id from resourcepool t,resourcepoolusers k where t.id = k.poolId and t.regionName is not null and concat(',',#{loginId},',') like concat('%,',loginId,',%')) and c.nodeType = 'VIR_INSTANCE')
							or (c.poolId in (select poolId from resourcepoolusers where concat(',',#{loginId},',') like concat('%,',loginId,',%')) and c.nodeType in ('PHYSICAL','VIRTUAL')))
					</if>
				</where>
			) t on a.hostid = t.hostid
			left join rn_ext_osinfo f on t.id = f.nodeId 
			<where>
				<if test="hostId != null">
					and a.hostId = #{hostId}
				</if>
				<if test="itemId != null">
					and a.itemId = #{itemId}
				</if>
				<if test="triggerId != null">
					and a.triggerId = #{triggerId} 
					and a.status ='PROBLEM' 
					and a.eventId not in(select c.eventId from ZABBIX_Event_Ack c) 
				</if>
				<if test="begin_clock != null">
					<![CDATA[ and a.clock >= #{begin_clock}]]>
				</if>
				<if test="end_clock != null">
					<![CDATA[ and a.clock <= #{end_clock}]]>
				</if>
				
				<if test="keyWord != null">
					<![CDATA[ and (
								a.description like concat('%',#{keyWord},'%')
								or a.ipAddress like concat('%',#{keyWord},'%') 
								or t.hostName like concat('%',#{keyWord},'%') 
								or t.name like concat('%',#{keyWord},'%') 
								or (f.osipAddress like concat('%',#{keyWord},'%') or t.id in (select i.nodeId from rn_ext_interface i where i.ipAddress like concat('%',#{keyWord},'%')))
								or (f.sysMacAddr like concat('%',#{keyWord},'%')  or t.id in (select i.nodeId from rn_ext_interface i where i.macAddress like concat('%',#{keyWord},'%'))) 
								or t.id in (select i.nodeId from rn_ext_wwn i where i.wwn like concat('%',#{keyWord},'%'))
								or t.id in (
									  		select m.resourceId from oss_system_tag_resource m 
											where m.createUser = #{loginId} and m.value like concat('%',#{keyWord},'%') 
									  )
							  )
					]]>
				</if>
				<if test="severity != null">
					and severity= #{severity} 
				</if>
			</where>
	</select>
	<select id="selectResourceMonitorHostEvents_ZABBIX" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			SELECT a.*,
				  t.id targetId,
				  t.nodeType,
				  t.hostName targetHostName
			FROM ZABBIX_Event a
			join (select distinct c.*
			from (select h.* 
					from v_monitor_host h 
					where h.nodeType = 'VIRTUAL' and 
						(h.id in (select resourceId from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIRTUAL') 
						or 0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIRTUAL') 
						or (0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIRTUAL') and false)) 
					union all 
					select j.*
					from v_monitor_host j
					where j.nodeType = 'PHYSICAL' and 
						(j.id in(select resourceId from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='PHYSICAL') 
						or 0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='PHYSICAL') 
						or (0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='PHYSICAL') and false)) 
					union all 
					select k.*
					from v_monitor_host k 
					where k.nodeType = 'VIR_INSTANCE' and 
						(k.id in (select resourceId from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_INSTANCE') 
						or 0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_INSTANCE') 
						or (0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_INSTANCE') and false)) 
				) c ]]>
				 <where>
					<if test="countSize == 100 and loginId != null">
						and (c.poolId in (select t.id 
										from resourcepool t,
											resourcepooldepartment a,
											oss_system_user b,
											oss_system_department c 
										where concat(',',#{loginId},',') like concat('%,',loginId,',%')
											and a.groupId = c.refGroupId
											and b.department = c.id
											and a.poolId = t.id
											and t.regionName is not null) and c.nodeType = 'VIR_INSTANCE')
							or (c.poolId in (select a.poolId 
										from resourcepooldepartment a,
											oss_system_user b,
											oss_system_department c 
										where concat(',',#{loginId},',') like concat('%,',loginId,',%')
											and a.groupId = c.refGroupId
											and b.department = c.id) and c.nodeType in ('PHYSICAL','VIRTUAL'))
					</if>
					<if test="countSize == 10 and loginId != null">
						and ((c.poolid in (select t.id from resourcepool t,resourcepoolusers k where t.id = k.poolId and t.regionName is not null and concat(',',#{loginId},',') like concat('%,',loginId,',%')) and c.nodeType = 'VIR_INSTANCE')
							or (c.poolId in (select poolId from resourcepoolusers where concat(',',#{loginId},',') like concat('%,',loginId,',%')) and c.nodeType in ('PHYSICAL','VIRTUAL')))
					</if>
				</where>
			) t on a.hostid = t.hostid
			left join rn_ext_osinfo f on t.id = f.nodeId 
			<where>
				<if test="hostId != null">
					and a.hostId = #{hostId}
				</if>
				<if test="itemId != null">
					and a.itemId = #{itemId}
				</if>
				<if test="triggerId != null">
					and a.triggerId = #{triggerId} 
					and a.status ='PROBLEM' 
					and a.eventId not in(select c.eventId from ZABBIX_Event_Ack c) 
				</if>
				<if test="begin_clock != null">
					<![CDATA[ and a.clock >= #{begin_clock}]]>
				</if>
				<if test="end_clock != null">
					<![CDATA[ and a.clock <= #{end_clock}]]>
				</if>
				
				<if test="keyWord != null">
					<![CDATA[ and (
								a.description like concat('%',#{keyWord},'%')
								or a.ipAddress like concat('%',#{keyWord},'%') 
								or t.hostName like concat('%',#{keyWord},'%') 
								or t.name like concat('%',#{keyWord},'%') 
								or (f.osipAddress like concat('%',#{keyWord},'%') or t.id in (select i.nodeId from rn_ext_interface i where i.ipAddress like concat('%',#{keyWord},'%')))
								or (f.sysMacAddr like concat('%',#{keyWord},'%')  or t.id in (select i.nodeId from rn_ext_interface i where i.macAddress like concat('%',#{keyWord},'%'))) 
								or t.id in (select i.nodeId from rn_ext_wwn i where i.wwn like concat('%',#{keyWord},'%'))
								or t.id in (
									  		select m.resourceId from oss_system_tag_resource m 
											where m.createUser = #{loginId} and m.value like concat('%',#{keyWord},'%') 
									  )
							  )
					]]>
				</if>
				<if test="severity != null">
					and severity= #{severity} 
				</if>
			</where>
			<if test="instanceSort != null">
				<![CDATA[  order by ${instanceSort} ${instanceSortDirection} ]]>
			</if>
			<if test="instanceSort == null">
				<![CDATA[ order by a.eventId desc ]]>
			</if>
			
			<if test="beginIndex != null">
				limit #{beginIndex},#{perPage}
			</if>
	</select>
	
	<select id="selectResourceMonitorHostEvents_STORAGEMGMTCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			SELECT count(*) totalSize
			FROM oss_resource_storage_mgmt_trap a]]>
			<where>
				<if test="ipAddress != null">
					and a.ipaddress = #{mgmtIpAddress}
				</if>
				<if test="begin_clock != null">
					<![CDATA[ and a.createTime >= #{begin_clock}]]>
				</if>
				<if test="end_clock != null">
					<![CDATA[ and a.createTime <= #{end_clock}]]>
				</if>
				
				<if test="keyWord != null">
					<![CDATA[ and (a.content like concat('%',#{keyWord},'%') 
								or a.ipaddress like concat('%',#{keyWord},'%') 
								or a.serialNumber like concat('%',#{keyWord},'%')
							  )
					]]>
				</if>
			</where>
	</select>
	<select id="selectResourceMonitorHostEvents_STORAGEMGMT" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			SELECT a.content description,
				  a.createTime clock,
				  a.serialNumber targetHostName,
				  a.ipaddress ipAddress
			FROM oss_resource_storage_mgmt_trap a]]>
			<where>
				<if test="ipAddress != null">
					and a.ipaddress = #{mgmtIpAddress}
				</if>
				<if test="begin_clock != null">
					<![CDATA[ and a.createTime >= #{begin_clock}]]>
				</if>
				<if test="end_clock != null">
					<![CDATA[ and a.createTime <= #{end_clock}]]>
				</if>
				
				<if test="keyWord != null">
					<![CDATA[ and (a.content like concat('%',#{keyWord},'%') 
								or a.ipaddress like concat('%',#{keyWord},'%') 
								or a.serialNumber like concat('%',#{keyWord},'%')
							  )
					]]>
				</if>
			</where>

			<if test="instanceSort != null">
				<![CDATA[  order by ${instanceSort} ${instanceSortDirection} ]]>
			</if>
			<if test="instanceSort == null">
				<![CDATA[ order by clock desc ]]>
			</if>
			
			<if test="beginIndex != null">
				limit #{beginIndex},#{perPage}
			</if>
	</select>
	
	<select id="selectResourceMonitorHostEvents_ONEAPMCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			SELECT count(*) totalSize
			FROM oss_resource_openapi_trap a]]>
			<where>
				<if test="ipAddress != null">
					and a.ipaddress = #{mgmtIpAddress}
				</if>
				<if test="begin_clock != null">
					<![CDATA[ and a.createTime >= #{begin_clock}]]>
				</if>
				<if test="end_clock != null">
					<![CDATA[ and a.createTime <= #{end_clock}]]>
				</if>
				
				<if test="keyWord != null">
					<![CDATA[ and (a.content like concat('%',#{keyWord},'%') 
								or a.ipaddress like concat('%',#{keyWord},'%') 
								or a.name like concat('%',#{keyWord},'%')
							  )
					]]>
				</if>
			</where>
	</select>
	<select id="selectResourceMonitorHostEvents_ONEAPM" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			SELECT a.content description,
				  a.createTime clock,
				  a.name targetHostName,
				  a.ipaddress ipAddress
			FROM oss_resource_openapi_trap a]]>
			<where>
				<if test="ipAddress != null">
					and a.ipaddress = #{mgmtIpAddress}
				</if>
				<if test="begin_clock != null">
					<![CDATA[ and a.createTime >= #{begin_clock}]]>
				</if>
				<if test="end_clock != null">
					<![CDATA[ and a.createTime <= #{end_clock}]]>
				</if>
				
				<if test="keyWord != null">
					<![CDATA[ and (a.content like concat('%',#{keyWord},'%') 
								or a.ipaddress like concat('%',#{keyWord},'%') 
								or a.name like concat('%',#{keyWord},'%')
							  )
					]]>
				</if>
			</where>

			<if test="instanceSort != null">
				<![CDATA[  order by ${instanceSort} ${instanceSortDirection} ]]>
			</if>
			<if test="instanceSort == null">
				<![CDATA[ order by clock desc ]]>
			</if>
			
			<if test="beginIndex != null">
				limit #{beginIndex},#{perPage}
			</if>
	</select>
	
	<select id="selectResourceMonitorHostEvents_MGMTCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			SELECT count(*) totalSize
			FROM oss_resource_mgmt_trap a
			left join (select distinct c.*
				from (select a.*,b.poolid,o.osipaddress,o.sysmacaddr,k.ipaddress mgmtipaddress
						from rn_base a 
							join rn_ext_physical b on a.id = b.nodeId 
							join rn_ext_osinfo o on a.id  = o.nodeId 
							join rn_ext_mgmtinfo k on a.id  = k.nodeId 
						where rnStatus='NORMAL' and a.type = 'COMPUTE' and a.subType = 'VIRTUAL'
							and (a.id in (select resourceId from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIRTUAL')  or 
								0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIRTUAL') or 
								(0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIRTUAL') and false))
						union all 
						select a.*,b.poolid,o.osipaddress,o.sysmacaddr,k.ipaddress mgmtipaddress
						from rn_base a 
							join rn_ext_physical b on a.id = b.nodeId 
							join rn_ext_osinfo o on a.id  = o.nodeId 
							join rn_ext_mgmtinfo k on a.id  = k.nodeId 
						where rnStatus='NORMAL' and a.type = 'COMPUTE' and a.subType = 'PHYSICAL'
							and (a.id in (select resourceId from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='PHYSICAL')  or 
								0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='PHYSICAL') or 
								(0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='PHYSICAL') and false))
					) c ]]>
					 <where>
						<if test="countSize == 100 and loginId != null">
							and (c.poolId in (select t.id 
											from resourcepool t,
												resourcepooldepartment a,
												oss_system_user b,
												oss_system_department c 
											where concat(',',#{loginId},',') like concat('%,',loginId,',%')
												and a.groupId = c.refGroupId
												and b.department = c.id
												and a.poolId = t.id
												and t.regionName is not null) and c.nodeType = 'VIR_INSTANCE')
								or (c.poolId in (select a.poolId 
											from resourcepooldepartment a,
												oss_system_user b,
												oss_system_department c 
											where concat(',',#{loginId},',') like concat('%,',loginId,',%')
												and a.groupId = c.refGroupId
												and b.department = c.id) and c.nodeType in ('PHYSICAL','VIRTUAL'))
						</if>
						<if test="countSize == 10 and loginId != null">
							and ((c.poolid in (select t.id from resourcepool t,resourcepoolusers k where t.id = k.poolId and t.regionName is not null and concat(',',#{loginId},',') like concat('%,',loginId,',%')) and c.nodeType = 'VIR_INSTANCE')
								or (c.poolId in (select poolId from resourcepoolusers where concat(',',#{loginId},',') like concat('%,',loginId,',%')) and c.nodeType in ('PHYSICAL','VIRTUAL')))
						</if>
					</where>
			) t on a.ipaddress = t.mgmtipaddress
			<where>
				<if test="countSize &lt; 1000 and loginId != null">
					and t.id is not null
				</if>
				<if test="mgmtIpAddress != null">
					and a.ipaddress = #{mgmtIpAddress}
				</if>
				<if test="begin_clock != null">
					<![CDATA[ and a.createTime >= #{begin_clock}]]>
				</if>
				<if test="end_clock != null">
					<![CDATA[ and a.createTime <= #{end_clock}]]>
				</if>
				
				<if test="keyWord != null">
					<![CDATA[ and (
								(a.content like concat('%',#{keyWord},'%') or a.ipaddress like concat('%',#{keyWord},'%'))
								or
								(t.id is not null and ( 
								 t.hostName like concat('%',#{keyWord},'%') 
								or t.name like concat('%',#{keyWord},'%') 
								or (t.osipAddress like concat('%',#{keyWord},'%') or t.id in (select i.nodeId from rn_ext_interface i where i.ipAddress like concat('%',#{keyWord},'%')))
								or (t.sysMacAddr like concat('%',#{keyWord},'%')  or t.id in (select i.nodeId from rn_ext_interface i where i.macAddress like concat('%',#{keyWord},'%'))) 
								or t.id in (select i.nodeId from rn_ext_wwn i where i.wwn like concat('%',#{keyWord},'%'))
								or t.id in (select m.resourceId from oss_system_tag_resource m where m.createUser = #{loginId} and m.value like concat('%',#{keyWord},'%'))))
							  )
					]]>
				</if>
			</where>
	</select>
	<select id="selectResourceMonitorHostEvents_MGMT" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			SELECT a.content description,
				  a.createTime clock,
				  ifnull(t.hostname,'-') targetHostName,
				  t.id targetId,
				  a.ipaddress ipAddress
			FROM oss_resource_mgmt_trap a
			left join (select distinct c.*
				from (select a.*,b.poolid,o.osipaddress,o.sysmacaddr,k.ipaddress mgmtipaddress
						from rn_base a 
							join rn_ext_physical b on a.id = b.nodeId 
							join rn_ext_osinfo o on a.id  = o.nodeId 
							join rn_ext_mgmtinfo k on a.id  = k.nodeId 
						where rnStatus='NORMAL' and a.type = 'COMPUTE' and a.subType = 'VIRTUAL'
							and (a.id in (select resourceId from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIRTUAL')  or 
								0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIRTUAL') or 
								(0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIRTUAL') and false))
						union all 
						select a.*,b.poolid,o.osipaddress,o.sysmacaddr,k.ipaddress mgmtipaddress
						from rn_base a 
							join rn_ext_physical b on a.id = b.nodeId 
							join rn_ext_osinfo o on a.id  = o.nodeId 
							join rn_ext_mgmtinfo k on a.id  = k.nodeId 
						where rnStatus='NORMAL' and a.type = 'COMPUTE' and a.subType = 'PHYSICAL'
							and (a.id in (select resourceId from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='PHYSICAL')  or 
								0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='PHYSICAL') or 
								(0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='PHYSICAL') and false))
					) c ]]>
					 <where>
						<if test="countSize == 100 and loginId != null">
							and (c.poolId in (select t.id 
											from resourcepool t,
												resourcepooldepartment a,
												oss_system_user b,
												oss_system_department c 
											where concat(',',#{loginId},',') like concat('%,',loginId,',%')
												and a.groupId = c.refGroupId
												and b.department = c.id
												and a.poolId = t.id
												and t.regionName is not null) and c.nodeType = 'VIR_INSTANCE')
								or (c.poolId in (select a.poolId 
											from resourcepooldepartment a,
												oss_system_user b,
												oss_system_department c 
											where concat(',',#{loginId},',') like concat('%,',loginId,',%')
												and a.groupId = c.refGroupId
												and b.department = c.id) and c.nodeType in ('PHYSICAL','VIRTUAL'))
						</if>
						<if test="countSize == 10 and loginId != null">
							and ((c.poolid in (select t.id from resourcepool t,resourcepoolusers k where t.id = k.poolId and t.regionName is not null and concat(',',#{loginId},',') like concat('%,',loginId,',%')) and c.nodeType = 'VIR_INSTANCE')
								or (c.poolId in (select poolId from resourcepoolusers where concat(',',#{loginId},',') like concat('%,',loginId,',%')) and c.nodeType in ('PHYSICAL','VIRTUAL')))
						</if>
					</where>
			) t on a.ipaddress = t.mgmtipaddress
			<where>
				<if test="countSize &lt; 1000 and loginId != null">
					and t.id is not null
				</if>
				<if test="mgmtIpAddress != null">
					and a.ipaddress = #{mgmtIpAddress}
				</if>
				<if test="begin_clock != null">
					<![CDATA[ and a.createTime >= #{begin_clock}]]>
				</if>
				<if test="end_clock != null">
					<![CDATA[ and a.createTime <= #{end_clock}]]>
				</if>
				
				<if test="keyWord != null">
					<![CDATA[ and (
								(a.content like concat('%',#{keyWord},'%') or a.ipaddress like concat('%',#{keyWord},'%'))
								or
								(t.id is not null and ( 
								 t.hostName like concat('%',#{keyWord},'%') 
								or t.name like concat('%',#{keyWord},'%') 
								or (t.osipAddress like concat('%',#{keyWord},'%') or t.id in (select i.nodeId from rn_ext_interface i where i.ipAddress like concat('%',#{keyWord},'%')))
								or (t.sysMacAddr like concat('%',#{keyWord},'%')  or t.id in (select i.nodeId from rn_ext_interface i where i.macAddress like concat('%',#{keyWord},'%'))) 
								or t.id in (select i.nodeId from rn_ext_wwn i where i.wwn like concat('%',#{keyWord},'%'))
								or t.id in (select m.resourceId from oss_system_tag_resource m where m.createUser = #{loginId} and m.value like concat('%',#{keyWord},'%'))))
							  )
					]]>
				</if>
			</where>

			<if test="instanceSort != null">
				<![CDATA[  order by ${instanceSort} ${instanceSortDirection} ]]>
			</if>
			<if test="instanceSort == null">
				<![CDATA[ order by clock desc ]]>
			</if>
			
			<if test="beginIndex != null">
				limit #{beginIndex},#{perPage}
			</if>
	</select>
	
	<select id="selectResourceMonitorHostEvents_VCENTERCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			SELECT count(*) totalSize
			FROM oss_resource_vcenter_trap a
			left join (select distinct c.*
				from (select a.*,b.poolid,o.osipaddress,o.sysmacaddr,o.osipaddress targetKey,2 objType
						from rn_base a 
							join rn_ext_physical b on a.id = b.nodeId 
							join rn_ext_osinfo o on a.id  = o.nodeId 
						where rnStatus='NORMAL' and a.type = 'COMPUTE' and a.subType = 'VIRTUAL'
							and (a.id in (select resourceId from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIRTUAL')  or 
								0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIRTUAL') or 
								(0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIRTUAL') and false))

						union all 
						select a.*,(select id from resourcepool x where b.region = x.regionName) poolid,o.osipaddress,o.sysmacaddr,a.name targetKey,3 objType
						from rn_base a
							join rn_ext_vir_instance b on a.id = b.nodeId 
							left join rn_ext_osinfo o on a.id  = o.nodeId 
						where a.rnStatus='NORMAL' 
							and (a.id in (select resourceId from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_INSTANCE')  or 
									0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_INSTANCE') or 
									(0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_INSTANCE') and false)) 
					) c ]]>
					 <where>
						<if test="countSize == 100 and loginId != null">
							and (c.poolId in (select t.id 
											from resourcepool t,
												resourcepooldepartment a,
												oss_system_user b,
												oss_system_department c 
											where concat(',',#{loginId},',') like concat('%,',loginId,',%')
												and a.groupId = c.refGroupId
												and b.department = c.id
												and a.poolId = t.id
												and t.regionName is not null) and c.nodeType = 'VIR_INSTANCE')
								or (c.poolId in (select a.poolId 
											from resourcepooldepartment a,
												oss_system_user b,
												oss_system_department c 
											where concat(',',#{loginId},',') like concat('%,',loginId,',%')
												and a.groupId = c.refGroupId
												and b.department = c.id) and c.nodeType in ('PHYSICAL','VIRTUAL'))
						</if>
						<if test="countSize == 10 and loginId != null">
							and ((c.poolid in (select t.id from resourcepool t,resourcepoolusers k where t.id = k.poolId and t.regionName is not null and concat(',',#{loginId},',') like concat('%,',loginId,',%')) and c.nodeType = 'VIR_INSTANCE')
								or (c.poolId in (select poolId from resourcepoolusers where concat(',',#{loginId},',') like concat('%,',loginId,',%')) and c.nodeType in ('PHYSICAL','VIRTUAL')))
						</if>
					</where>
			) t on a.targetObjType = t.objType and a.targetObj = t.targetKey
			<where>
				<if test="countSize &lt; 1000 and loginId != null">
					and t.id is not null
				</if>
				<if test="osIpAddress != null">
					and a.targetObj = #{osIpAddress}
				</if>
				<if test="targetName != null">
					and a.targetObj = #{targetName}
				</if>
				<if test="itemId != null">
					and a.itemId = #{itemId}
				</if>
				<if test="triggerId != null">
					and a.triggerId = #{triggerId} 
				</if>
				<if test="begin_clock != null">
					<![CDATA[ and a.createTime >= #{begin_clock}]]>
				</if>
				<if test="end_clock != null">
					<![CDATA[ and a.createTime <= #{end_clock}]]>
				</if>
				
				<if test="keyWord != null">
					<![CDATA[ and (
								(a.value like concat('%',#{keyWord},'%') or a.targetObj like concat('%',#{keyWord},'%'))
								or
								(t.id is not null and ( 
								 t.hostName like concat('%',#{keyWord},'%') 
								or t.name like concat('%',#{keyWord},'%') 
								or (t.osipAddress like concat('%',#{keyWord},'%') or t.id in (select i.nodeId from rn_ext_interface i where i.ipAddress like concat('%',#{keyWord},'%')))
								or (t.sysMacAddr like concat('%',#{keyWord},'%')  or t.id in (select i.nodeId from rn_ext_interface i where i.macAddress like concat('%',#{keyWord},'%'))) 
								or t.id in (select i.nodeId from rn_ext_wwn i where i.wwn like concat('%',#{keyWord},'%'))
								or t.id in (select m.resourceId from oss_system_tag_resource m where m.createUser = #{loginId} and m.value like concat('%',#{keyWord},'%'))))
							  )
					]]>
				</if>
				<if test="severity != null">
					and severity= #{severity} 
				</if>
			</where>
	</select>
	<select id="selectResourceMonitorHostEvents_VCENTER" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			SELECT a.value description,
				  a.status severity,
				  a.createTime clock,
				  ifnull(if(a.targetObjType = 3,t.name,if(a.targetObjType = 2,t.hostname,a.targetObj)),a.targetObj) targetHostName,
				  t.id targetId,
				  if(a.targetObjType = 3,'VIRTUAL',if(a.targetObjType = 2,'HOST',if(a.targetObjType = 4,'CLUSTER','VCENTER'))) nodeType,
				  t.osipaddress ipAddress
			FROM oss_resource_vcenter_trap a
			left join (select distinct c.*
				from (select a.*,b.poolid,o.osipaddress,o.sysmacaddr,o.osipaddress targetKey,2 objType
						from rn_base a 
							join rn_ext_physical b on a.id = b.nodeId 
							join rn_ext_osinfo o on a.id  = o.nodeId 
						where rnStatus='NORMAL' and a.type = 'COMPUTE' and a.subType = 'VIRTUAL'
							and (a.id in (select resourceId from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIRTUAL')  or 
								0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIRTUAL') or 
								(0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIRTUAL') and false))

						union all 
						select a.*,(select id from resourcepool x where b.region = x.regionName) poolid,o.osipaddress,o.sysmacaddr,a.name targetKey,3 objType
						from rn_base a
							join rn_ext_vir_instance b on a.id = b.nodeId 
							left join rn_ext_osinfo o on a.id  = o.nodeId 
						where a.rnStatus='NORMAL' 
							and (a.id in (select resourceId from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_INSTANCE')  or 
									0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_INSTANCE') or 
									(0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_INSTANCE') and false)) 
					) c ]]>
					 <where>
						<if test="countSize == 100 and loginId != null">
							and (c.poolId in (select t.id 
											from resourcepool t,
												resourcepooldepartment a,
												oss_system_user b,
												oss_system_department c 
											where concat(',',#{loginId},',') like concat('%,',loginId,',%')
												and a.groupId = c.refGroupId
												and b.department = c.id
												and a.poolId = t.id
												and t.regionName is not null) and c.nodeType = 'VIR_INSTANCE')
								or (c.poolId in (select a.poolId 
											from resourcepooldepartment a,
												oss_system_user b,
												oss_system_department c 
											where concat(',',#{loginId},',') like concat('%,',loginId,',%')
												and a.groupId = c.refGroupId
												and b.department = c.id) and c.nodeType in ('PHYSICAL','VIRTUAL'))
						</if>
						<if test="countSize == 10 and loginId != null">
							and ((c.poolid in (select t.id from resourcepool t,resourcepoolusers k where t.id = k.poolId and t.regionName is not null and concat(',',#{loginId},',') like concat('%,',loginId,',%')) and c.nodeType = 'VIR_INSTANCE')
								or (c.poolId in (select poolId from resourcepoolusers where concat(',',#{loginId},',') like concat('%,',loginId,',%')) and c.nodeType in ('PHYSICAL','VIRTUAL')))
						</if>
					</where>
			) t on a.targetObjType = t.objType and a.targetObj = t.targetKey
			<where>
				<if test="countSize &lt; 1000 and loginId != null">
					and t.id is not null
				</if>
				<if test="osIpAddress != null">
					and a.targetObj = #{osIpAddress}
				</if>
				<if test="targetName != null">
					and a.targetObj = #{targetName}
				</if>
				<if test="itemId != null">
					and a.itemId = #{itemId}
				</if>
				<if test="triggerId != null">
					and a.triggerId = #{triggerId} 
				</if>
				<if test="begin_clock != null">
					<![CDATA[ and a.createTime >= #{begin_clock}]]>
				</if>
				<if test="end_clock != null">
					<![CDATA[ and a.createTime <= #{end_clock}]]>
				</if>
				
				<if test="keyWord != null">
					<![CDATA[ and (
								(a.value like concat('%',#{keyWord},'%') or a.targetObj like concat('%',#{keyWord},'%'))
								or
								(t.id is not null and ( 
								 t.hostName like concat('%',#{keyWord},'%') 
								or t.name like concat('%',#{keyWord},'%') 
								or (t.osipAddress like concat('%',#{keyWord},'%') or t.id in (select i.nodeId from rn_ext_interface i where i.ipAddress like concat('%',#{keyWord},'%')))
								or (t.sysMacAddr like concat('%',#{keyWord},'%')  or t.id in (select i.nodeId from rn_ext_interface i where i.macAddress like concat('%',#{keyWord},'%'))) 
								or t.id in (select i.nodeId from rn_ext_wwn i where i.wwn like concat('%',#{keyWord},'%'))
								or t.id in (select m.resourceId from oss_system_tag_resource m where m.createUser = #{loginId} and m.value like concat('%',#{keyWord},'%'))))
							  )
					]]>
				</if>
				<if test="severity != null">
					and severity= #{severity} 
				</if>
			</where>

			<if test="instanceSort != null">
				<![CDATA[  order by ${instanceSort} ${instanceSortDirection} ]]>
			</if>
			<if test="instanceSort == null">
				<![CDATA[ order by clock desc ]]>
			</if>
			
			<if test="beginIndex != null">
				limit #{beginIndex},#{perPage}
			</if>
	</select>
	
	
	<insert id="ackResourceMonitorEvent" parameterType="java.util.HashMap">
		<![CDATA[
		insert into ZABBIX_Event_Ack(eventId,ackStatus,remark)
		values(#{eventId},#{ackStatus},#{remark}) 
		]]>
	</insert>
	
	<select id="selectResourceMonitorHostItemsCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			SELECT count(*) totalSize
			FROM ZABBIX_Host_Item a
			where a.flag in (0,4)
		]]>
		<if test="hostId != null">
			and a.hostId = #{hostId}
		</if>
		<if test="searchValue != null">
			and (a.name like concat('%',#{searchValue},'%') or a.key_ like concat('%',#{searchValue},'%')) 
		</if>
	</select>
	<select id="selectResourceMonitorHostItems" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			SELECT a.*,
				(select displayName from ZABBIX_Template_Item where itemId = a.parentItemId) displayName,
                ifnull(b.eventCount,0) eventCount
			FROM ZABBIX_Host_Item a
				left join (select hostId,itemId,count(*) eventCount from ZABBIX_Event 
		]]>	
		<where>
			<if test="hostId != null">
				and hostId = #{hostId}
			</if>
		</where>
		<![CDATA[
			group by hostId,itemId) b on a.itemId = b.itemId and a.hostId = b.hostId
			where a.flag in (0,4)
		]]>
		<if test="hostId != null">
			and a.hostId = #{hostId}
		</if>
		<if test="itemId != null">
			and a.itemId = #{itemId}
		</if>
		<if test="searchValue != null">
			and (a.name like concat('%',#{searchValue},'%') or a.key_ like concat('%',#{searchValue},'%'))
		</if>
		<if test="beginIndex != null">
			limit #{beginIndex},#{perPage}
		</if>
	</select>
	
	<update id="updateResourceMonitorHostItem" parameterType="java.util.HashMap">
		<![CDATA[
		update ZABBIX_Host_Item 
		set hostId = hostId
		]]>
		<if test="status != null">
			, status = #{status}
		</if>
		<where>
			<if test="parentItemId != null">
				and parentItemId = #{parentItemId}
			</if>
			<if test="itemId != null">
				and itemId = #{itemId}
			</if>
		</where>
	</update>
	
	<select id="selectResourceMonitorHostTemplatesCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			SELECT count(*) totalSize
			FROM ZABBIX_Host_Template a
		]]>
		<where>
			<if test="hostId != null">
				a.hostId = #{hostId}
			</if>
		</where>
	</select>
	<select id="selectResourceMonitorHostTemplates" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			SELECT a.*,
				c.name,
				c.displayName,
				ifnull(b.itemCount,0) itemCount,
				ifnull(d.triggerCount,0) triggerCount
			FROM ZABBIX_Host_Template a
				join ZABBIX_Template c on a.templateId = c.templateId
				left join (select templateId,count(*) itemCount from ZABBIX_Template_Item where flag in (0,2) group by templateId) b on a.templateId = b.templateId
				left join (select templateId,count(*) triggerCount from ZABBIX_Template_Trigger group by templateId) d on a.templateId = d.templateId
		]]>
		<where>
			<if test="hostId != null">
				and a.hostId = #{hostId}
			</if>
		</where>
		<if test="beginIndex != null">
			limit #{beginIndex},#{perPage}
		</if>
	</select>

	<select id="selectAllMonitorGraphs" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select b.*,
				ifnull(a.itemCount,0) itemCount
			from MonitorGraphInfo b
			left join (select graphId,count(*) itemCount from MonitorGraphItemMap group by graphId) a on b.id = a.graphId where b.id >0 
		]]>
		<if test="beginIndex != null">
			limit #{beginIndex},#{perPage}
		</if>
	</select>
	<select id="selectAllMonitorGraphsCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select count(*) totalSize 
			from MonitorGraphInfo b
			left join (select graphId,count(*) itemCount from MonitorGraphItemMap group by graphId) a on b.id = a.graphId where b.id >0 
		]]>
	</select>
	<select id="selectMonitorGraphTemplateItems" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select c.*,b.params from MonitorGraphItemMap b,ZABBIX_Template_Item c
			where b.graphId = #{graphId}
            and b.itemId = c.itemId
		]]>
		<if test="beginIndex != null">
			limit #{beginIndex},#{perPage}
		</if>
	</select>
	<select id="selectMonitorGraphTemplateItemsCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select count(*) totalSize from MonitorGraphItemMap b,ZABBIX_Template_Item c
			where b.graphId = #{graphId}
            and b.itemId = c.itemId
		]]>
	</select>
	<select id="selectZabbixTemplateItemMapGroup" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.sourceItemId from zabbix_template_item_map a group by a.sourceItemId;
		]]>
	</select>
	<select id="selectMonitorNodeHostItems" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.*,b.sourceItemId,ifnull(d.hostName,d.defaultName) hostName from zabbix_host_item a 
			left join monitornodehost n on a.hostId=n.hostid 
			left join resourcenode d on d.id=n.nodeId 
			right join zabbix_template_item_map b on b.targetItemId=a.parentItemId  
			where n.nodeId =#{nodeId}  and concat(',',#{sourceItemId},',') like concat('%,',b.sourceItemId,',%') 
		]]>
	</select>
	<select id="selectMonitorVMHostItems" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.* from zabbix_host_item a 
			left join monitorvirtualhost v on a.hostId=v.hostid 
			right join (select targetItemId from zabbix_template_item_map b where concat(',',#{sourceItemId},',') like concat('%,',b.sourceItemId,',%')) c on c.targetItemId=a.parentItemId 
			where v.uuid =#{nodeId} 
		]]>
	</select>
	<select id="selectMonitorNodeHosts" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select * from monitornodehost 
		]]>
	</select>
	<select id="selectMonitorVirtualHosts" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select * from monitorvirtualhost 
		]]>
	</select>
	<insert id="insertMonitorGraph" parameterType="java.util.HashMap">
		<![CDATA[
		insert into MonitorGraphInfo(name,description,type,monitor)
		values(#{name},#{description},#{type},#{monitor}) 
		]]>
		<selectKey keyProperty="graphId" resultType="int" order="AFTER">
			select LAST_INSERT_ID()
		</selectKey>
	</insert>
	<insert id="deleteMonitorGraphItems" parameterType="java.util.HashMap">
		<![CDATA[
		delete from MonitorGraphItemMap where graphId = #{graphId}
		]]>
	</insert>
	<insert id="insertMonitorGraphItems" parameterType="java.util.HashMap">
		<![CDATA[
		insert into MonitorGraphItemMap(graphId,itemId,params) 
		${valueSqlString}
		]]>
	</insert>
	<delete id="deleteMonitorGraph" parameterType="java.util.HashMap">
		<![CDATA[
		delete from MonitorGraphInfo where id = #{graphId}
		]]>
	</delete>
	<update id="updateMonitorGraph" parameterType="java.util.HashMap">
		<![CDATA[
		update MonitorGraphInfo 
		set id = #{graphId}
		]]>
		<if test="name != null">
			, name = #{name}
		</if>
		<if test="description != null">
			, description = #{description}
		</if>
		<if test="type != null">
			, type = #{type}
		</if>
		<if test="monitor != null">
			, monitor = #{monitor}
		</if>
		<![CDATA[
		where id = #{graphId}
		]]>
	</update>
	
	<select id="selectMonitorGraphItems" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
		select a.*,c.displayName 
		from ZABBIX_Host_Item a,
			MonitorGraphItemMap b,
			ZABBIX_Template_Item c
		where a.parentItemId = c.itemId
			and a.hostId = #{hostId}
			and c.itemId = b.itemId
		    and c.flag = 0
			and b.graphId = #{graphId}
		union all
		select a.*,c.displayName 
		from ZABBIX_Host_Item a,
			MonitorGraphItemMap b,
			ZABBIX_Template_Item c
		where a.hostId = #{hostId}
			and c.itemId = b.itemId
			and b.graphId = #{graphId}
		    and c.flag = 2
		    and a.key_ = concat(substring_index(c.key_,'{',1),b.params, substring(c.key_,locate('}',c.key_)+1,length(c.key_)-locate('}',c.key_)))
		]]>
	</select>
	<select id="selectMonitorDiscoveryGraphItems" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select c.*
			from MonitorGraphItemMap a 
			join monitorgraphinfo b on a.graphId = b.id 
			join zabbix_template_item c on a.itemId = c.itemid
		]]>
		<where>
			<if test="graphIds != null">
				b.id in (${graphIds})				
			</if>
			<if test="graphId != null">
				b.id = #{graphId}
			</if>
		</where>
	</select>

	<select id="selectMonitorNodeGraphs" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select b.* 
			from MonitorGraphInfo b  where b.`default` = 1 
			union all 
			select b.* 
			from MonitorNodeGraphMap a, MonitorGraphInfo b
			where b.id >0 and a.nodeId = #{nodeId} and a.graphId = b.id
		]]>
		<if test="monitor != null">
			and b.monitor = #{monitor}
		</if>
	</select>
	
	<select id="selectMonitorNodeDefaultGraphs" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select b.* from  MonitorGraphInfo b where b.`default` =1 
		]]>
		<if test="monitor != null">
			and b.monitor = #{monitor}
		</if>
		<if test="ids != null">
			and b.id in (${ids})
		</if>
	</select>

	<delete id="deleteMonitorNodeGraph" parameterType="java.util.HashMap">
		<![CDATA[
		delete from MonitorNodeGraphMap where nodeId = #{nodeId} 
		]]>
	</delete>

	<insert id="insertMonitorNodeGraph" parameterType="java.util.HashMap">
		<![CDATA[
		insert into MonitorNodeGraphMap(nodeId,graphId) values (#{nodeId},#{graphId}) 
		]]>
	</insert>

	<select id="selectMonitorKeys" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select *
			from MonitorKeyInfo c
			where concat(',',#{keyIds},',') like concat('%,',c.id,',%');
		]]>
	</select>

	<select id="selectMonitorGraphParams" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.* 
			from MonitorParamInfo a,MonitorGraphParamMap b
			where a.id = b.paramId
				and b.graphId = #{graphId}
		]]>
	</select>

	<!-- SYSTEM -->
	<select id="selectSystemUserRelations" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.*,b.name
			from OSS_SYSTEM_User_Relation a,
            OSS_SYSTEM_User b
            where a.subLoginId = b.loginId
		]]>
		<if test="loginId != null">
			and a.loginId = (#{loginId})
		</if>
		<![CDATA[
			order by a.loginId
		]]>
	</select>
	<delete id="deleteSystemUserRelations" parameterType="java.util.HashMap">
		<![CDATA[
			delete from OSS_SYSTEM_User_Relation where loginId = #{loginId}
		]]>
	</delete>
	<insert id="insertSystemUserRelations" parameterType="java.util.HashMap">
		<![CDATA[
			insert into OSS_SYSTEM_User_Relation(loginId,subLoginId) values(#{loginId},#{subLoginId})
		]]>
	</insert>

	<select id="selectSystemMenus" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.*
			from OSS_SYSTEM_Menu a
			where status = 1
			order by a.parentId,a.order
		]]>
	</select>
	
	<update id="updateSystemMenuStatus" parameterType="java.util.HashMap">
		<![CDATA[
			update OSS_SYSTEM_Menu t set
		]]>
		<if test="systemType == 'ALL'">
			<![CDATA[status = 1 where system != '']]>
		</if>
		<if test="systemType != null and systemType != 'ALL'">
			<![CDATA[status = if(concat('%,ALL,',#{systemType},',%') like concat('%,',t.system,',%'),1,0)]]>
		</if>
		<if test="systemType == null">
			<![CDATA[status = 0]]>
		</if>
	</update>
	
	<select id="selectAuthSystemMenus" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.type,a.id,a.parentId,a.name
			from OSS_SYSTEM_Menu a
			where status = 1
			order by a.parentId,a.order
		]]>
	</select>
	
	<select id="selectSystemRolesCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select count(*) totalSize
			from OSS_SYSTEM_Role a
		]]> 
	</select>
	<select id="selectSystemRoles" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.*,b.countSize usedSize 
			from OSS_SYSTEM_Role a 
			left join (select count(*) countSize,roleId from oss_system_user_role group by roleId) b on a.id = b.roleId 
		]]>
		<where>
			<if test="id != null">
				and a.id = #{id} 
			</if>
		</where>
		<if test="beginIndex != null">
			limit #{beginIndex},#{perPage}
		</if>
	</select>
	<insert id="insertSystemRole" parameterType="java.util.HashMap">
		<![CDATA[
		INSERT INTO OSS_SYSTEM_Role(name,description,type,isDefault)
		values(#{name},#{description},#{type},#{isDefault}) 
		]]>
	</insert>
	<update id="updateSystemRole" parameterType="java.util.HashMap">
		<![CDATA[
		update OSS_SYSTEM_Role
		set id=#{id}
		]]>
		<if test="name != null">
			, name = #{name}
		</if>
		<if test="description != null">
			, description = #{description}
		</if>
		<if test="type != null">
			, type = #{type}
		</if>
		<![CDATA[
		where id = #{id}
		]]>
	</update>
	<delete id="deleteSystemRole" parameterType="java.util.HashMap">
		<![CDATA[
		delete from OSS_SYSTEM_Role where id = #{id}
		]]>
	</delete>
	
	<select id="selectSystemRoleMenus" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select distinct a.*
			from OSS_SYSTEM_Menu a,
				OSS_SYSTEM_Role_Menu b
			where a.id = b.menuId
				and a.status = 1
			    and b.roleId = #{roleId}
			order by a.parentId,a.order
		]]>
	</select>
	<select id="selectSystemUserMenus" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select distinct a.*,k.key parentKey
			from OSS_SYSTEM_Menu a
				join OSS_SYSTEM_Role_Menu b on a.id = b.menuId
			    join OSS_SYSTEM_User_Role c on c.roleId = b.roleId
                left join oss_system_menu k on a.parentid = k.id 
                ]]>
                <if test="loginId != null">
                	join OSS_SYSTEM_User d on c.userId = d.id and concat(',',#{loginId},',') like concat('%,',loginId,',%') 
                </if>
                <![CDATA[
			where a.status = 1
			order by a.parentId,a.order
		]]>
	</select>
	<select id="selectSystemUserIndexMenu" parameterType="java.util.HashMap" resultType="java.lang.String">
		<![CDATA[
			select ifnull(d.defaultPage,'/1/0') defaultPage
			from  OSS_SYSTEM_User d
			where d.loginId = #{loginId}
            limit 0,1
		]]>
	</select>
	<select id="selectSystemUserDefaultMenu" parameterType="java.util.HashMap" resultType="java.lang.String">
		<![CDATA[
			select defaultPage
			from OSS_SYSTEM_User d
			where d.loginId = #{loginId}
            limit 0,1
		]]>
	</select>
	<insert id="insertSystemRoleMenu" parameterType="java.util.HashMap">
		<![CDATA[
		INSERT INTO OSS_SYSTEM_Role_Menu(roleId,menuId)
		select #{roleId},#{menuId}
		]]>
	</insert>
	<delete id="deleteSystemRoleMenu" parameterType="java.util.HashMap">
		<![CDATA[
		delete from OSS_SYSTEM_Role_Menu where roleId = #{roleId}
		]]>
	</delete>
	
	<select id="selectSystemEngines" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[ 
			select a.*,(select b.dictName from oss_dict b where b.dictType='ENGINE_TYPE' and b.dictId=a.type) typeName,
			(select count(*) from oss_engine_regions c where c.oss_engine_id = a.id) regionCount
			from oss_engine a 
		]]>
		<where>
			<if test="type != null">
				and a.type = #{type} 
			</if>
			<if test="id != null">
				and a.id = #{id} 
			</if>
		</where>
		<![CDATA[ order by a.id desc ]]>
		
		<if test="beginIndex != null">
			limit #{beginIndex},#{perPage}
		</if>
	</select>
	<select id="selectSystemEnginesCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select count(*) totalSize 
			from oss_engine a 
		]]>
		<where>
			<if test="type != null">
				and a.type = #{type} 
			</if>
			<if test="id != null">
				and a.id = #{id} 
			</if>
		</where>
	</select>
	<insert id="insertSystemEngine" parameterType="java.util.HashMap">
		<![CDATA[
			insert into oss_engine (name,host,password,user,url,type,description,enabled,`group`,`port`) 
			values 
			(#{name},#{host},#{password},#{user},#{url},#{type},#{description},#{enabled},#{group},#{port}) 
		]]>
		<selectKey keyProperty="oss_engine_id" resultType="int" order="AFTER">
			select LAST_INSERT_ID()
		</selectKey>
	</insert>
	<update id="updateSystemEngine" parameterType="java.util.HashMap">
		<![CDATA[
			update oss_engine set id=#{id}
		]]>
		<if test="name != null">
			, name = #{name}
		</if>
		<if test="host != null">
			, host = #{host}
		</if>
		<if test="password != null">
			, password = #{password}
		</if>
		<if test="user != null">
			, user = #{user}
		</if>
		<if test="url != null">
			, url = #{url}
		</if>
		<if test="enabled != null">
			, enabled = #{enabled} 
		</if>
		<if test="description != null">
			, description = #{description}
		</if>
		<if test="type != null">
			, type = #{type}
		</if>
		<if test="port != null">
			, `port` = #{port}
		</if>
		<if test="group != null">
			, `group` = #{group}
		</if>
		<![CDATA[
			where id = #{id} 
		]]>
	</update>
	<delete id="deleteSystemEngine" parameterType="java.util.HashMap">
		<![CDATA[
			delete from oss_engine where id = #{id} 
		]]>
	</delete>
	
	<select id="selectSystemEngineRegionsCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select count(*) totalSize from oss_engine_regions a left join oss_engine b on a.oss_engine_id = b.id 
		]]>
		<where>
			<if test="id != null">
				and a.id = #{id} 
			</if>
			<if test="engineType != null">
				and b.type = #{engineType} 
			</if>
			<if test="regionName != null">
				and a.region_name = #{regionName} 
			</if>
			<if test="engineId != null">
				and a.oss_engine_id = #{engineId} 
			</if>
			<if test="availableStatus != null and availableStatus =='available'">
				and ((select count(1) num from resourcepool k where k.regionName = a.region_name) = 0 or a.region_name = #{poolRegionName})
			</if>
		</where>
	</select>
	
	<select id="selectSystemEngineRegions" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[ 
			select a.*,f.name adminNetworkName ,c.user,c.password,c.url,c.project, 
			(select b.dictName from oss_dict b where b.dictType='REGION_TYPE' and b.dictId=a.type) typeName 
			from oss_engine_regions a 
			left join oss_engine b on a.oss_engine_id = b.id 
			left join oss_engine_regions_properties c on a.id = c.regionId 
			left join (
				select e.*,b.uuid from rn_base e join rn_ext_vir_network b on e.id = b.nodeId and e.rnStatus = 'NORMAL'
			) f on a.adminNetworkUuid = f.uuid 
		]]>
		<where>
			<if test="id != null">
				and a.id = #{id} 
			</if>
			<if test="engineType != null">
				and b.type = #{engineType} 
			</if>
			<if test="regionName != null">
				and a.region_name = #{regionName} 
			</if>
			<if test="engineId != null">
				and a.oss_engine_id = #{engineId} 
			</if>
			<if test="availableStatus != null and availableStatus =='available'">
				and ((select count(1) num from resourcepool k where k.regionName = a.region_name) = 0 or a.region_name = #{poolRegionName})
			</if>
		</where>
		<![CDATA[ order by a.id desc ]]>
		
		<if test="beginIndex != null">
			limit #{beginIndex},#{perPage}
		</if>
	</select>
	
	<insert id="insertSystemEngineRegion" parameterType="java.util.HashMap">
		<![CDATA[
			insert into oss_engine_regions (region_name,type,oss_engine_id,adminNetworkUuid) 
			values 
			(#{region_name},#{type},#{oss_engine_id},#{adminNetworkUuid}) 
		]]>
		<selectKey keyProperty="regionId" resultType="int" order="AFTER">
			select LAST_INSERT_ID()
		</selectKey>
	</insert>
	<update id="updateSystemEngineRegion" parameterType="java.util.HashMap">
		<![CDATA[
			update oss_engine_regions 
			set id=#{id} 
		]]>
		<if test="region_name != null">
			,region_name=#{region_name} 
		</if>
		<if test="type != null">
			,type=#{type} 
		</if>
		<if test="adminNetworkUuid != null">
			,adminNetworkUuid=#{adminNetworkUuid} 
		</if>
		<![CDATA[
			where id=#{id} 
		]]>
	</update>
	<update id="updateSystemEngineRegionProperties" parameterType="java.util.HashMap">
		<![CDATA[
			update oss_engine_regions_properties 
			set regionId=#{id} 
		]]>
		<if test="url != null">
			,url=#{url} 
		</if>
		<if test="user != null">
			,user=#{user} 
		</if>
		<if test="password != null">
			,password=#{password} 
		</if>
		<if test="project != null">
			,project=#{project} 
		</if>
		<![CDATA[
			where regionId=#{id} 
		]]>
	</update>
	<delete id="deleteSystemEngineRegion" parameterType="java.util.HashMap">
		<![CDATA[
		delete from oss_engine_regions where id = #{id} 
		]]>
	</delete>
	<insert id="insertSystemEngineRegionProperties" parameterType="java.util.HashMap">
		<![CDATA[
			insert into oss_engine_regions_properties(regionId,url,user,password,project)
			values (#{regionId},#{url},#{user},#{password},#{project})
		]]>
	</insert>
	
	<select id="selectSystemProjects" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select d.account_id name,d.project_id value,if(#{loginId}=d.account_id,'1','0') selected
			from OSS_ACCOUNT_PROJECT_MAPPING d
		]]>
	</select>

	<select id="selectSystemDepartmentsCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select count(*) totalSize
			from oss_system_department d where d.isDisplay = 1 
		]]>
		<if test="id != null">
			and id = #{departmentId}
		</if>
		<if test="refGroupId != null">
			and refGroupId=#{refGroupId} 
		</if>
		<if test="countSize &lt; 1000 and loginId != null">
			and d.refGroupId in (select t.refGroupId from OSS_SYSTEM_Department t,oss_system_user k where k.loginId = #{loginId} and k.department = t.id)
		</if>
		<if test="countSize &lt; 100 and loginId != null">
			and d.id in (select k.department from oss_system_user k where k.loginId = #{loginId})
		</if>
	</select>
	<select id="selectSystemDepartments" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select d.*,e.name groupName,ifnull(f.countSize,0) usedSize
			from oss_system_department d
				left join (select count(*) countSize,department from oss_system_user group by department) f on f.department = d.id 
				left join oss_system_department_group e on d.refGroupId=e.id 
			where d.isDisplay = 1 
		]]>
		<if test="departmentId != null">
			and d.id = #{departmentId}
		</if>
		<if test="refGroupId != null">
			and d.refGroupId=#{refGroupId} 
		</if>
		<if test="countSize &lt; 1000 and loginId != null">
			and d.refGroupId in (select t.refGroupId from oss_system_department t,oss_system_user k where k.loginId = #{loginId} and k.department = t.id)
		</if>
		<if test="countSize &lt; 100 and loginId != null">
			and d.id in (select k.department from oss_system_user k where k.loginId = #{loginId})
		</if>
		<if test="beginIndex != null">
			limit #{beginIndex},#{perPage}
		</if>
	</select>
	<insert id="insertSystemDepartment" parameterType="java.util.HashMap">
		<![CDATA[
		insert into oss_system_department(name,description,deptCode,refGroupId)
		values(#{name},#{description},#{deptCode},#{refGroupId})
		]]>
	</insert>
	<update id="updateSystemDepartment" parameterType="java.util.HashMap">
		<![CDATA[
		update oss_system_department
		set id=#{departmentId}
		]]>
		<if test="deptCode != null">
			, deptCode = #{deptCode}
		</if>
		<if test="name != null">
			, name = #{name}
		</if>
		<if test="description != null">
			, description = #{description}
		</if>
		<if test="refGroupId != null">
			, refGroupId = #{refGroupId}
		</if>
		<![CDATA[
		where id = #{departmentId}
		]]>
	</update>
	<delete id="deleteSystemDepartment" parameterType="java.util.HashMap">
		<![CDATA[
		delete from OSS_SYSTEM_Department where id = #{departmentId}
		]]>
	</delete>
	<insert id="insertSystemDepartmentGroup" parameterType="java.util.HashMap">
		<![CDATA[
		insert into oss_system_department_group(name,projectId,remark,createTs,createUser)
		values(#{name},#{projectId},#{remark},#{createTs},#{createUser})
		]]>
		<selectKey keyProperty="groupId" resultType="int" order="AFTER">
			select LAST_INSERT_ID()
		</selectKey>
	</insert>
	<update id="updateSystemDepartmentGroup" parameterType="java.util.HashMap">
		<![CDATA[
		update oss_system_department_group
		set id=#{id}
		]]>
		<if test="projectId != null">
			, projectId = #{projectId}
		</if>
		<if test="remark != null">
			, remark = #{remark}
		</if>
		<if test="name != null">
			, name = #{name}
		</if>
		<![CDATA[
		where id = #{id}
		]]>
	</update>
	<delete id="deleteSystemDepartmentGroup" parameterType="java.util.HashMap">
		<![CDATA[
			delete from oss_system_department_group where id = #{id}
		]]>
	</delete>
	<select id="selectSystemDepartmentGroupsCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select count(*) totalSize
			from oss_system_department_group d
		]]>
		<where>
			<if test="id != null">
				and id = #{id}
			</if>
			<if test="countSize &lt; 1000 and loginId != null">
				and d.id in (select t.refGroupId from OSS_SYSTEM_Department t,oss_system_user k where k.loginId = #{loginId} and k.department = t.id)
			</if>
		</where>
	</select>
	<select id="selectSystemDepartmentGroups" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select d.*,ifnull(e.countSize,0) deptCount ,
			ifnull(a.countSize,0) + ifnull(b.countSize,0) + ifnull(c.countSize,0) + ifnull(e.countSize,0) + ifnull(h.rpcount,0) + ifnull(f.dccount,0) usedSize ,
			ifnull(h.rpcount,0) rpcount,
			ifnull(f.dccount,0) dccount
			from oss_system_department_group d 
				left join (select count(*) countSize,projectId from rn_ext_vir_instance group by projectId) a on a.projectId = d.projectId
				left join (select count(*) countSize,projectId from rn_ext_vir_network group by projectId) b on b.projectId = d.projectId
				left join (select count(*) countSize,projectId from rn_ext_vir_volumes group by projectId) c on c.projectId = d.projectId
				left join (select count(*) countSize,refGroupId from oss_system_department where isDisplay=1 group by refGroupId) e on e.refGroupId = d.id
				left join (select count(*) rpcount,groupId from resourcepooldepartment 
				]]>
				<where>
					<if test="poolId != null">
						poolId = #{poolId}
					</if>
				</where>
				<![CDATA[
				group by groupId) h on h.groupId=d.id  
				left join (select count(*) dccount,groupId from resourcedatacenterdepartment 
				]]>
				<where>
					<if test="dataCenterId != null">
						dataCenterId = #{dataCenterId}
					</if>
				</where>
				<![CDATA[
				group by groupId) f on f.groupId=d.id  
		]]>
		<where>
			<![CDATA[
				and isDisplay = 1 
			]]>
			<if test="id != null">
				and id = #{id} 
			</if>
			<if test="countSize &lt; 1000 and loginId != null">
				and d.id in (select t.refGroupId from oss_system_department t,oss_system_user k where k.loginId = #{loginId} and k.department = t.id)
			</if>
		</where>
		<if test="beginIndex != null">
			limit #{beginIndex},#{perPage}
		</if>
	</select>
	<select id="selectSystemUserDepartmentGroups" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
		select * from (
			select 
				a.userId,a.departmentGroupId,b.name departmentGroupName,b.projectId ,0 used 
				from oss_system_user_department_group a 
				join oss_system_department_group b on a.departmentGroupId = b.id  
				join oss_system_user c on a.userId = c.id 
		]]>
		<where>
			<if test="userId != null">
				and c.id = #{userId}
			</if>
			<if test="loginId != null">
				and c.loginId = #{loginId}
			</if>
		</where>
		<![CDATA[
			union all 
			select 
				a.id,b.refGroupId,c.name departmentGroupName,c.projectId,1 used 
				from oss_system_user a 
				join oss_system_department b on a.department = b.id 
				join oss_system_department_group c on b.refGroupId = c.id 
		]]>
		<where>
			<if test="userId != null">
				and a.id = #{userId}
			</if>
			<if test="loginId != null">
				and a.loginId = #{loginId}
			</if>
		</where>
		<![CDATA[
		) a group by a.departmentGroupId  order by a.used desc 
		]]>
	</select>
	<delete id="deleteSystemUserDepartmentGroup" parameterType="java.util.HashMap">
		<![CDATA[
			delete from oss_system_user_department_group where userId = #{userId} and departmentGroupId in (#{departmentGroupIds});
		]]>
	</delete>
	<insert id="insertSystemUserDepartmentGroup" parameterType="java.util.HashMap">
		<![CDATA[
		insert into oss_system_user_department_group(userId,departmentGroupId)
		values(#{userId},#{departmentGroupId})
		]]>
	</insert>
	<insert id="insertSystemUserDepartmentRelation" parameterType="java.util.HashMap">
		<![CDATA[
			insert into oss_system_user_department_relation(loginId,departmentId)
			values
		]]>
		<foreach collection="departmentIds" index="index" item="departmentId" open=" " separator="," close=" ">
   			(#{loginId},#{departmentId})
  		</foreach>
	</insert>
	<delete id="deleteSystemUserDepartmentRelation" parameterType="java.util.HashMap">
		<![CDATA[
			delete from oss_system_user_department_relation where loginId = #{loginId}
		]]>
		<if test="departmentId != null">
			and departmentId = #{departmentId}
		</if>
	</delete>
	<select id="selectSystemDepartmentUsers" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.* from oss_system_user a 
			join oss_system_user_department_relation b on a.loginId = b.loginId 
			where b.departmentId = #{departmentId}
		]]>
	</select>
	
	<select id="selectSystemDepartmentGroupResourcePools" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select b.*,
				(select dictName FROM OSS_DICT where dictType = 'RESOURCE_TYPE' and dictId = b.poolType) poolTypeName ,
				 case b.poolType  
				  	when 'BARE' then 'RESOURCE_POOL_COMPUTE_TYPE'
				  	when 'COMPUTE' then 'RESOURCE_POOL_COMPUTE_TYPE' 
				  	when 'STORAGE' then 'RESOURCE_POOL_STORAGE_TYPE' 
				  	when 'NETWORK' then 'RESOURCE_POOL_NETWORK_TYPE' 
				  	when 'MANAGE' then 'RESOURCE_POOL_COMPUTE_TYPE' 
					else  'RESOURCE_POOL_OTHER_TYPE' end typeCode ,
				(select dictName FROM OSS_DICT where dictType = typeCode and dictId = b.type) typeName,a.groupId,
				ifnull(e.status,0) selectedStatus   
				from resourcepool b left join resourcepooldepartment a on a.poolId=b.id  
		]]>
		<if test="groupId != null">
			and a.groupId = #{groupId} 
		</if>
		<if test="loginId != null">
			left join (select 1 status,poolId from resourcepoolusers where loginId=#{loginId} ) e on e.poolId=b.id  
		</if>
		<if test="groupId != null">
			left join (select 1 status,poolId from resourcepooldepartment where groupId=#{groupId} ) e on e.poolId=b.id  
		</if>
		<where>
			<![CDATA[ 
				and b.status = 'NORMAL' 
			]]>
			<!-- 
			<if test="groupId != null">
				and a.groupId=#{groupId} 
			</if>
			 -->
			<if test="poolType != null">
				and b.poolType=#{poolType} 
			</if>
			<if test="loginId != null">
				and a.groupId in (select d.refGroupId from oss_system_user c left join oss_system_department d on c.department=d.id where c.loginId=#{loginId} )
			</if>
			<if test="poolTypeList == true">
				and b.poolType in ('BARE','MANAGE','COMPUTE') 
			</if>
		</where>
	</select>
	<select id="selectSystemDepartmentGroupDataCenters" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select b.*,a.groupId,ifnull(e.status,0) status from resourcedatacenter b left join resourcedatacenterdepartment a on a.dataCenterId=b.id  
		]]>
		<if test="groupId != null">
			and a.groupId=#{groupId} 
		</if>
		<if test="loginId != null">
			left join (select 1 status,dataCenterId from resourcedatacenterusers where loginId=#{loginId} ) e on e.dataCenterId=b.id 
		</if>
		<if test="groupId != null">
			left join (select 1 status,dataCenterId from resourcedatacenterdepartment where groupId=#{groupId} ) e on e.dataCenterId=b.id 
		</if>	
		<where>
			<!-- 
			<if test="groupId != null">
				and a.groupId=#{groupId} 
			</if>
			 -->
			<if test="datacenterGroupId != null">
				and b.groupId=#{datacenterGroupId} 
			</if>
			<if test="loginId != null">
				and a.groupId in (select d.refGroupId from oss_system_user c left join oss_system_department d on c.department=d.id where c.loginId=#{loginId} )
			</if>
		</where>
	</select>
	<select id="selectSystemUserResourcePools" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
		select b.*,
				(select dictName FROM OSS_DICT where dictType = 'RESOURCE_TYPE' and dictId = b.poolType) poolTypeName ,
				 case b.poolType  
				  	when 'BARE' then 'RESOURCE_POOL_COMPUTE_TYPE'
				  	when 'COMPUTE' then 'RESOURCE_POOL_COMPUTE_TYPE' 
				  	when 'STORAGE' then 'RESOURCE_POOL_STORAGE_TYPE' 
				  	when 'NETWORK' then 'RESOURCE_POOL_NETWORK_TYPE' 
				  	when 'MANAGE' then 'RESOURCE_POOL_COMPUTE_TYPE' 
					else  'RESOURCE_POOL_OTHER_TYPE' end typeCode ,
				(select dictName FROM OSS_DICT where dictType = typeCode and dictId = b.type) typeName,a.loginId 
		from resourcepoolusers a join resourcepool b on a.poolId=b.id  			
		]]>
		<where>
			<if test="loginId != null">
				and a.loginId=#{loginId} 
			</if>
			<if test="poolType != null">
				and b.poolType=#{poolType} 
			</if>
		</where>
	</select>
	<select id="selectSystemUserDataCenters" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select b.*,a.loginId from resourcedatacenterusers a join resourcedatacenter b on a.dataCenterId=b.id  
		]]>
		<where>
			<if test="loginId != null">
				and  a.loginId=#{loginId} 
			</if>
			<if test="datacenterGroupId != null">
				and b.groupId=#{datacenterGroupId} 
			</if>
		</where>
	</select>
	<select id="selectSystemUserData" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.* from oss_system_user_data a 
		]]>
		<where>
			<if test="loginId != null">
				and a.userId=#{loginId} 
			</if>
			<if test="type != null">
				and a.type=#{type} 
			</if>
		</where>
		<if test="groupBy != null and groupBy =='true'">
			group by a.type 
		</if>
		<![CDATA[
			order by a.resourceId desc 
		]]>
	</select>
	<select id="selectSystemUserDataMin" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select min(resourceId) resourceId from oss_system_user_data a 
		]]>
		<where>
			<if test="loginId != null">
				and a.userId=#{loginId} 
			</if>
			<if test="type != null">
				and a.type=#{type} 
			</if>
		</where>
	</select>
	<insert id="insertSystemUserData" parameterType="java.util.HashMap">
		<![CDATA[
			insert into oss_system_user_data(userId,resourceId,type)
			values 
		]]>
		<foreach collection="dataList" index="index" item="data" open=" " separator="," close=" ">
   			(#{loginId},#{data.resourceId},#{data.type})
  		</foreach>
	</insert>
	<delete id="deleteSystemUserData" parameterType="java.util.HashMap">
		<![CDATA[
			delete from oss_system_user_data where userId = #{loginId} 
		]]>
		<if test="resourceId != null">
			and resourceId = #{resourceId} 
		</if>
		<if test="type != null">
			and type = #{type} 
		</if>
	</delete>
	
	<select id="selectSystemUserDetails" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select d.name,d.email,d.position,d.phone,k.name departmentName
			from OSS_SYSTEM_User d ,
				OSS_SYSTEM_Department k
			where k.id = d.department
		]]>
			<if test="userId != null">
				and id = #{userId}
			</if>
			<if test="loginId != null">
				and loginId = #{loginId}
			</if>
			<if test="password != null">
				and password = #{password}
			</if>
			<if test="filterLoginIds != null">
				and concat(',',#{filterLoginIds},',') not like concat('%,',loginId,',%')
			</if>
			<if test="status != null">
				and status = #{status}
			</if>
		<if test="beginIndex != null">
			limit #{beginIndex},#{perPage}
		</if>
	</select>
	
	<select id="selectSystemUsersCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select count(*) totalSize
			from OSS_SYSTEM_User d 
			join OSS_SYSTEM_Department e on d.department=e.id 
		]]>
		<where>
			<if test="isDisplay != null">
				and d.isDisplay = #{isDisplay}
			</if>
			<if test="id != null">
				and d.id = #{userId}
			</if>
			<if test="groupId != null">
				and e.refGroupId = #{groupId} 
			</if>
			<if test="loginId != null">
				and loginId = #{loginId}
			</if>
			<if test="password != null">
				and password = #{password}
			</if>
			<if test="filterLoginIds != null">
				and concat(',',#{filterLoginIds},',') not like concat('%,',loginId,',%')
			</if>
			<if test="status != null">
				and d.status = #{status}
			</if>
			<if test="receiveSms != null">
				and d.receiveSms = #{receiveSms} and d.phone is not null and d.phone != ''
			</if>
			<if test="countSize &lt; 1000 and sessionLoginId != null">
				and d.department in (select n.id
									from OSS_SYSTEM_Department t,
										oss_system_user k,
										OSS_SYSTEM_Department_group m ,
										OSS_SYSTEM_Department n
									where k.loginId = #{sessionLoginId} 
										and k.department = t.id 
										and m.id = t.refGroupId
										and n.refGroupId = m.id)
			</if>
			<if test="countSize &lt; 100 and sessionLoginId != null">
				and d.department in (select k.department from oss_system_user k where k.loginId = #{sessionLoginId})
			</if>
			<if test="department != null">
				and d.department in (#{department})
			</if>
		</where>
	</select>
	
	<select id="selectSystemUserToken" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
		select * from oss_system_user_token
		]]>
		<where>
			<if test="token != null">
				and token = #{token}
			</if>
			<if test="status != null">
				and status = #{status}
			</if>
			<if test="loginId != null">
				and loginId = #{loginId}
			</if>
		</where>
	</select>
	<insert id="insertSystemUserToken" parameterType="java.util.HashMap">
		<![CDATA[
		INSERT INTO oss_system_user_token(loginId,token,expire,status)
		values(#{loginId},#{token},#{expire},#{status})
		]]>
	</insert>
	<update id="updateSystemUserToken" parameterType="java.util.HashMap">
		<![CDATA[
		update oss_system_user_token
		set loginId=#{loginId}
		]]>
		<if test="status != null">
			, status = #{status}
		</if>
	</update>
	
	<select id="selectSystemUsers" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select d.*,e.name departmentName,e.refGroupId groupId,e.projectId,
			(select group_concat(r.`name`) from oss_system_role r join oss_system_user_role n on r.id = n.roleId where n.userId = d.id) roles,
			(select group_concat(r.type) from oss_system_role r join oss_system_user_role n on r.id = n.roleId where n.userId = d.id) roleTypes 
			from OSS_SYSTEM_User d 
	      	join OSS_SYSTEM_Department e on d.department=e.id 
		]]>
		<where>
			<if test="isDisplay != null">
				and d.isDisplay = #{isDisplay}
			</if>
			<if test="op != null">
				and d.op = #{op}
			</if>
			<if test="userId != null">
				and d.id = #{userId}
			</if>
			<if test="groupId != null">
				and e.refGroupId = #{groupId}
			</if>
			<if test="loginId != null">
				and loginId = #{loginId}
			</if>
			<if test="password != null">
				and password = #{password}
			</if>
			<if test="filterLoginIds != null">
				and concat(',',#{filterLoginIds},',') not like concat('%,',loginId,',%')
			</if>
			<if test="countSize &lt; 1000 and sessionLoginId != null">
				and d.department in (select n.id
									from OSS_SYSTEM_Department t,
										oss_system_user k,
										OSS_SYSTEM_Department_group m ,
										OSS_SYSTEM_Department n
									where k.loginId = #{sessionLoginId} 
										and k.department = t.id 
										and m.id = t.refGroupId
										and n.refGroupId = m.id)
			</if>
			<if test="countSize &lt; 100 and sessionLoginId != null">
				and d.department in (select k.department from oss_system_user k where k.loginId = #{sessionLoginId})
			</if>
			<if test="status != null">
				and d.status = #{status}
			</if>
			<if test="receiveSms != null">
				and d.receiveSms = #{receiveSms} and d.phone is not null and d.phone != ''
			</if>
			<if test="department != null">
				and concat(',',#{department},',') like concat('%,',d.department,',%')
			</if>
		</where>
		<if test="beginIndex != null">
			limit #{beginIndex},#{perPage}
		</if>
	</select>
	<insert id="insertSystemUser" parameterType="java.util.HashMap">
		<![CDATA[
		INSERT INTO OSS_SYSTEM_User(name,loginId,password,email,phone,department,position,moreinfo,op,virtualUuid,virtualPassword)
		values(#{name},#{loginId},#{password},#{email},#{phone},#{department},#{position},#{moreinfo},#{op},#{virtualUuid},#{virtualPassword})
		]]>
		<selectKey keyProperty="userId" resultType="int" order="AFTER">
			select LAST_INSERT_ID()
		</selectKey>
	</insert>
	<update id="updateSystemUser" parameterType="java.util.HashMap">
		<![CDATA[
		update OSS_SYSTEM_User
		set id=#{userId}
		]]>
		<if test="password != null">
			, password = #{password}
		</if>
		<if test="email != null">
			, email = #{email}
		</if>
		<if test="status != null">
			, status = #{status}
		</if>
		<if test="name != null">
			, name = #{name}
		</if>
		<if test="phone != null">
			, phone = #{phone}
		</if>
		<if test="department != null">
			, department = #{department}
		</if>
		<if test="position != null">
			, position = #{position}
		</if>
		<if test="moreinfo != null">
			, moreinfo = #{moreinfo}
		</if>
		<![CDATA[
		where id = #{userId}
		]]>
		<if test="op != null">
			and op = #{op}
		</if>
	</update>
	<update id="updateSystemUserByLoginId" parameterType="java.util.HashMap">
		<![CDATA[
		update OSS_SYSTEM_User
		set loginId=#{loginId}
		]]>
		<if test="password != null">
			, password = #{password}
		</if>
		<if test="email != null">
			, email = #{email}
		</if>
		<if test="status != null">
			, status = #{status}
		</if>
		<if test="name != null">
			, name = #{name}
		</if>
		<if test="phone != null">
			, phone = #{phone}
		</if>
		<if test="department != null">
			, department = #{department}
		</if>
		<if test="position != null">
			, position = #{position}
		</if>
		<if test="moreinfo != null">
			, moreinfo = #{moreinfo}
		</if>
		<![CDATA[
		where loginId = #{loginId}
		]]>
		<if test="op != null">
			and op = #{op}
		</if>
	</update>
	<delete id="deleteSystemUser" parameterType="java.util.HashMap">
		<![CDATA[
		delete from OSS_SYSTEM_User where loginId = #{loginId}
		]]>
		<if test="op != null">
			and op = #{op}
		</if>
	</delete>

	<select id="selectSystemUserRoles" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select d.*,(select name from OSS_SYSTEM_Role a where a.id = d.roleId) roleName,(select type from OSS_SYSTEM_Role a where a.id = d.roleId) roleType
			from OSS_SYSTEM_User_Role d
		]]>
		<where>
			<if test="userId != null">
				and userId = #{userId}
			</if>
		</where>
	</select>
	<insert id="insertSystemUserRole" parameterType="java.util.HashMap">
		<![CDATA[
		INSERT INTO OSS_SYSTEM_User_Role(userId,roleId)
		values( #{userId},#{roleId})
		]]>
	</insert>
	<delete id="deleteSystemUserRole" parameterType="java.util.HashMap">
		<![CDATA[
		delete from OSS_SYSTEM_User_Role where userId = #{userId}
		]]>
	</delete>

	<select id="selectSystemUserAdminRole" parameterType="java.util.HashMap" resultType="java.lang.Integer">
		<![CDATA[
			SELECT max(type) totalSize 
			FROM OSS_SYSTEM_User_Role a,
				OSS_SYSTEM_User b,
				OSS_SYSTEM_Role c
			where b.id = a.userId
			    and c.id = a.roleId
		]]>
		<if test="loginId != null">
			and b.loginId = #{loginId}
		</if>
	</select>
	<select id="selectAvailabilityZones" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.* from rp_vir_host_aggregates a where a.deleted = 0 and a.region = #{regionName} 
		]]>
	</select>
	<select id="selectSystemUserAvailabilityZones" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.*,b.name,b.availability_zone 
			from oss_system_user_availability_zone a 
			join rp_vir_host_aggregates b on a.hostAggregateId = b.id and a.region = b.region 
			left join oss_system_user c on a.userId = c.id 
			where b.deleted = 0 
		]]>
		<if test="userId != null">
			and a.userId = #{userId}
		</if>
		<if test="loginId != null">
			and concat(',',#{loginId},',') like concat('%,',c.loginId,',%')  
		</if>
	</select>
	<insert id="insertSystemUserAvailabilityZone" parameterType="java.util.HashMap">
		<![CDATA[
		insert into oss_system_user_availability_zone (userId,hostAggregateId,region)
		values 
		(#{userId},#{hostAggregateId},#{region})
		]]>
	</insert>
	<delete id="deleteSystemUserAvailabilityZone" parameterType="java.util.HashMap">
		<![CDATA[
		delete from oss_system_user_availability_zone where userId = #{userId}
		]]>
	</delete>
	
	<select id="selectTimerTaskDelayCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select count(*) totalSize from OSS_TimerTask
		]]>
	</select>
	<select id="selectTimerTaskDelay" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select * from OSS_TimerTask
		]]>
	</select>
	<insert id="insertUploadFile" parameterType="java.util.HashMap">
		<![CDATA[
		INSERT INTO OSS_File(filePath,fileName,fileAbsPath,uploadUser)
		values( #{filePath},#{fileName},#{fileAbsPath},#{uploadUser})
		]]>
	</insert>
	<select id="selectUploadFiles" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select * from OSS_File where concat(',',#{filePath},',') like concat('%,',REPLACE(filePath,'\\','-'),',%')
		]]>
	</select>
	
	<select id="selectAppScriptFiles" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.*,c.fileName,c.uploadDate from operationservicetemplate_source a 
			join operationservicetemplate b on a.refTemplateId = b.id 
   	 		join oss_file c on a.sourceUrl = c.filePath 
    		where b.type = 'APPSCRIPT'
		]]>
	</select>
	
	<!-- host service -->
	<select id="selectHostServices" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			SELECT a.id mapperId,c.id,c.nodeType,b.key,c.name,c.hostName,b.name,b.commandType,b.start,b.stop,b.query,a.startParam,a.stopParam,a.queryParam,a.serviceStatus
			FROM ResourceServiceNodeMap a,
				ResourceService b,
			    (select k.id,k.name,k.hostName,'PHYSICAL' nodeType from ResourceNode k
			    union all
			    select m.id,m.name,m.host,'VIRTUAL' nodeType from ResourceNodeVirtual m) c
			where a.serviceId = b.id
				and a.nodeId = c.id
				and a.nodeType = c.nodeType
		]]>
		<if test="nodeId != null">
			and c.id = #{nodeId}
		</if>
		<if test="nodeType != null">
			and c.nodeType = #{nodeType}
		</if>
		<if test="serviceKey != null">
			and b.key = #{serviceKey}
		</if>
	</select>
	
	<update id="updateHostService" parameterType="java.util.HashMap">
		<![CDATA[
		update ResourceServiceNodeMap set serviceStatus = #{serviceStatus} where id = #{mapperId}
		]]>
	</update>
	
	<!-- deploy service -->
	<select id="selectDeployServiceCatalogs" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
		select a.*,ifnull(b.position,9999) positionOrder
		from DeployServiceCatalog a
			left join (select * from DeployServicePosition where type = -1) b on a.id = b.id
		order by positionOrder
		]]>
	</select>
	
	<insert id="insertDeployServiceCatalog" parameterType="java.util.HashMap">
		<![CDATA[
		insert into DeployServiceCatalog(name,description,createUser)
		values(#{name},#{description},#{loginId})
		]]>
	</insert>
	
	<update id="updateDeployServiceCatalog" parameterType="java.util.HashMap">
		<![CDATA[
		update DeployServiceCatalog
		set id = #{id}
		]]>
		<if test="description != null">
			, description = #{description}
		</if>
		<if test="name != null">
			, name = #{name}
		</if>
		<![CDATA[
		where id = #{id}
		]]>
	</update>
	
	<delete id="deleteDeployServiceCatalog" parameterType="java.util.HashMap">
		<![CDATA[
		delete from DeployServiceCatalog where id = #{catalogId}
		]]>
	</delete>
	
	<select id="selectDeployServiceTemplatesCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
		select count(*) totalSize
		from DeployServiceTemplate a
		 left join deployservicecatalog c on a.catalogId = c.id 
         left join DeployServicePosition b on a.catalogId = b.type and a.id = b.id 
         join deployservicetemplateproperties d on a.id = d.id 
		]]>
		<where>
			<if test="loginId != null">
				and (
					a.id in (select resourceId from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='DEPLOY')  or 
					0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='DEPLOY') or 
					(0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='DEPLOY') and false)
				)
			</if>
			<if test="key != null">
				<![CDATA[ and a.name like concat('%',#{key},'%') ]]>
			</if>
			<if test="regionName != null">
				and d.regionName = #{regionName}
			</if>
			<if test="catalogId != null">
				and catalogId = #{catalogId}
			</if>
			<if test="templateId != null">
				and a.id = #{templateId}
			</if>
			<if test="osType != null">
				and d.osType = #{osType}
			</if>
			<if test="osVersion != null">
				and d.osVersion = #{osVersion}
			</if>
			<if test="middleWare != null">
				and d.middleWare = #{middleWare}
			</if>
			<if test="middleWareVersion != null">
				and d.middleWareVersion = #{middleWareVersion}
			</if>
			<if test="middleWareConfig != null">
				and d.middleWareConfig = #{middleWareConfig}
			</if>
			<if test="ipProperty != null">
				and d.ipProperty = #{ipProperty}
			</if>
			<if test="storageProperty != null">
				and d.storageProperty = #{storageProperty}
			</if>
		</where>
	</select>
	<select id="selectDeployServiceTemplates" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
		select a.*,c.name catalogName,
			d.*,
			(select fileName from OSS_File where filePath = a.sourceUrl) fileName,
			(select fileAbsPath from OSS_File where filePath = a.sourceUrl) fileAbsPath,
            ifnull(b.position,9999) positionOrder
		from DeployServiceTemplate a
		 left join deployservicecatalog c on a.catalogId = c.id 
         left join DeployServicePosition b on a.catalogId = b.type and a.id = b.id 
         join deployservicetemplateproperties d on a.id = d.id 
		]]>
		<where>
			<if test="loginId != null">
				and (
					a.id in (select resourceId from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='DEPLOY')  or 
					0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='DEPLOY') or 
					(0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='DEPLOY') and false)
				)
			</if>
			<if test="key != null">
				<![CDATA[ and a.name like concat('%',#{key},'%') ]]>
			</if>
			<if test="regionName != null">
				and d.regionName = #{regionName}
			</if>
			<if test="catalogId != null">
				and catalogId = #{catalogId}
			</if>
			<if test="templateId != null">
				and a.id = #{templateId}
			</if>
			<if test="osType != null">
				and d.osType = #{osType}
			</if>
			<if test="osVersion != null">
				and d.osVersion = #{osVersion}
			</if>
			<if test="middleWare != null">
				and d.middleWare = #{middleWare}
			</if>
			<if test="middleWareVersion != null">
				and d.middleWareVersion = #{middleWareVersion}
			</if>
			<if test="middleWareConfig != null">
				and d.middleWareConfig = #{middleWareConfig}
			</if>
			<if test="ipProperty != null">
				and d.ipProperty = #{ipProperty}
			</if>
			<if test="storageProperty != null">
				and d.storageProperty = #{storageProperty}
			</if>
		</where>
		order by positionOrder
		
		<if test="beginIndex != null">
			limit #{beginIndex},#{perPage}
		</if>
	</select>
	
	<insert id="insertDeployServiceTemplate" parameterType="java.util.HashMap">
		<![CDATA[
		insert into DeployServiceTemplate(name,description,icon,sourceUrl,catalogId,createUser)
		values(#{name},#{description},#{icon},#{sourceUrl},#{catalogId},#{loginId})
		]]>
		<selectKey keyProperty="id" resultType="int" order="AFTER">
			select LAST_INSERT_ID()
		</selectKey>
	</insert>
	<insert id="insertDeployServiceTemplateProperties" parameterType="java.util.HashMap">
		<![CDATA[
		insert into deployservicetemplateproperties 
		(id,regionName,osType,osVersion,middleWare,middleWareVersion,middleWareConfig,ipProperty,storageProperty,funcDesc)
		values 
		(#{id},#{regionName},#{osType},#{osVersion},#{middleWare},#{middleWareVersion},#{middleWareConfig},#{ipProperty},#{storageProperty},#{funcDesc})
		]]>
	</insert>
	<select id="selectDeployServiceTemplateProperties" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select distinct ${propKey} propKey,#{propKey} propValue 
			from deployservicetemplateproperties a 
		]]>
		<where>
			<if test="osType != null">
				and osType=#{osType} 
			</if>
			<if test="osVersion != null">
				and osVersion=#{osVersion} 
			</if>
			<if test="middleWare != null">
				and middleWare=#{middleWare} 
			</if>
			<if test="middleWareVersion != null">
				and middleWareVersion=#{middleWareVersion} 
			</if>
			<if test="middleWareConfig != null">
				and middleWareConfig=#{middleWareConfig} 
			</if>
			<if test="ipProperty != null">
				and ipProperty=#{ipProperty} 
			</if>
			<if test="storageProperty != null">
				and storageProperty=#{storageProperty} 
			</if>
		</where>
		
	</select>
	
	<update id="updateDeployServiceTemplate" parameterType="java.util.HashMap">
		<![CDATA[
		update DeployServiceTemplate
		set id = #{id}
		]]>
		<if test="description != null">
			, description = #{description}
		</if>
		<if test="name != null">
			, name = #{name}
		</if>
		<if test="icon != null">
			, icon = #{icon}
		</if>
		<if test="sourceUrl != null">
			, sourceUrl = #{sourceUrl}
		</if>
		<if test="catalogId != null">
			, catalogId = #{catalogId}
		</if>
		<![CDATA[
		where id = #{id}
		]]>
	</update>
	<update id="updateDeployServiceTemplateProperties" parameterType="java.util.HashMap">
		<![CDATA[
		update deployservicetemplateproperties
		set id = #{id}
		]]>
		<if test="regionName != null">
			, regionName = #{regionName}
		</if>
		<if test="osType != null">
			, osType = #{osType}
		</if>
		<if test="osVersion != null">
			, osVersion = #{osVersion}
		</if>
		<if test="middleWare != null">
			, middleWare = #{middleWare}
		</if>
		<if test="middleWareVersion != null">
			, middleWareVersion = #{middleWareVersion}
		</if>
		<if test="middleWareConfig != null">
			, middleWareConfig = #{middleWareConfig}
		</if>
		<if test="ipProperty != null">
			, ipProperty = #{ipProperty}
		</if>
		<if test="storageProperty != null">
			, storageProperty = #{storageProperty}
		</if>
		<if test="funcDesc != null">
			, funcDesc = #{funcDesc}
		</if>
		<![CDATA[
		where id = #{id}
		]]>
	</update>
	
	<delete id="deleteDeployServiceTemplate" parameterType="java.util.HashMap">
		<![CDATA[
		delete from DeployServiceTemplate where id = #{templateId}
		]]>
	</delete>
	
	<delete id="deleteDeployServicePositions" parameterType="java.util.HashMap">
		<![CDATA[
		delete from DeployServicePosition
		]]>
	</delete>
	
	<insert id="insertDeployServicePosition" parameterType="java.util.HashMap">
		<![CDATA[
		insert into DeployServicePosition 
		${valueSqlString}
		]]>
	</insert>
	
	
	
	<!-- operation service -->
	<select id="selectOperationServiceCatalogs" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
		select a.*,ifnull(b.position,9999) positionOrder
		from operation_service_catalog a
			left join (select * from operation_service_position where type = -1) b on a.id = b.id
		order by positionOrder
		]]>
	</select>
	
	<insert id="insertOperationServiceCatalog" parameterType="java.util.HashMap">
		<![CDATA[
		insert into operation_service_catalog(name,description,createUser)
		values(#{name},#{description},#{loginId})
		]]>
	</insert>
	
	<update id="updateOperationServiceCatalog" parameterType="java.util.HashMap">
		<![CDATA[
		update operation_service_catalog
		set id = #{id}
		]]>
		<if test="description != null">
			, description = #{description}
		</if>
		<if test="name != null">
			, name = #{name}
		</if>
		<![CDATA[
		where id = #{id}
		]]>
	</update>
	
	<delete id="deleteOperationServiceCatalog" parameterType="java.util.HashMap">
		<![CDATA[
		delete from operation_service_catalog where id = #{catalogId}
		]]>
	</delete>
	
	<select id="selectOperationServiceTemplatesCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">		
		<![CDATA[
		select count(*) totalSize 
		from operation_template a 
			left join operation_service_catalog c on a.catalogId = c.id 
			left join operation_service_position b on a.catalogId = b.type and a.id = b.id
		]]>
		<where>
			<if test="loginId != null">
				and (
					a.id in (select resourceId from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='OPERATION')  or 
					0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='OPERATION') or 
					(0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='OPERATION') and false)
				)
			</if>
			<if test="catalogId != null">
				and catalogId = #{catalogId}
			</if>
			<if test="templateId != null">
				and a.id = #{templateId}
			</if>
			<if test="templateIdArray != null">
				and concat(',',#{templateIdArray},',') like concat('%,',a.id,',%')
			</if>
			<if test="type != null">
				and a.type = #{type}
			</if>
			<if test="isDefault != null">
				and a.isDefault = #{isDefault}
			</if>
			<if test="createDateStart != null">
				<![CDATA[ and a.createDate >= #{createDateStart}]]>
			</if>
			<if test="createDateEnd != null">
				<![CDATA[ and a.createDate <= #{createDateEnd}]]>
			</if>
			<if test="name != null">
				<![CDATA[ and a.name like concat('%',#{name},'%')]]>
			</if>
		</where>
	</select>
	<select id="selectOperationServiceTemplates" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
		select a.*,c.name catalogName,
			(select fileName from OSS_File where filePath = d.sourceUrl) fileName,
			(select fileAbsPath from OSS_File where filePath = d.sourceUrl) fileAbsPath,
			ifnull(b.position,9999) positionOrder
		from operation_template a 
			left join operation_service_catalog c on a.catalogId = c.id 
			left join operation_service_position b on a.catalogId = b.type and a.id = b.id 
			left join operation_template_source d on a.id = d.refTemplateId 
		]]>
		<where>
			<if test="loginId != null">
				and (
					a.id in (select resourceId from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='OPERATION')  or 
					0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='OPERATION') or 
					(0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='OPERATION') and false)
				)
			</if>
			<if test="catalogId != null">
				and catalogId = #{catalogId}
			</if>
			<if test="templateId != null">
				and a.id = #{templateId}
			</if>
			<if test="templateIdArray != null">
				and concat(',',#{templateIdArray},',') like concat('%,',a.id,',%')
			</if>
			<if test="type != null">
				and a.type = #{type}
			</if>
			<if test="isDefault != null">
				and a.isDefault = #{isDefault}
			</if>
			<if test="createDateStart != null">
				<![CDATA[ and a.createDate >= #{createDateStart}]]>
			</if>
			<if test="createDateEnd != null">
				<![CDATA[ and a.createDate <= #{createDateEnd}]]>
			</if>
			<if test="name != null">
				<![CDATA[ and a.name like concat('%',#{name},'%')]]>
			</if>
		</where>
		group by a.id order by a.id desc
		
		<if test="beginIndex != null">
			limit #{beginIndex},#{perPage}
		</if>
	</select>
	
	<select id="selectOperationServiceTemplateSources" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
		select a.*,
			(select dictName from OSS_Dict where dictType = 'RESOURCE_SYSTEM_TYPE' and dictId = a.systemType) systemTypeName,
			(select fileName from OSS_File where filePath = a.sourceUrl) fileName,
			(select fileName from OSS_File where filePath = a.appUrl) appName,
			(select fileAbsPath from OSS_File where filePath = a.sourceUrl) fileAbsPath
		from operation_template_source a
		]]>
		<where>
			<if test="templateId != null">
				and a.refTemplateId = #{templateId}
			</if>
		</where>
		order by sourceUrl
	</select>
	
	<select id="selectOperationServiceTaskTemplateSources" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
		select a.*,
			(select dictName from OSS_Dict where dictType = 'RESOURCE_SYSTEM_TYPE' and dictId = a.systemType) systemTypeName,
			(select fileName from OSS_File where filePath = a.sourceUrl) fileName,
			(select fileAbsPath from OSS_File where filePath = a.sourceUrl) fileAbsPath
		from operation_task_template_source a
		]]>
		<where>
			<if test="templateId != null">
				and a.refTemplateId = #{templateId}
			</if>
		</where>
		order by sourceUrl
	</select>
	
	<insert id="insertOperationServiceTemplate" parameterType="java.util.HashMap">
		<![CDATA[
		insert into operation_template(name,type,action,description,icon,catalogId,createUser,paramCount)
		values(#{name},#{type},#{action},#{description},#{icon},#{catalogId},#{loginId},#{paramCount})
		]]>
		<selectKey keyProperty="refTemplateId" resultType="int" order="AFTER">
			select LAST_INSERT_ID()
		</selectKey>
	</insert>
	<insert id="insertOperationServiceTemplateSource" parameterType="java.util.HashMap">
		<![CDATA[
		insert into operation_template_source(refTemplateId,systemType,sourceUrl,appUrl)
		values(#{refTemplateId},#{systemType},#{sourceUrl},#{appUrl})
		]]>
	</insert>
	
	<update id="updateOperationServiceTemplate" parameterType="java.util.HashMap">
		<![CDATA[
		update operation_template
		set id = #{id},
			createDate = now()
		]]>
		<if test="description != null">
			, description = #{description}
		</if>
		<if test="name != null">
			, name = #{name}
		</if>
		<if test="type != null">
			, type = #{type}
		</if>
		<if test="icon != null">
			, icon = #{icon}
		</if>
		<if test="sourceUrl != null">
			, sourceUrl = #{sourceUrl}
		</if>
		<if test="catalogId != null">
			, catalogId = #{catalogId}
		</if>
		<if test="paramCount != null">
			, paramCount = #{paramCount}
		</if>
		<![CDATA[
		where id = #{id}
		]]>
	</update>
	
	<delete id="deleteOperationServiceTemplate" parameterType="java.util.HashMap">
		<![CDATA[
		delete from operation_template where id = #{templateId}
		]]>
	</delete>
	
	<delete id="deleteOperationServiceTemplateSource" parameterType="java.util.HashMap">
		<![CDATA[
		delete from operation_template_source where refTemplateId = #{refTemplateId}
		]]>
	</delete>
	
	<delete id="deleteOperationServicePositions" parameterType="java.util.HashMap">
		<![CDATA[
		delete from operation_service_position
		]]>
	</delete>
	
	<insert id="insertOperationServicePosition" parameterType="java.util.HashMap">
		<![CDATA[
		insert into operation_service_position 
		${valueSqlString}
		]]>
	</insert>
	
	<select id="selectOperationServiceMinionTasksCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
		select count(*) totalSize
		from OperationServiceTaskResource a,
			OperationServiceTask b
		where a.minionName = #{minionName}
			and b.id = a.refTaskId
		]]>
	</select>
	<select id="selectOperationServiceMinionTasks" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
		select b.*,
			a.result,
			a.status resourceTaskStatus,
			a.minionName,
			(select name from OSS_SYSTEM_User where loginId = b.createUser) userName
		from OperationServiceTaskResource a,
			OperationServiceTask b
		where a.minionName = #{minionName}
			and b.id = a.refTaskId
		]]>
		<![CDATA[ order by b.createDate desc ]]>
		<if test="beginIndex != null">
			limit #{beginIndex},#{perPage}
		</if>
	</select>
	
	<select id="selectOperationServiceTasksCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
		select count(*) totalSize
		from OperationServiceTask a  
		]]>
		<where>
			<if test="taskId != null">
				and id = #{taskId}
			</if>
			<if test="loginId != null">
				and concat(',',#{loginId},',') like concat('%,',createUser,',%')
			</if>
		</where>
	</select>
	<select id="selectOperationServiceTasks" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
		select a.*,(select b.name from operationservicetasktemplate b where b.id = a.refTemplate) templateName ,
		(select b.baseTemplateId from operationservicetasktemplate b where b.id = a.refTemplate) baseTemplateId ,
		(select count(*) from OperationServiceTaskResource c where c.refTaskId=a.id) resourceCount 
		from OperationServiceTask a 
		]]>
		<where>
			<if test="taskId != null">
				and id = #{taskId}
			</if>
			<if test="loginId != null">
				and concat(',',#{loginId},',') like concat('%,',createUser,',%')
			</if>
		</where>
		<![CDATA[ order by id desc ]]>
		
		<if test="beginIndex != null">
			limit #{beginIndex},#{perPage}
		</if>
	</select>
	<select id="selectOperationServiceTaskNodes" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
		select a.*
		from OperationServiceTask a  
		]]>
		<where>
			<if test="parent_id != -1">
				and a.parent_id=#{parent_id} 
			</if>
			<if test="loginId != null">
				and concat(',',#{loginId},',') like concat('%,',createUser,',%')
			</if>
		</where>
		<![CDATA[ order by id desc ]]>
	</select>
	<select id="selectOperationServiceTaskResourcesCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
		select count(*) totalSize
		from (
			select x.refTask,x.name ,x.minionName,group_concat(x.`status`,':',x.statusCount) statusCount
			from (select refTask,name,status,minionName,count(*) statusCount
					from (select refTask,group_concat(relationId) relationIds,count(*) templateCount from operation_task_relation_template where refTask = #{taskId} group by refTask) c,
							operation_task_relation_template_resource d
					where concat(',',c.relationIds,',') like concat('%,',d.refRelationId,',%')
					group by refTask,name,status,minionName) x
			group by x.refTask,x.name ,x.minionName 
		) t
		]]>
	</select>
	<select id="selectOperationServiceTaskResources" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
		select x.refTask,relationId,x.name ,x.minionName,x.minionName agentId,group_concat(x.`status`,':',x.statusCount) statusCount
		from (select refTask,relationId,name,status,minionName,count(*) statusCount
				from (select refTask,relationId,group_concat(relationId) relationIds,count(*) templateCount from operation_task_relation_template where refTask = #{taskId} group by refTask) c,
						operation_task_relation_template_resource d
				where concat(',',c.relationIds,',') like concat('%,',d.refRelationId,',%')
				group by refTask,name,status,minionName) x
		group by x.refTask,x.name ,x.minionName 
		]]>
		<if test="beginIndex != null">
			limit #{beginIndex},#{perPage}
		</if>
	</select>
	<select id="selectOperationServiceTaskResourceTemplates" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
		select b.*,c.`name` templateName
		from operation_task_relation_template a,
			operation_task_relation_template_resource b, 
			operation_task_template c
		where a.refTask = #{taskId}
			and b.refRelationId = a.relationId
			and a.refTemplate = c.id 
			and b.minionName = #{minionName}
		]]>
	</select>
	<select id="selectOperationServiceTaskResult" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
		select a.checkStatus, count(a.checkStatus) count 
		from OperationServiceTaskResource a 
		]]>
		<where>
			<if test="taskId != null">
				and refTaskId = #{taskId}
			</if>
		</where>
		<![CDATA[
		 group by a.checkStatus 
		]]>
	</select>
	<select id="selectOperationServiceTaskTemplateCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
		select count(*) totalSize from (
			select a.*,b.name templateName,b.*,group_concat(c.status,':',c.statusCount) statusCount
			from operation_task_relation_template a,
					operation_task_template b,
					(select refTask,refRelationId,status,count(*) statusCount
					from (select refTask,group_concat(relationId) relationIds,count(*) templateCount from operation_task_relation_template where refTask = #{taskId} group by refTask) c,
							operation_task_relation_template_resource d
					where concat(',',c.relationIds,',') like concat('%,',d.refRelationId,',%')
					group by refTask,refRelationId,status) c
			where a.refTemplate = b.id
				and a.refTask = #{taskId}
				and a.relationId = c.refRelationId
			group by a.relationId,a.refTask
		) t
		]]>
	</select>
	<select id="selectOperationServiceTaskTemplate" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
		select a.*,b.name templateName,b.*,group_concat(c.status,':',c.statusCount) statusCount
		from operation_task_relation_template a,
				operation_task_template b,
				(select refTask,refRelationId,status,count(*) statusCount
				from (select refTask,group_concat(relationId) relationIds,count(*) templateCount from operation_task_relation_template where refTask = #{taskId} group by refTask) c,
						operation_task_relation_template_resource d
				where concat(',',c.relationIds,',') like concat('%,',d.refRelationId,',%')
				group by refTask,refRelationId,status) c
		where a.refTemplate = b.id
			and a.refTask = #{taskId}
			and a.relationId = c.refRelationId
		group by a.relationId,a.refTask
		]]>
	</select>
	<select id="selectOperationServiceTaskTemplateResources" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
		select b.*
		from operation_task_relation_template a,
			operation_task_relation_template_resource b
		where a.refTask = #{taskId}
			and b.refRelationId = a.relationId
			and a.relationId = #{templateId} 
		]]>
	</select>
	
	<delete id="deleteOperationServiceTask" parameterType="java.util.HashMap">
		<![CDATA[
		delete from operation_task_info where id = #{taskId}
		]]>
	</delete>
	<delete id="deleteOperationServiceTaskTemplate" parameterType="java.util.HashMap">
		<![CDATA[
		delete from OperationServiceTaskTemplate 
		where id = #{refTemplateId} 
			  and id not in (select distinct refTemplate from operationservicetask)
		]]>
	</delete>
	
	<select id="selectResourceOperationNodesCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
		select count(*) totalSize from 
			(
				select a.id,
				   a.name,
				   a.hostName,
				   a.defaultName,
				   b.poolId,
				   b.regionName,
				   '' poolType,
				   b.osType,
				   b.osVersion,
				   c.osIpAddress,
				   (select max(interface) from rn_ext_interface m where m.nodeId = a.id and m.isShow = 1) defaultInterface,
				   d.zabbixAgentStatus,
				   d.saltAgentStatus,
				   d.connectStatus,
				   d.agentId
		  from rn_base a, 
				(select a.nodeId,c.id poolId,c.poolType,a.region regionName,imageRef,b.osType,b.osVersion 
		        	from rn_ext_vir_instance a, 
		             	rn_ext_vir_image b,
						resourcepool c
		        	where a.imageRef = b.uuid 
		              and a.region = c.regionName
		              and c.poolType in ('COMPUTE','MANAGE') 
		              and c.id in (select id from resourcepool where type in ('PHYSICAL','VIRTUAL')) 
			   	    ]]>
			        <if test="poolId != null">
						and c.id=#{poolId} 
					</if>
					<if test="loginId != null">
						and (
							a.nodeId in (select resourceId from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_INSTANCE')  or 
							0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_INSTANCE') or 
							(0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_INSTANCE') and false)
						)
					</if>
		      <![CDATA[
						union all 
						select a.nodeId,poolId,c.poolType,null,null,b.systemType,b.systemSubType 
		        from rn_ext_physical a,
				        rn_ext_systeminfo b,
						     resourcepool c
		        where a.nodeId = b.nodeId 
		            and c.id = poolId
		            and c.poolType in ('COMPUTE','MANAGE') 
		              and c.id in (select id from resourcepool where type in ('PHYSICAL','VIRTUAL')) 
		      ]]>
		      <if test="poolId != null">
						and c.id=#{poolId} 
			  </if>
			  <if test="loginId != null">
				and (
					a.nodeId in (select resourceId from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and (type='PHYSICAL' or type='VIRTUAL'))  or 
					0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and (type='PHYSICAL' or type='VIRTUAL')) or 
					(0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and (type='PHYSICAL' or type='VIRTUAL')) and false)
				)
			  </if>
		      <![CDATA[
						union all 
						select nodeId,poolId,c.poolType,region,null,null,null
		        from rn_ext_lpar a,
						     resourcepool c 
		        where c.id = poolId
		              and c.poolType in ('COMPUTE','MANAGE') 
		              and c.id in (select id from resourcepool where type in ('PHYSICAL','VIRTUAL')) 
		      ]]>
		      <if test="poolId != null">
					and c.id=#{poolId} 
				</if>
			  <if test="loginId != null">
				and (
					a.nodeId in (select resourceId from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='LPAR')  or 
					0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='LPAR') or 
					(0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='LPAR') and false)
				)
			  </if>
		      <![CDATA[
					) b,
					rn_ext_osinfo c,
					rn_ext_systeminfo d
		      	]]>
		      <if test="ipAddress != null">
		      <![CDATA[
		      ,(select a.conditionItem,ifnull(b.sourceIp,conditionItem) sourceIp
									from operationservicequery a 
									left join rn_ip_map b on a.conditionItem = b.mapIp and a.conditionType = 'ipAddress'
									where a.sessionId = #{sessionId}
								) e
		      ]]>
		     	</if>
		      <![CDATA[
					where a.id = b.nodeId 
		        and a.id = c.nodeId 
		        and a.id = d.nodeId  
		        and a.rnStatus = 'NORMAL' 
				]]>
		    <if test="tagValue != null">
					<![CDATA[
						and a.id in (select distinct(c.resourceId) from oss_system_tag_resource c where concat(',',#{tagValue},',') like concat('%,',c.value,',%')
					]]>
					<if test="loginId != null">
						and concat(',',#{loginId},',') like concat('%,',c.createUser,',%')
					</if>
					<![CDATA[
						)
					]]>
				</if>
					<if test="countSize == 100 and loginId != null">
						and b.poolId in (select a.poolId 
										from resourcepooldepartment a,
											oss_system_user b,
											oss_system_department c 
										where concat(',',#{loginId},',') like concat('%,',loginId,',%')
											and a.groupId = c.refGroupId
											and b.department = c.id)
					</if>
					<if test="countSize == 10 and loginId != null">
						and b.poolId in (select poolId from resourcepoolusers where concat(',',#{loginId},',') like concat('%,',loginId,',%'))
					</if>
					<if test="countSize == 0">
						and b.poolType = 'COMPUTE'
					</if>
					<if test="key != null">
						<![CDATA[ and (a.name like concat('%',#{key},'%') or a.hostName like concat('%',#{key},'%') or a.defaultName like concat('%',#{key},'%')) ]]>
					</if>
					<if test="systemSubType != null">
						<![CDATA[
						and concat(',',#{systemSubType},',') like concat('%,',b.osVersion,',%')
						]]>
					</if>
					<if test="beginIp != null">
						<![CDATA[ 
						and (c.osIpAddressLong >= #{beginIp} 
							or a.id in (select nodeId from rn_ext_interface where ipAddressLong >= #{beginIp}))
						]]>
					</if>
					<if test="endIp != null">
						<![CDATA[
						and (c.osIpAddressLong <= #{endIp} 
							or a.id in (select nodeId from rn_ext_interface where ipAddressLong <= #{endIp}))
						]]>
					</if>
		      		<if test="hostName != null">
						and a.hostName in (select conditionItem from operationservicequery where sessionId = #{sessionId} and conditionType = 'hostName') 
					</if>
		      		<if test="macAddress != null">
						and c.sysMacAddr in (select conditionItem from operationservicequery where sessionId = #{sessionId} and conditionType = 'macAddress') 
					</if>
		      		<if test="ipAddress != null">
						and (c.osIpAddress = e.sourceIp or a.id in (select k.nodeId from rn_ext_interface k where k.ipaddress = e.sourceip))
					</if>
					<if test="poolId != null">
						and b.poolId=#{poolId} 
					</if>
		) r
	</select>
	
	<insert id="insertOperationServiceQueryIpAddress" parameterType="java.util.HashMap">
		<![CDATA[
		insert into operationservicequery(sessionId,conditionItem)
		values
		]]>
		<foreach collection="ipAddress" index="index" item="ipAddressItem" open=" " separator="," close=" ">
   			(#{sessionId},#{ipAddressItem})
  		</foreach>
	</insert>
	
	<insert id="insertOperationServiceQueryItem" parameterType="java.util.HashMap">
		<![CDATA[
		insert into operationservicequery(sessionId,conditionType,conditionItem)
		values
		]]>
		<foreach collection="queryData" index="index" item="queryItem" open=" " separator="," close=" ">
   			(#{sessionId},#{queryType},#{queryItem})
  		</foreach>
	</insert>
	<insert id="insertOperationServiceQueryHostName" parameterType="java.util.HashMap">
		<![CDATA[
		insert into operationservicequery(sessionId,conditionItem)
		values
		]]>
		<foreach collection="hostName" index="index" item="hostNameItem" open=" " separator="," close=" ">
   			(#{sessionId},#{hostNameItem})
  		</foreach>
	</insert>
	<delete id="deleteOperationServiceQuery" parameterType="java.util.HashMap">
		<![CDATA[
		delete from operationservicequery where sessionId = #{sessionId}
		]]>
	</delete>
	
	<select id="selectResourceOperationNodes" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.id,
				   a.name,
				   a.hostName,
				   a.defaultName,
				   a.type,
				   a.subType,
				   b.poolId,
				   b.regionName,
				   '' poolType,
				   b.osType,
				   b.osVersion,
				   c.osIpAddress,
				   (select max(interface) from rn_ext_interface m where m.nodeId = a.id and m.isShow = 1) defaultInterface,
				   d.zabbixAgentStatus,
				   d.saltAgentStatus,
				   d.connectStatus,
				   d.agentId
		  from rn_base a, 
				(select a.nodeId,c.id poolId,c.poolType,a.region regionName,imageRef,b.osType,b.osVersion 
		        	from rn_ext_vir_instance a, 
		             	rn_ext_vir_image b,
						resourcepool c
		        	where a.imageRef = b.uuid 
		              and a.region = c.regionName
		              and c.poolType in ('COMPUTE','MANAGE') 
		              and c.id in (select id from resourcepool where type in ('PHYSICAL','VIRTUAL')) 
			   	    ]]>
			        <if test="poolId != null">
						and c.id=#{poolId} 
					</if>
					<if test="loginId != null">
						and (
							a.nodeId in (select resourceId from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_INSTANCE')  or 
							0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_INSTANCE') or 
							(0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='VIR_INSTANCE') and false)
						)
					</if>
		      <![CDATA[
						union all 
						select a.nodeId,poolId,c.poolType,null,null,b.systemType,b.systemSubType 
		        from rn_ext_physical a,
				        rn_ext_systeminfo b,
						     resourcepool c
		        where a.nodeId = b.nodeId 
		            and c.id = poolId
		            and c.poolType in ('COMPUTE','MANAGE') 
		              and c.id in (select id from resourcepool where type in ('PHYSICAL','VIRTUAL')) 
		      ]]>
		      <if test="poolId != null">
						and c.id=#{poolId} 
			  </if>
			  <if test="loginId != null">
				and (
					a.nodeId in (select resourceId from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and (type='PHYSICAL' or type='VIRTUAL'))  or 
					0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and (type='PHYSICAL' or type='VIRTUAL')) or 
					(0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and (type='PHYSICAL' or type='VIRTUAL')) and false)
				)
			  </if>
		      <![CDATA[
						union all 
						select nodeId,poolId,c.poolType,region,null,null,null
		        from rn_ext_lpar a,
						     resourcepool c 
		        where c.id = poolId
		              and c.poolType in ('COMPUTE','MANAGE') 
		              and c.id in (select id from resourcepool where type in ('PHYSICAL','VIRTUAL')) 
		      ]]>
		      <if test="poolId != null">
						and c.id=#{poolId} 
			  </if>
			  <if test="loginId != null">
				and (
					a.nodeId in (select resourceId from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='LPAR')  or 
					0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='LPAR') or 
					(0 = (select min(resourceId) from oss_system_user_data where concat(',',#{loginId},',') like concat('%,',userId,',%') and type='LPAR') and false)
				)
			  </if>
		      <![CDATA[
					) b,
					rn_ext_osinfo c,
					rn_ext_systeminfo d
		      	]]>
		      <if test="ipAddress != null">
		      <![CDATA[
		      ,(select a.conditionItem,ifnull(b.sourceIp,conditionItem) sourceIp
									from operationservicequery a 
									left join rn_ip_map b on a.conditionItem = b.mapIp and a.conditionType = 'ipAddress'
									where a.sessionId = #{sessionId}
								) e 
		      ]]>
		     	</if>
		      <![CDATA[
					where a.id = b.nodeId 
		        and a.id = c.nodeId 
		        and a.id = d.nodeId  
		        and a.rnStatus = 'NORMAL' 
				]]>
		    <if test="tagValue != null">
					<![CDATA[
						and a.id in (select distinct(c.resourceId) from oss_system_tag_resource c where concat(',',#{tagValue},',') like concat('%,',c.value,',%')
					]]>
					<if test="loginId != null">
						and concat(',',#{loginId},',') like concat('%,',c.createUser,',%') 
					</if>
					<![CDATA[
						)
					]]>
				</if>
					<if test="countSize == 100 and loginId != null">
						and b.poolId in (select a.poolId 
										from resourcepooldepartment a,
											oss_system_user b,
											oss_system_department c 
										where concat(',',#{loginId},',') like concat('%,',loginId,',%')
											and a.groupId = c.refGroupId
											and b.department = c.id)
					</if>
					<if test="countSize == 10 and loginId != null">
						and b.poolId in (select poolId from resourcepoolusers where concat(',',#{loginId},',') like concat('%,',loginId,',%'))
					</if>
					<if test="countSize == 0">
						and b.poolType = 'COMPUTE'
					</if>
					<if test="key != null">
						<![CDATA[ and (a.name like concat('%',#{key},'%') or a.hostName like concat('%',#{key},'%') or a.defaultName like concat('%',#{key},'%')) ]]>
					</if>
					<if test="systemSubType != null">
						<![CDATA[
						and concat(',',#{systemSubType},',') like concat('%,',b.osVersion,',%')
						]]>
					</if>
					<if test="beginIp != null">
						<![CDATA[ 
						and (c.osIpAddressLong >= #{beginIp} 
							or a.id in (select nodeId from rn_ext_interface where ipAddressLong >= #{beginIp}))
						]]>
					</if>
					<if test="endIp != null">
						<![CDATA[
						and (c.osIpAddressLong <= #{endIp} 
							or a.id in (select nodeId from rn_ext_interface where ipAddressLong <= #{endIp}))
						]]>
					</if>
		      		<if test="hostName != null">
						and a.hostName in (select conditionItem from operationservicequery where sessionId = #{sessionId} and conditionType = 'hostName') 
					</if>
		      		<if test="macAddress != null">
						and c.sysMacAddr in (select conditionItem from operationservicequery where sessionId = #{sessionId} and conditionType = 'macAddress') 
					</if>
		      		<if test="ipAddress != null">
						and (c.osIpAddress = e.sourceIp or a.id in (select k.nodeId from rn_ext_interface k where k.ipaddress = e.sourceip))
					</if>
					<if test="poolId != null">
						and b.poolId=#{poolId} 
					</if>
		<![CDATA[
        	order by saltAgentStatus desc,id 
		]]>
		<if test="beginIndex != null">
			limit #{beginIndex},#{perPage}
		</if>
	</select>
	
	<select id="selectResourceOperationNodesByIpAddress" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select * 
			from operationservicequery p
				left join (
					SELECT distinct a.id,
			      			  a.id uuid,
							  a.name,
							  a.nodeType,
							  a.nodeType poolType,
							  a.osIpAddress,
							  ifnull(k.ipAddress,a.osipaddress) defaultInterface,
							  a.hostName,
							  t.id monionId ,
							  m.conditionItem
						FROM ResourceNode a 
						left join rn_ext_interface k on k.nodeId = a.id 
						join (select a.conditionItem,ifnull(b.sourceIp,conditionItem) sourceIp
							from operationservicequery a 
							left join rn_ip_map b on a.conditionItem = b.mapIp 
							where a.sessionId = #{sessionId}
						) m on (m.sourceIp = a.osIpAddress or k.ipaddress = m.sourceIp)
						left join SALTSTACK_Minion t on t.nodeId = a.id and t.nodeType = 'PHYSICAL'			
					]]>
					<if test="tagId != null">
						<![CDATA[
							join (SELECT distinct(c.resource_id) from OSS_SYSTEM_Tag_Resource c where concat(',',#{tagId},',') like concat('%,',c.tag_id,',%') 
						]]>
						<if test="loginId != null">
							and concat(',',#{loginId},',') like concat('%,',c.create_user,',%')
						</if>
						<![CDATA[
							) c on a.id=c.resource_id 
						]]>
					</if>
					<![CDATA[
					where a.nodeType in ('COMPUTE','MANAGE')
						and a.poolId in (select id from resourcepool where type in ('TPMOSD'))
					]]>
						<if test="countSize == 100 and loginId != null">
							and a.poolId in (select a.poolId 
											from resourcepooldepartment a,
												oss_system_user b,
												oss_system_department c 
											where concat(',',#{loginId},',') like concat('%,',loginId,',%')
												and a.groupId = c.refGroupId
												and b.department = c.id)
						</if>
						<if test="countSize == 10 and loginId != null">
							and a.poolId in (select poolId from resourcepoolusers where concat(',',#{loginId},',') like concat('%,',loginId,',%'))
						</if>
						<if test="countSize == 0">
							and a.nodeType = 'COMPUTE'
						</if>
						<if test="systemSubType != null">
							<![CDATA[
							and concat(',',#{systemSubType},',') like concat('%,',a.systemSubType,',%')
							]]>
						</if>
						<if test="poolId != null">
							and a.poolId=#{poolId} 
						</if>
					<![CDATA[
					union all
					select b.id,
						  b.uuid,
						  b.name,
					      'VIRTUAL',
						  (select poolType from resourcepool where regionName = b.region),
					      '',
						  ifnull(k.ipAddress,c.osipaddress) defaultInterface,
					      b.name hostName,
					      t.id monionId,
					      m.conditionItem
					from rn_ext_vir_instance b
						join rn_ext_systeminfo c on b.nodeId = c.nodeId
						left join rn_ext_interface k on k.nodeId = b.nodeId 
						join (select a.conditionItem,ifnull(b.sourceIp,conditionItem) sourceIp
							from operationservicequery a 
							left join rn_ip_map b on a.conditionItem = b.mapIp where a.sessionId = #{sessionId}
						) m on (c.osIpAddress = m.sourceIp or k.ipaddress = m.sourceip)
						left join SALTSTACK_VIRTUAL_Minion t on t.uuid = b.uuid 
						left join openstack_image m on b.imageref = m.uuid 
					]]>
					<if test="tagId != null">
						<![CDATA[
							join (SELECT distinct(c.resource_id) from OSS_SYSTEM_Tag_Resource c where concat(',',#{tagId},',') like concat('%,',c.tag_id,',%')
						]]>
						<if test="loginId != null">
							and concat(',',#{loginId},',') like concat('%,',c.create_user,',%')
						</if>
						<![CDATA[
							) c on b.id=c.resource_id 
						]]>
					</if>
					<where>
						<if test="countSize == 100 and loginId != null">
							and b.region in (select t.regionName 
											from resourcepool t,
												resourcepooldepartment a,
												oss_system_user b,
												oss_system_department c 
											where concat(',',#{loginId},',') like concat('%,',loginId,',%')
												and a.groupId = c.refGroupId
												and b.department = c.id
												and a.poolId = t.id
												and t.regionName is not null)
						</if>
						<if test="countSize == 10 and loginId != null">
							and b.region in (select t.regionName from resourcepool t,resourcepoolusers k where t.id = k.poolId and t.regionName is not null and concat(',',#{loginId},',') like concat('%,',loginId,',%'))
						</if>
						<if test="systemSubType != null">
							<![CDATA[
							and concat(',',#{systemSubType},',') like concat('%,',m.os,',%') 
							]]>
						</if>
						<if test="poolId != null">
							and b.region = (select regionName from resourcepool where id = #{poolId})
						</if>
					</where>
					<![CDATA[
					union all
					select b.id,
						  b.id,
						  b.hostName,
					      'LPAR',
						  (select poolType from resourcepool where regionName = b.region),
					      '',
						  ifnull(k.ipAddress,c.osipaddress) defaultInterface,
					      b.hostName,
					      t.id monionId,
					      m.conditionItem
					from lpar_instance b
						join lpar_instance_systeminfo c on b.id = c.instanceId 
						left join lpar_instance_interface k on k.instanceId = b.id 
						join (select a.conditionItem,ifnull(b.sourceIp,conditionItem) sourceIp
							from operationservicequery a 
							left join rn_ip_map b on a.conditionItem = b.mapIp where a.sessionId = #{sessionId} 
						) m on (c.osIpAddress = m.sourceIp or k.ipaddress = m.sourceip)
						left join SALTSTACK_lpar_Minion t on t.instanceId = b.id 
					]]>
					<where>
						<if test="countSize == 100 and loginId != null">
							and b.region in (select t.regionName 
											from resourcepool t,
												resourcepooldepartment a,
												oss_system_user b,
												oss_system_department c 
											where concat(',',#{loginId},',') like concat('%,',loginId,',%')
												and a.groupId = c.refGroupId
												and b.department = c.id
												and a.poolId = t.id
												and t.regionName is not null)
						</if>
						<if test="countSize == 10 and loginId != null">
							and b.region in (select t.regionName from resourcepool t,resourcepoolusers k where t.id = k.poolId and t.regionName is not null and concat(',',#{loginId},',') like concat('%,',loginId,',%'))
						</if>
						<if test="systemSubType != null">
							<!-- and concat(',',#{systemSubType},',') like concat('%,',m.os,',%')  -->
						</if>
						<if test="poolId != null">
							and b.region = (select regionName from resourcepool where id = #{poolId})
						</if>
					</where>
		<![CDATA[ ) y on p.conditionItem = y.conditionItem
		where p.sessionId = #{sessionId}
		]]>
	</select>
	
	<select id="selectResourceOperationNodesByHostName" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select * 
			from operationservicequery p
				left join (
					SELECT distinct a.id,
			      			  a.id uuid,
							  a.name,
							  a.nodeType,
							  a.nodeType poolType,
							  a.osIpAddress,
				  			  (select max(interface) from rn_ext_interface m where m.nodeId = a.id and m.isShow = 1) defaultInterface,
							  a.hostName,
							  t.id monionId 
						FROM ResourceNode a 
						left join SALTSTACK_Minion t on t.nodeId = a.id and t.nodeType = 'PHYSICAL'			
					]]>
					<if test="tagId != null">
						<![CDATA[
							join (SELECT distinct(c.resource_id) from OSS_SYSTEM_Tag_Resource c where concat(',',#{tagId},',') like concat('%,',c.tag_id,',%') 
						]]>
						<if test="loginId != null">
							and concat(',',#{loginId},',') like concat('%,',c.create_user,',%')
						</if>
						<![CDATA[
							) c on a.id=c.resource_id 
						]]>
					</if>
					<![CDATA[
					where a.nodeType in ('COMPUTE','MANAGE')
						and a.poolId in (select id from resourcepool where type in ('TPMOSD'))
					]]>
						<if test="countSize == 100 and loginId != null">
							and a.poolId in (select a.poolId 
											from resourcepooldepartment a,
												oss_system_user b,
												oss_system_department c 
											where concat(',',#{loginId},',') like concat('%,',loginId,',%')
												and a.groupId = c.refGroupId
												and b.department = c.id)
						</if>
						<if test="countSize == 10 and loginId != null">
							and a.poolId in (select poolId from resourcepoolusers where concat(',',#{loginId},',') like concat('%,',loginId,',%'))
						</if>
						<if test="countSize == 0">
							and a.nodeType = 'COMPUTE'
						</if>
						<if test="systemSubType != null">
							<![CDATA[
							and concat(',',#{systemSubType},',') like concat('%,',a.systemSubType,',%')
							]]>
						</if>
						<if test="beginIp != null">
							<![CDATA[
							and a.osIpAddressLong >= #{beginIp}
							]]>
						</if>
						<if test="endIp != null">
							<![CDATA[
							and a.osIpAddressLong <= #{endIp}
							]]>
						</if>
						<if test="poolId != null">
							and a.poolId=#{poolId} 
						</if>
					<![CDATA[
					union all
					select b.id,
						  b.uuid,
						  b.name,
					      'VIRTUAL',
						  (select poolType from resourcepool where regionName = b.region),
					      '',
			  			 (select max(interface) from rn_ext_interface m where m.instanceid = b.id and m.isShow = 1) defaultInterface,
					      
					      b.name hostName,
					      t.id monionId
					from rn_ext_vir_instance b
						left join SALTSTACK_VIRTUAL_Minion t on t.uuid = b.uuid 
						left join rn_ext_vir_image m on b.imageref = m.uuid 
					]]>
					<if test="tagId != null">
						<![CDATA[
							join (SELECT distinct(c.resource_id) from OSS_SYSTEM_Tag_Resource c where concat(',',#{tagId},',') like concat('%,',c.tag_id,',%')
						]]>
						<if test="loginId != null">
							and concat(',',#{loginId},',') like concat('%,',c.create_user,',%')
						</if>
						<![CDATA[
							) c on b.id=c.resource_id 
						]]>
					</if>
					<where>
						<if test="countSize == 100 and loginId != null">
							and b.region in (select t.regionName 
											from resourcepool t,
												resourcepooldepartment a,
												oss_system_user b,
												oss_system_department c 
											where concat(',',#{loginId},',') like concat('%,',loginId,',%')
												and a.groupId = c.refGroupId
												and b.department = c.id
												and a.poolId = t.id
												and t.regionName is not null)
						</if>
						<if test="countSize == 10 and loginId != null">
							and b.region in (select t.regionName from resourcepool t,resourcepoolusers k where t.id = k.poolId and t.regionName is not null and concat(',',#{loginId},',') like concat('%,',loginId,',%'))
						</if>
						<if test="systemSubType != null">
							<![CDATA[
							and concat(',',#{systemSubType},',') like concat('%,',m.os,',%') 
							]]>
						</if>
						<if test="poolId != null">
							and b.region = (select regionName from resourcepool where id = #{poolId})
						</if>
					</where>
					<![CDATA[
					union all
					select b.id,
						  b.id,
						  b.hostName,
					      'LPAR',
						  (select poolType from resourcepool where regionName = b.region),
					      '',
			  			 (select max(interface) from openstack_instance_interface m where m.instanceid = b.id and m.isShow = 1) defaultInterface,
					      
					      b.hostName,
					      t.id monionId
					from lpar_instance b
						left join SALTSTACK_lpar_Minion t on t.instanceId = b.id 
					]]>
					<where>
						<if test="countSize == 100 and loginId != null">
							and b.region in (select t.regionName 
											from resourcepool t,
												resourcepooldepartment a,
												oss_system_user b,
												oss_system_department c 
											where concat(',',#{loginId},',') like concat('%,',loginId,',%')
												and a.groupId = c.refGroupId
												and b.department = c.id
												and a.poolId = t.id
												and t.regionName is not null)
						</if>
						<if test="countSize == 10 and loginId != null">
							and b.region in (select t.regionName from resourcepool t,resourcepoolusers k where t.id = k.poolId and t.regionName is not null and concat(',',#{loginId},',') like concat('%,',loginId,',%'))
						</if>
						<if test="systemSubType != null">
							<!-- and concat(',',#{systemSubType},',') like concat('%,',m.os,',%')  -->
						</if>
						<if test="poolId != null">
							and b.region = (select regionName from resourcepool where id = #{poolId})
						</if>
					</where>
		<![CDATA[ ) y on p.conditionItem = y.hostName
		where p.sessionId = #{sessionId}
		]]>
		
	</select>
	
	<select id="selectOperationServiceTaskInfoCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
		select count(*) totalSize
			from (
				select x.*,y.refTemplate,
						(select count(*) from operation_task_relation_template b where b.refTask = x.id) templateCount,
						group_concat(y.status,":",y.minionCount) minionCount,sum(y.minionCount) minionCountTotal, 'NORMAL' taskType,2 status,'' actionParam,1 childTask
				from operation_task_info x,
				(select c.refTask,d.status,count(distinct d.minionName) minionCount,c.refTemplate
						from operation_task_relation_template c,
								operation_task_relation_template_resource d
						where c.relationId = d.refRelationId
						group by c.refTask,d.status) y
				where x.id = y.refTask
		]]>
		<if test="taskId != null">
			and x.id = #{taskId}
		</if>
		<if test="timedId != null">
			and x.timed_id = #{timedId}
		</if>
		<!-- 
		<if test="loginId != null">
			and concat(',',#{loginId},',') like concat('%,',x.create_user,',%')
		</if>
		 -->
		<![CDATA[
			group by x.id
		]]>
		<if test="timedId == 0">
			<![CDATA[
		union all
			select id,0 parent_id,-1 timed_id, name, createUser, createDate, '' param, 0 refTemplate,
				0 templateCount, '' minionCount,0 minionCountTotal, 'TIMED' taskType,status,actionParam,
				(SELECT count(*) from operation_task_info t where t.timed_id =  id) childTask from operation_timed_task

		]]>
		</if>
		<![CDATA[
		) t
		]]>
		<where>
			<if test="countSize == 100 and loginId != null">
				and createUser in (select u.loginId from v_permission_user u where concat(',',#{loginId},',') like concat('%,',u.loginId,',%'))
			</if>
			<if test="countSize == 10 and loginId != null">
				and createUser in (select u.loginId from v_permission_user u where concat(',',#{loginId},',') like concat('%,',u.loginId,',%'))
			</if>
		</where>
	</select>
	<select id="selectOperationServiceTaskInfo" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
		select * from (
		]]>
		<if test="queryType == null or queryType != 'TIMED_TASK_INSTANCE'">
			<![CDATA[
				select id,0 parent_id,-1 timed_id, name, createUser, createDate, '' param, 0 refTemplate,
					0 templateCount, '' minionCount,0 minionCountTotal, 'TIMED' taskType, status,actionParam,
					(SELECT count(*) from operation_task_info ti where ti.timed_id =  tt.id) childTask,1 taskOrder 
					from operation_timed_task tt where status = 1 
				union all 
				]]>
			</if>
			<![CDATA[
			select *, 2 taskOrder from (
				select x.*,y.refTemplate,
						(select count(*) from operation_task_relation_template b where b.refTask = x.id) templateCount,
						group_concat(y.status,":",y.minionCount) minionCount,sum(y.minionCount) minionCountTotal, 'NORMAL' taskType,2 status,'' actionParam,1 childTask 
				from operation_task_info x,
				(select c.refTask,d.status,count(distinct d.minionName) minionCount,c.refTemplate
						from operation_task_relation_template c,
								operation_task_relation_template_resource d
						where c.relationId = d.refRelationId
						group by c.refTask,d.status) y
				where x.id = y.refTask
			]]>
			<if test="taskId != null">
				and x.id = #{taskId}
			</if>
			<if test="timedId != null">
				and x.timed_id = #{timedId}
			</if>
			<!-- 
			<if test="loginId != null">
				and concat(',',#{loginId},',') like concat('%,',x.create_user,',%')
			</if>
			 -->
			<![CDATA[
				group by x.id
			]]>
			<if test="timedId == 0">
			<![CDATA[
			union all
				select id,0 parent_id,-1 timed_id, name, createUser, createDate, '' param, 0 refTemplate,
					0 templateCount, '' minionCount,0 minionCountTotal, 'TIMED' taskType,status,actionParam,
					(SELECT count(*) from operation_task_info ti where ti.timed_id =  tt.id) childTask  
					from operation_timed_task tt 
				]]>
				<if test="queryType == null or queryType != 'TIMED_TASK_INSTANCE'">
					<![CDATA[
						where status = 0
					]]>
				</if>
			</if>
			<![CDATA[
			) t 
		) t
		]]>
		<where>
			<if test="countSize == 100 and loginId != null">
				and createUser in (select u.loginId from v_permission_user u where concat(',',#{loginId},',') like concat('%,',u.loginId,',%'))
			</if>
			<if test="countSize == 10 and loginId != null">
				and createUser in (select u.loginId from v_permission_user u where concat(',',#{loginId},',') like concat('%,',u.loginId,',%'))
			</if>
		</where>
		<if test="instanceSort != null and instanceSort == 'minionCount'">
			<![CDATA[ order by minionCountTotal ${instanceSortDirection} ]]>
		</if>
		<if test="instanceSort != null and instanceSort != 'minionCount'">
			<![CDATA[ order by ${instanceSort} ${instanceSortDirection} ]]>
		</if>
		<if test="instanceSort == null">
			<![CDATA[ order by taskOrder, createDate desc  ]]>
		</if>
		 
		<if test="beginIndex != null">
			limit #{beginIndex},#{perPage}
		</if>
	</select>
	
	<insert id="insertOperationTimedTask" parameterType="java.util.HashMap">
		<![CDATA[
		insert into operation_timed_task(name,action,actionParam,cron,createUser)
		values(#{name},#{actionName},#{actionParam},#{cron},#{createUser})
		]]>
		<selectKey keyProperty="taskId" resultType="int" order="AFTER">
			select LAST_INSERT_ID()
		</selectKey>
	</insert>
	<select id="selectOperationTimedTask" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select * from operation_timed_task
		]]>
		<where>
			<if test="id != null">
				and id=#{id}
			</if>
			<if test="status != null">
				and status=#{status}
			</if>
		</where>
	</select>
	<update id="updateOperationTimedTask" parameterType="java.util.HashMap">
		<![CDATA[
			update operation_timed_task
			set id = #{id}
		]]>
		<if test="status != null">
			,status = #{status}
		</if>
		<if test="name != null">
			,name = #{name}
		</if>
		<if test="action != null">
			,action = #{actionName}
		</if>
		<if test="actionParam != null">
			,actionParam = #{actionParam}
		</if>
		<if test="cron != null">
			,cron = #{cron}
		</if>
		<![CDATA[
			  where id = #{id}
		]]>
	</update>
	<delete id="deleteOperationTimedTask" parameterType="java.util.HashMap">
		<![CDATA[
			delete from operation_timed_task where id = #{id}
		]]>
	</delete>
	
	<select id="selectResourceOperationVirtualsCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			SELECT count(*) totalSize
			FROM rn_ext_vir_instance a 
				left join SALTSTACK_Virtual_Minion t on t.uuid = a.uuid	
                join rn_ext_vir_image k on k.uuid = a.imageRef	
				join v_department_projectId d on d.projectId = a.projectId and concat(',',#{loginId},',') like concat('%,',d.loginId,',%')
		]]>
		<if test="tagId != null">
			<![CDATA[
				join (SELECT distinct(c.resource_id) from OSS_SYSTEM_Tag_Resource c where concat(',',#{tagId},',') like concat('%,',c.tag_id,',%')
			]]>
			<if test="loginId != null">
				and concat(',',#{loginId},',') like concat('%,',c.create_user,',%')
			</if>
			<![CDATA[
				) c on a.id=c.resource_id 
			]]>
		</if>
	</select>
	<select id="selectResourceOperationVirtuals" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			SELECT a.id,
			    a.uuid,
			    a.name,
			    a.vmState,
			    k.virtualizationType,
			    t.id monionId
			FROM OPENSTACK_Instance a 
				left join SALTSTACK_Virtual_Minion t on t.uuid = a.uuid	
                join OPENSTACK_Image k on k.uuid = a.imageRef	
				join v_department_projectId d on d.projectId = a.projectId and concat(',',#{loginId},',') like concat('%,',d.loginId,',%') 
		]]>
		<if test="tagId != null">
			<![CDATA[
				join (SELECT distinct(c.resource_id) from OSS_SYSTEM_Tag_Resource c where concat(',',#{tagId},',') like concat('%,',c.tag_id,',%')
			]]>
			<if test="loginId != null">
				and concat(',',#{loginId},',') like concat('%,',c.create_user,',%')
			</if>
			<![CDATA[
				) c on a.id=c.resource_id 
			]]>
		</if>
		<where>
			<if test="uuid != null">
				and a.uuid = #{uuid}
			</if>
		</where>
		<if test="beginIndex != null">
			limit #{beginIndex},#{perPage}
		</if>
	</select>
	
	<select id="selectSystemTags" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.id tagId, b.id,a.tagType,if(a.tagType = 'RESOURCE',b.value,a.name) name,count(*) resourceCount, a.scope  
			from oss_system_tag a,oss_system_tag_resource b
			where a.id = b.tagId and a.tagType = 'RESOURCE' 
		]]>
		<if test="loginId != null">
			and b.createUser = #{loginId}  
		</if>
		<if test="resourceType == 'RESOURCE_NODE'">
			and b.resourceId in (select id from rn_base where rnStatus = 'NORMAL') 
		</if>
		<if test="resourceType == 'ASSET'">
			<!-- and b.resourceId in (select id from asset_info where status = 'NORMAL') --> 
		</if>
		<if test="key != null">
			and if(a.tagType = 'RESOURCE',b.value,a.name) like concat('%',#{key},'%') 
		</if>
		<![CDATA[
			group by if(a.tagType = 'RESOURCE',b.value,a.name)
		]]>
		
		<if test="instanceSort != null">
			<![CDATA[ order by ${instanceSort} ${instanceSortDirection} ]]>
		</if>
		<if test="beginIndex != null">
			limit #{beginIndex},#{perPage}
		</if>
	</select>
	<select id="selectSystemTagsCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select count(*) totalSize 
			from oss_system_tag a,oss_system_tag_resource b
			where a.id = b.tagId and a.tagType = 'RESOURCE'
		]]>
		<if test="loginId != null">
			and b.createUser = #{loginId}  
		</if>
		<if test="resourceType == 'RESOURCE_NODE'">
			and b.resourceId in (select id from rn_base where rnStatus = 'NORMAL') 
		</if>
		<if test="resourceType == 'ASSET'">
			<!-- and b.resourceId in (select id from asset_info where status = 'NORMAL') --> 
		</if>
		<if test="key != null">
			and if(a.tagType = 'RESOURCE',b.value,a.name) like concat('%',#{key},'%')
		</if>
	</select>
	
	<select id="selectSystemPropertyTags" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.* 
		]]>
		<if test="resourceId != null">
			,(select group_concat(b.`value`) from oss_system_tag_resource b join oss_system_tag c on b.tagId = c.id where c.tagType = 'PROPERTY' and b.tagId = a.id and b.resourceId = #{resourceId}) `value`
		</if>
		<if test="resourceId == null">
			,'' `value`
		</if>
		<![CDATA[
			from oss_system_tag a 
			where a.tagType = 'PROPERTY' and (a.scope = 'ALL' 
		]]>
		<if test="scope != null">
			or a.scope = #{scope}
		</if>
		<![CDATA[
			 ) and a.createUser = #{loginId} 
		]]>
		<if test="id != null">
			and a.id = #{id}
		</if>
	</select>
	<select id="selectSystemPropertyTagValues" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select id, tagId, `value`, (select count(*) from oss_system_tag_resource b join rn_base c on b.resourceId = c.id where b.`value` = a.`value` and c.rnStatus = 'NORMAL' and b.createUser = #{loginId}) resourceCount 
			from oss_system_tag_resource a
			where a.tagId = #{tagId} 
			and a.resourceId in (select id from rn_base where rnStatus = 'NORMAL') 
			and a.createUser = #{loginId} group by a.`value` 
		]]>
	</select>
	
	<insert id="insertSystemTag" parameterType="java.util.HashMap">
		<![CDATA[
			insert into oss_system_tag (tagType,scope,name,createUser) values (#{tagType}, #{scope}, #{name}, #{loginId})
		]]>
		<!-- 
		<foreach collection="values" index="index" item="value" open=" " separator="union all" close=" ">
   			select #{tagType} tagType,#{scope} scope,#{value} name,#{loginId} createUser
			from dual 
			where #{value} not in (select b.name from oss_system_tag b where b.tagType = #{tagType} and b.scope=#{scope} and b.name=#{value}) 
  		</foreach>
  		 -->
		<selectKey keyProperty="tagId" resultType="int" order="AFTER">
			select LAST_INSERT_ID()
		</selectKey>
	</insert>
	
	<update id="updateSystemTagResource" parameterType="java.util.HashMap">
		<![CDATA[
			update oss_system_tag_resource
			set id = #{id}
		]]>
		<if test="name != null">
			, value = #{name}
		</if>
		<![CDATA[
			where id = #{id}
		]]>
	</update>
	<update id="updateSystemTag" parameterType="java.util.HashMap">
		<![CDATA[
			update oss_system_tag
			set id = #{id}
		]]>
		<if test="name != null">
			, name = #{name}
		</if>
		<if test="scope != null">
			, scope = #{scope}
		</if>
		<![CDATA[
			where id = #{id} 
		]]>
	</update>
	
	<delete id="deleteSystemTagResource" parameterType="java.util.HashMap">
		<![CDATA[
			delete from oss_system_tag_resource where id = #{id} 
		]]>
			<if test="loginId != null">
				and createUser = #{loginId} 
			</if>
			<if test="id != null">
				and id = #{id} 
			</if>
			<if test="value != null">
				and value = #{value} 
			</if>
			<if test="tagId != null">
				and tagId = #{tagId} 
			</if>
			<if test="resourceType != null">
				and resourceType = #{resourceType} 
			</if>
			<if test="resourceIds != null">
				and concat(',',#{resourceIds},',') like concat('%,',resourceId,',%')
			</if>
	</delete>
	<delete id="deleteSystemTag" parameterType="java.util.HashMap">
		<![CDATA[
			delete from oss_system_tag where id = #{id} and createUser = #{loginId} 
		]]>
	</delete>
	
	<select id="selectSystemTagModules" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select distinct(a.value),a.tagId,b.tagType,b.scope from oss_system_tag_resource a 
			left join oss_system_tag b on a.tagId = b.id 
		]]>
		<if test="resourceType == 'RESOURCE_NODE'">
			left join rn_base c on c.id = a.resourceId and c.rnStatus = 'NORMAL'
		</if>
		<if test="resourceType == 'ASSET'">
			left join asset_info c on c.id = a.resourceId and c.status = 'NORMAL'
		</if>
		<where>
			 <if test="loginId != null">
				and a.createUser = #{loginId}
			</if>
			<if test="tagType != null">
				and b.tagType = #{tagType}   
			</if>
			<if test="scope != null">
				and b.scope = #{scope} 
			</if>
			<if test="resourceId != null">
				and concat(',',#{resourceId},',') like concat('%,',a.resourceId,',%') 
			</if>
			<if test="nodeType != null">
				and c.subType = #{nodeType} 
			</if>
		</where>
	</select>
	
	<select id="selectSystemTagResourceGroup" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.tagId,b.subType,count(*) count from oss_system_tag_resource a 
			left join rn_base b on a.resourceId = b.id 
			where a.tagId = #{tagId} and a.createUser = #{loginId} and b.rnStatus = 'NORMAL' 
		]]>
		<if test="value != null">
			 and a.value =#{value} 
		</if>
		<![CDATA[
			 group by b.subType  
		]]>
	</select>
	
	<select id="selectSystemTagResourceType" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.* from oss_dict a where a.dictType = 'TAG_RESOURCE_TYPE' order by a.displayOrder 
		]]>
	</select>
	
	<insert id="insertSystemTagResource" parameterType="java.util.HashMap">
		 <![CDATA[
			insert into oss_system_tag_resource (tagId,resourceId,value,resourceType,createUser) 
		 ]]>
		 <if test="list != null">
			 <foreach collection="list" index="index" item="tagItem" open=" " separator="union all" close=" ">
			 	<if test="resourceType == 'ASSET'">
				 	select (select id from oss_system_tag where name = #{name}) tagId,a.id,#{tagItem.value} value,#{resourceType} resourceType,#{loginId} loginId 
				 		from asset_info a 
				 		where 
				 			concat(',',#{resourceIds},',') like concat('%,',a.id,',%') 
							and #{tagItem.value} not in (select b.value from oss_system_tag_resource b where b.resourceId = a.id and value = #{tagItem.value})
				 </if>
				 <if test="resourceType == 'RESOURCE_NODE'">
				 	select (select id from oss_system_tag where name = #{name}) tagId ,a.id,#{tagItem.value} value,#{resourceType} resourceType,#{loginId} loginId 
			   			from rn_base a
						where 
							concat(',',#{resourceIds},',') like concat('%,',a.id,',%') 
							and #{tagItem.value} not in (select b.value from oss_system_tag_resource b where b.resourceId = a.id and value = #{tagItem.value})
				 </if>
				 <if test="resourceType == 'MONITOR_HOST'">
				 	select (select id from oss_system_tag where name = #{name}) tagId,a.id,#{tagItem.value} value,#{resourceType} resourceType,#{loginId} loginId 
				 		from monitor_host a 
				 		where 
				 			concat(',',#{resourceIds},',') like concat('%,',a.id,',%') 
							and #{tagItem.value} not in (select b.value from oss_system_tag_resource b where b.resourceId = a.id and value = #{tagItem.value})
				 </if>
			 </foreach>
		</if>
		<if test="list == null">
			<if test="resourceType == 'ASSET' or resourceType == 'MONITOR_HOST'">
				select (select id from oss_system_tag where name = #{name}) tagId,0 id,#{value} value,#{resourceType} resourceType,#{loginId} loginId
			</if>
			<if test="resourceType == 'RESOURCE_NODE'">
				select (select id from oss_system_tag where name = #{name}) tagId,#{resourceId} id,#{value} value,#{resourceType} resourceType,#{loginId} loginId from dual
				where not exists (select * from oss_system_tag_resource c where c.tagId = tagId and c.value = #{value} and c.createUser = #{loginId})
			</if>
		 </if>
		 <selectKey keyProperty="tagResourceId" resultType="int" order="AFTER">
			select LAST_INSERT_ID()
		 </selectKey>
	</insert>
	
	<select id="selectSystemTagResources" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select b.*,c.name typeName from oss_system_tag_resource a  
		]]>
		<if test="resourceType == 'RESOURCE_NODE'">
			join rn_base b on a.resourceId = b.id and b.rnStatus = 'NORMAL' 
		</if>
		<if test="resourceType == 'ASSET'">
			join asset_info b on a.resourceId = b.id and b.status = 'NORMAL'
			join asset_type c on b.typeId = c.id  and  c.status= 'NORMAL'
		</if>
		<where>
			<if test="tagId != null">
				and a.tagId = #{tagId} 
			</if>
			<if test="value != null">
				and a.value = #{value} 
			</if>
			<if test="loginId != null">
				and a.createUser =#{loginId}
			</if>
		</where>
		<if test="beginIndex != null">
			limit #{beginIndex},#{perPage}
		</if>
	</select>
	 
	<select id="selectSystemTagResourcesCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select count(a.*) totalSize from oss_system_tag_resource a 
		]]>
		<if test="resourceType == 'RESOURCE_NODE'">
			join rn_base b on a.resourceId = b.id and b.rnStatus = 'NORMAL' 
		</if>
		<if test="resourceType == 'ASSET'">
			join asset_info b on a.resourceId = b.id and status = 'NORMAL'
		</if>
		<where>
			<if test="tagId != null">
				and a.tagId = #{tagId} 
			</if>
			<if test="value != null">
				and a.value = #{value} 
			</if>
			<if test="loginId != null">
				and a.createUser =#{loginId}
			</if>
		</where>
	</select>
	
	<select id="selectSystemResourceTags" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.* from oss_system_tag_resource a join oss_system_tag b on a.tagId = b.id 
			where a.resourceId in (#{resourceId}) 
		]]>
		<if test="tagType != null">
			and b.tagType = #{tagType} 
		</if>
		<if test="loginId != null">
			and a.createUser = #{loginId}
		</if>
	</select>
	
	<select id="selectProcessModulesCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<!-- 
			select count(*) totalSize 
			from process_module a join process_module_type b on a.id=b.id 
		 -->
		<![CDATA[
			select count(*) totalSize from (
			select a.*,
					(select count(c.subType) from process_module_type c where c.id=a.id and a.type='WORK_ORDER_CHECK') resouceCount ,
					(select count(c.subType) from process_module_type c where c.id=a.id and a.type='REQUEST_APPROVE') requestCount,
					(select count(c.subType) from process_module_type c where c.id=a.id and a.type='OPERATE_APPROVE') operateCount  
			from process_module a join process_module_type b on a.id=b.id 
		]]>
		<where>
			<if test="name != null">
				<![CDATA[ and a.name like concat('%',#{name},'%')]]>
			</if>
			<if test="department != null and department != '-1'">
				and concat(',',#{department},',') like concat('%,',b.department,',%')
			</if>
			<if test="type != null">
				and a.type = #{type}
			</if>
			<if test="subType != null">
				and ( b.subType in (#{subType}) or b.subType = 'All' )			
			</if>
			<if test="begin_create_ts != null">
				<![CDATA[ and a.createTs >= #{begin_create_ts}]]>
			</if>
			<if test="end_create_ts != null">
				<![CDATA[ and a.createTs <= #{end_create_ts}]]>
			</if>
			<if test="moduleId != null">
				and a.id = #{moduleId}
			</if>
		</where>
		<![CDATA[ 
			group by a.id  ) r
		]]>
	</select>
	<select id="selectProcessModules" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.*,
					(select count(c.subType) from process_module_type c where c.id=a.id and a.type='WORK_ORDER_CHECK') resouceCount,
					(select count(c.subType) from process_module_type c where c.id=a.id and a.type='REQUEST_APPROVE') requestCount,
					(select count(c.subType) from process_module_type c where c.id=a.id and a.type='OPERATE_APPROVE') operateCount 
			from process_module a join process_module_type b on a.id=b.id 
		]]>
		<where>
			<if test="name != null">
				<![CDATA[ and a.name like concat('%',#{name},'%')]]>
			</if>
			<if test="department != null and department != '-1'">
				and concat(',',#{department},',') like concat('%,',b.department,',%')
			</if>
			<if test="type != null">
				and a.type = #{type}
			</if>
			<if test="subType != null">
				and ( b.subType in (#{subType}) or b.subType = 'All' )			</if>
			<if test="begin_create_ts != null">
				<![CDATA[ and a.createTs >= #{begin_create_ts}]]>
			</if>
			<if test="end_create_ts != null">
				<![CDATA[ and a.createTs <= #{end_create_ts}]]>
			</if>
			<if test="moduleId != null">
				and a.id = #{moduleId}
			</if>
		</where>
		<![CDATA[ 
			group by a.id  
		]]>
	 	<if test="beginIndex != null">
			limit #{beginIndex},#{perPage}
		</if>
	</select>
	<update id="updateProcessModule" parameterType="java.util.HashMap">
		<![CDATA[
			update process_module 
			set id = #{id}, createTs = localtime()  
		]]>
			<if test="name != null">
				, name = #{name}
			</if>
			<if test="type != null">
				, type = #{type} 
			</if>
			<if test="description != null">
				, description = #{description}
			</if>
		<![CDATA[
			where id = #{id} 
		]]>
	</update>
	<select id="selectProcessModuleTypesCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<!-- select count(*) totalSize from process_module_type a join process_module b on a.id=b.id  -->
		<![CDATA[
			select count(*) totalSize from process_module_type a join process_module b on a.id=b.id 
		]]>
		<where>
			<if test="type != null">
				and b.type=#{type} 
			</if>
			<if test="id != null">
				and a.id = #{id}
			</if>
		</where>
	</select>
	<select id="selectProcessModuleTypes" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.*,
				case #{type} 
					when 'OPERATE_APPROVE' then 
						ifnull((select c.name from operation_template c where c.id=a.subType),'--')  
				 	else 
				 		ifnull((select c.dictName from oss_dict c where c.dictId=a.subType and c.dictType=concat('MODULE_',#{type},'_RESOURCE_TYPE')),'--')
				 	end subTypeName
				from process_module_type a join process_module b on a.id=b.id 
		]]>
		<where>
			<if test="type != null">
				and b.type=#{type} 
			</if>
			<if test="department != null">
				and concat(',',#{department},',') like concat('%,',a.department,',%')
			</if>
			<if test="id != null">
				and a.id = #{id}
			</if>
		</where>
	 	<if test="beginIndex != null">
			limit #{beginIndex},#{perPage}
		</if>
	</select>
	
	<select id="selectProcessModuleTypeByDepartment" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select count(*) totalSize from process_module_type a 
			where (a.subType = #{subType} or a.subType = 'ALL') and  
			(a.department = (select department from OSS_SYSTEM_User where loginId = #{CREATE_USER} ) or a.department = '-1') and a.status = 1 
		]]>
	</select>
	<select id="selectProcessModuleTypeDepartments" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.department from process_module_type a  join process_module b on a.id=b.id  where b.type=#{type} group by a.department 
		]]>
	</select>
	
	<insert id="insertProcessModule" parameterType="java.util.HashMap">
		<![CDATA[
			insert into process_module(name,type,description,beginTask)
			values(#{name},#{type},#{description},#{beginTask})
		]]>
		<selectKey keyProperty="moduleId" resultType="int" order="AFTER">
			select LAST_INSERT_ID()
		</selectKey>
	</insert>
	<delete id="deleteProcessModule" parameterType="java.util.HashMap">
		<![CDATA[
			delete from process_module where id = #{moduleId} 
		]]>
	</delete>
	<insert id="insertProcessModuleType" parameterType="java.util.HashMap">
		<![CDATA[
			insert into process_module_type(id,subType,status,department,weight) values(#{id},#{subType},#{status},#{department},#{weight}) 
		]]>
	</insert>
	<delete id="deleteProcessModuleType" parameterType="java.util.HashMap">
		<![CDATA[
			delete from process_module_type where id = #{moduleId} 
		]]>
	</delete>
	<update id="updateProcessModuleType" parameterType="java.util.HashMap">
		<![CDATA[
			update process_module_type
			set id = #{id}
		]]>
			<if test="status != null">
				, status = #{status}
			</if>
			<if test="department != null">
				, department = #{department}
			</if>
			<if test="weight != null">
				, weight = #{weight}
			</if>
		<![CDATA[
			where id = #{id} and subType=#{subType} and department = #{department}
		]]>
	</update>
	<insert id="insertProcessModuleTask" parameterType="java.util.HashMap">
		<![CDATA[
			insert into process_module_task(taskId,refModule,name,type,preTask,nextTask,description,checkContext)
			values(#{taskId},#{refModule},#{name},#{type},#{preTask},#{nextTask},#{description},#{checkContext})
		]]>
		<selectKey keyProperty="id" resultType="int" order="AFTER">
			select LAST_INSERT_ID()
		</selectKey>
	</insert>
	<delete id="deleteProcessModuleTask" parameterType="java.util.HashMap">
		<![CDATA[
			delete from process_module_task where refModule = #{moduleId} 
		]]>
	</delete>
	<select id="selectProcessModuleTaskDetails" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.* from process_module_task_detail a where a.id=#{id} 
		]]>
	</select>
	<insert id="insertProcessModuleTaskDetail" parameterType="java.util.HashMap">
		<![CDATA[
			insert into process_module_task_detail(id,taskType,refUser,refDepartment,refRole,subType)
			values(#{id},#{taskType},#{refUser},#{refDepartment},#{refRole},#{subType}) 
		]]>
	</insert>
	<delete id="deleteProcessModuleTaskDetail" parameterType="java.util.HashMap">
		<![CDATA[
			delete from process_module_task_detail where id in (select id from process_module_task where refModule =#{moduleId}) 
		]]>
	</delete>
	
	
	
	
	
	<!-- osdeploy host deploy detail-->
	<select id="selectTpmfosdNodeDeployDetailCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		select count(*) totalSize from tpmfosd_node_deploy_detail a
		<where>
			<if test="nodeid != null ">
				and a.nodeid = #{nodeid}
			</if>
			<if test="taskid != null ">
				and a.taskid = #{taskid}
			</if>

		</where>
	</select> 
	<select id="selectTpmfosdNodeDeployDetail" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		select *  from tpmfosd_node_deploy_detail a
		<where>
			<if test="nodeid != null ">
				and a.nodeid = #{nodeid}
			</if>
			<if test="taskid != null ">
				and a.taskid = #{taskid}
			</if>
		</where>
			order by a.id desc
			<if test="beginIndex != null">
				limit #{beginIndex},#{perPage}
			</if>
	</select>
	
	<update id="updateTpmfosdNodeDeploy" parameterType="java.util.HashMap">
		<![CDATA[
		update tpmfosd_node_deploy set nodeId = #{nodeId}
		]]>
		<if test="status != null">
			, status = #{status}
		</if>
		<if test="poolId != null">
			, poolId = #{poolId}
		</if>
		<if test="profileName != null">
			, profileName = #{profileName}
		</if>
		<if test="profileName != null">
			, profileName = #{profileName}
		</if>
		<if test="softwareName != null">
			, softwareName = #{softwareName}
		</if>
		<if test="blankDisk != null">
			, blankDisk = #{blankDisk}
		</if>
		<if test="taskId != null">
			, taskId = #{taskId}
		</if>
		<if test="loginId != null">
			, updateUser = #{loginId}
		</if>
		where nodeId = #{nodeId}
	</update>
	
	<select id="selectAllEventReports" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select b.*,(select count(*) from eventreporttriggermap t where t.reportId=b.id) triggerCount 
				from eventreportinfo b 
		]]>
		<if test="beginIndex != null">
			limit #{beginIndex},#{perPage}
		</if>
	</select>
	<select id="selectAllEventReportsCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select count(*) totalSize 
			from eventreportinfo b 
		]]>
	</select>
	
	<insert id="insertEventReport" parameterType="java.util.HashMap">
		<![CDATA[
		insert into eventreportinfo(name,description) values(#{name},#{description}) 
		]]>
		<selectKey keyProperty="reportId" resultType="int" order="AFTER">
			select LAST_INSERT_ID()
		</selectKey>
	</insert>
	<delete id="deleteEventReport" parameterType="java.util.HashMap">
		<![CDATA[
		delete from eventreportinfo where id = #{reportId}
		]]>
	</delete>
	<update id="updateEventReport" parameterType="java.util.HashMap">
		<![CDATA[
		update eventreportinfo 
		set id = #{reportId}
		]]>
		<if test="name != null">
			, name = #{name}
		</if>
		<if test="description != null">
			, description = #{description}
		</if>
		<![CDATA[
		where id = #{reportId}
		]]>
	</update>
	<delete id="deleteEventReportTriggers" parameterType="java.util.HashMap">
		<![CDATA[
		delete from eventreporttriggermap where reportId = #{reportId}
		]]>
	</delete>
	<insert id="insertEventReportTriggers" parameterType="java.util.HashMap">
		<![CDATA[
		insert into eventreporttriggermap(reportId,triggerId) 
		${valueSqlString}
		]]>
	</insert>
	<select id="selectEventReportTriggers" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select b.*,z.description,z.expression,z.priority,z.status,z.templateId,z.displayName
				from eventreporttriggermap b left join ZABBIX_Template_Trigger z on b.triggerId=z.triggerId 
		]]>
		<where>
			<if test="reportId != null">
				and b.reportId = #{reportId}
			</if>
		</where>
		<if test="beginIndex != null">
			limit #{beginIndex},#{perPage}
		</if>
	</select>
	<select id="selectEventReportTriggersCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select count(*) totalSize 
			from eventreporttriggermap b 
		]]>
		<where>
			<if test="reportId != null">
				and b.reportId = #{reportId}
			</if>
		</where>
	</select>
	<select id="selectLparInstances" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.id,a.type,a.name,a.hostName,
			 b.* ,
			 c.zabbixAgentStatus,c.saltAgentStatus,c.connectStatus,c.agentId, f.osIpAddress,f.osUserName,f.osPassword ,
			(select p.`name` from resourcepool p where p.id=b.poolId) poolName,
			(select max(interface) from rn_ext_interface e where e.nodeId=a.id and e.isShow=1) defaultInterface 
			from rn_base a 
			join rn_ext_lpar b on a.id=b.nodeId
			left join rn_ext_systeminfo c on a.id=c.nodeId 
			left join rn_ext_osinfo f on a.id=f.nodeId 
			left join rn_ext_physical d on b.parentNodeId=d.nodeId 
		]]>
		<if test="tagId != null">
			join oss_system_tag_resource r on r.resourceId  = a.id 
		</if>
		<where>
			<![CDATA[ and a.type='LPAR' ]]>
			<if test="id != null">
				and a.id = #{id}
			</if>
			<if test="name != null">
				<![CDATA[ and (a.hostName like concat('%',#{name},'%') or a.defaultName like concat('%',#{name},'%') or a.name like concat('%',#{name},'%'))]]>
			</if>
			<if test="tagId != null">
				and r.tagId = #{tagId} 
			</if>
			<if test="parentNodeId != null">
				and b.parentNodeId = #{parentNodeId}
			</if>
		</where>
		<if test="beginIndex != null">
			limit #{beginIndex},#{perPage}
		</if>
	</select>
	<select id="selectLparInstancesCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select count(*) totalSize 
			from rn_base a 
			join rn_ext_lpar b on a.id=b.nodeId 
		]]>
		<if test="tagId != null">
			join oss_system_tag_resource r on r.resourceId  = a.id 
		</if>
		<where>
			<![CDATA[ and a.type='LPAR' ]]>
			<if test="id != null">
				and a.id = #{id}
			</if>
			<if test="name != null">
				<![CDATA[ and (a.hostName like concat('%',#{name},'%') or a.defaultName like concat('%',#{name},'%') or a.name like concat('%',#{name},'%'))]]>
			</if>
			<if test="tagId != null">
				and r.tagId = #{tagId} 
			</if>
			<if test="parentNodeId != null">
				and b.parentNodeId = #{parentNodeId}
			</if>
		</where>
	</select>
	<insert id="insertLparInstance" parameterType="java.util.HashMap">
		<![CDATA[
			insert into rn_ext_lpar (nodeId,poolId,region,state,unitType,serialNumber,parentNodeId) 
				values (#{nodeId},#{poolId},#{region},#{state},#{unitType},#{serialNumber},#{parentNodeId}) 
		]]>
	</insert>
	<update id="updateLparInstance" parameterType="java.util.HashMap">
		<![CDATA[
			update rn_ext_lpar set nodeId=#{nodeId} 
		]]>
		<if test="poolId != null">
			, poolId = #{poolId}
		</if>
		<if test="region != null">
			, region = #{region} 
		</if>
		<if test="state != null">
			, state = #{state}
		</if>
		<if test="unitType != null">
			, unitType = #{unitType}
		</if>
		<if test="serialNumber != null">
			, serialNumber = #{serialNumber}
		</if>
		<if test="parentNodeId != null">
			, parentNodeId = #{parentNodeId}
		</if>
		<![CDATA[	
			where nodeId = #{nodeId}
		]]>
	</update>
	<select id="selectHmc" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.* from resourcenodehmc a 
		]]>
		<where>
			<if test="id != null">
				and a.id = #{id}
			</if>
		</where>
		<if test="beginIndex != null">
			limit #{beginIndex},#{perPage}
		</if>
	</select>
	<select id="selectHmcCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select count(*) totalSize from resourcenodehmc a 
		]]>
		<where>
			<if test="id != null">
				and a.id = #{id}
			</if>
		</where>
	</select>
	<select id="selectRNBase" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.* from (
			(
				select a.id,a.name,a.hostName,a.defaultName,ifnull(c.resourceId,0) existStatus,#{subType} rnType 
				from rn_base a 
				left join (select b.resourceId from oss_system_user_data b where b.userId=#{loginId} and b.type=#{subType}) c on a.id= c.resourceId 
		]]>
		<if test="type !=null">
			<if test="type == 'COMPUTE' or type == 'BARE'">
				<![CDATA[
					join rn_ext_physical d on a.id=d.nodeId 
					join rn_ext_compute e on a.id = e.nodeId 
					join rn_ext_mgmtinfo x on a.id = x.nodeId
					join rn_ext_osinfo o on a.id = o.nodeId 
				]]>
			</if>
			<if test="type == 'LPAR'">
				<![CDATA[
					join rn_ext_lpar e on a.id=e.nodeId
					left join rn_ext_physical d on e.parentNodeId=d.nodeId 
				]]>
			</if>
			<if test="type == 'VIR_INSTANCE'">
				<![CDATA[
					join rn_ext_vir_instance d on a.id = d.nodeId 
					left join rn_ext_osinfo f on a.id = f.nodeId
				]]>
			</if>
			<if test="type == 'VIR_FLAVOR'">
				<![CDATA[ join rn_ext_vir_flavor d on a.id = d.nodeId ]]>
			</if>
			<if test="type == 'VIR_IMAGE'">
				<![CDATA[ join rn_ext_vir_image d on a.id = d.nodeId ]]>
			</if>
			<if test="type == 'VIR_NETWORK'">
				<![CDATA[ join rn_ext_vir_network d on a.id = d.nodeId ]]>
			</if>
			<if test="type == 'VIR_VOLUME'">
				<![CDATA[ join rn_ext_vir_volumes d on a.id = d.nodeId ]]>
			</if>
		</if>
		<where>
			<if test="type !=null">
				<![CDATA[
					and a.type = #{type} 					
				]]>
				<!-- 根据资源池查询 -->
				<if test="type == 'COMPUTE' and poolSubType != null">
					and d.poolId in (select id from resourcepool where poolType = 'COMPUTE' and concat(',',#{poolSubType},',') like concat('%,',type,',%')) 
				</if>	
				<if test="type == 'VIR_INSTANCE'">
					and d.region in (select regionName from resourcepool where poolType = 'COMPUTE' and type in ('KVM','VMWARE') and regionName is not null)
				</if>
					
				<!-- 根据权重查询 -->
				<if test="type =='COMPUTE' or type =='BARE'">
					<if test="datacenterId != null">
						and d.dataCenterId = #{datacenterId}
					</if>
					<if test="poolId != null and poolId != 0">
						and d.poolId = #{poolId}
					</if>
					<if test="countSize == 10 and loginId != null">
						and d.poolId in (select poolId from resourcepoolusers where loginId = #{loginId})
					</if>
					<if test="countSize == 100 and loginId != null">
						and d.poolId in (select a.poolId 
										from resourcepooldepartment a,
											oss_system_user b,
											oss_system_department c 
										where loginId = #{loginId}
											and a.groupId = c.refGroupId
											and b.department = c.id)
					</if>					
					<if test="businessAddress != null">
						<![CDATA[ and 
							(d.nodeId in 
							(select i.nodeId from rn_ext_interface i  left join rn_ip_map j on i.ipaddress = j.sourceip 
							where concat('%.',i.ipAddress,'.%') like concat('%.',#{businessAddress},'.%') or concat('%.',j.mapIp,'.%') like concat('%.',#{businessAddress},'.%')) 
							or concat('%.',o.osIpAddress,'.%') like concat('%.',#{businessAddress},'.%') 
							or concat('%.',x.ipAddress,'.%') like concat('%.',#{businessAddress},'.%')) 
						]]>
					</if>							
				</if>
				<if test="type == 'VIR_INSTANCE' or type == 'VIR_FLAVOR' or type == 'VIR_IMAGE' or type == 'VIR_NETWORK' or type == 'VIR_VOLUME'">
					<if test="region != null">
						and d.region=#{region} 
					</if>
					<if test="countSize == 10 and loginId != null">
						and d.region in (select t.regionName from resourcepool t,resourcepoolusers k where t.id = k.poolId and t.regionName is not null and loginId = #{loginId}) 	
					</if>
					<if test="countSize == 100 and loginId != null">
						and d.region in (select t.regionName 
										from resourcepool t,
											resourcepooldepartment a,
											oss_system_user b,
											oss_system_department c 
										where loginId = #{loginId} 
											and a.groupId = c.refGroupId
											and b.department = c.id
											and a.poolId = t.id
											and t.regionName is not null) 
					</if>
					<if test="type == 'VIR_INSTANCE' and businessAddress != null">
						<![CDATA[ and ( concat('.',f.osipAddress,'.') like concat('%.',#{businessAddress},'.%') or a.id in (select i.nodeId from rn_ext_interface i where concat('.',i.ipAddress,'.') like concat('%.',#{businessAddress},'.%'))) ]]>
					</if>
				</if>
			</if>
			<if test="subType != null and subType != 'PHYSICAL' and subType != 'POWER' and subType != 'VMWARE'">
				and a.subType = #{subType}
			</if>
			<if test="name != null">
				<![CDATA[ and (a.name like concat('%',#{name},'%') or a.defaultName like concat('%',#{name},'%') or a.hostName like concat('%',#{name},'%')) ]]>
			</if>
		</where>
		<![CDATA[
			) a) where a.rnType=#{subType}  
		]]>
		<![CDATA[ 
			union all 
			select d.* from (
				(select a.id,a.name,'' hostName,'' defaultName,ifnull(c.resourceId,0) existStatus,'OPERATION' rnType from operationservicetemplate a 
					left join (select b.resourceId from oss_system_user_data b where b.userId=#{loginId} and b.type=#{subType}) c on a.id= c.resourceId 
				]]>
					<where>
						<if test="name != null">
							<![CDATA[ and a.name like concat('%',#{name},'%') ]]>
						</if>					
					</where>
				<![CDATA[			
				) d
			)
			where d.rnType=#{subType} 
		]]>
	</select>
	<select id="selectRNBaseDetail" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select * from rn_base a where id = #{id} 
		]]>
	</select>
	<delete id="deleteRNBase" parameterType="java.util.HashMap">
		<![CDATA[
			update rn_base set rnStatus = 'DELETED' where id = #{id} 
		]]>
	</delete>
	<insert id="insertRNBase" parameterType="java.util.HashMap">
		<![CDATA[
			insert into rn_base 
				(id,type,subType,name,hostName,defaultName,createUser,createTs,updateUser,updateTs) 
			select 
				#{id},#{type},type,#{name},#{hostName},#{defaultName},#{createUser},localtime(),#{updateUser},localtime()
				from resourcepool 
				where id = #{poolId} 
		]]>
		<!-- 
		<selectKey keyProperty="nodeId" resultType="int" order="AFTER">
			select LAST_INSERT_ID()
		</selectKey>
		 -->
	</insert>
	<update id="updateRNBase" parameterType="java.util.HashMap">
		<![CDATA[
			update rn_base set updateTs=localtime() 
		]]>
		<if test="name != null">
			, name = #{name}
		</if>
		<if test="hostName != null">
			, hostName = #{hostName} 
		</if>
		<if test="defaultName != null">
			, defaultName = #{defaultName}
		</if>
		<if test="loginId != null">
			, updateUser = #{loginId}
		</if>
		<![CDATA[	
			where id = #{id} 
		]]>
	</update>
	<select id="selectRNGroupFilter" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.subType,count(*) count  from rn_base a 
					left join rn_ext_osinfo b on a.id = b.nodeId 
					where a.rnStatus='NORMAL' 
						  and (a.name like concat('%',#{key},'%') 
						  		or a.hostName like concat('%',#{key},'%') 
						  		or a.defaultName like concat('%',#{key},'%') 
						  		or b.sysMacAddr like concat('%',#{key},'%') 
						  		or a.id in (
								  		select a.resourceId from oss_system_tag_resource a 
										left join oss_system_tag b on a.tagId = b.id 
										where b.tagType = 'RESOURCE' and a.createUser = #{loginId} and a.value like concat('%',#{key},'%') 
								  )
							) group by a.subType 
		]]>
	</select>
	
	<select id="selectSystemUserLogs" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.*,b.name userName from oss_user_log a left join oss_system_user b on a.user = b.loginId 
		]]>
		<where>
			<if test="id != null">
				and a.id = #{id} 
			</if>
			<if test="loginId != null">
				and a.user = #{loginId} 
			</if>
			<if test="beginTs != null">
				<![CDATA[ and ts >= #{beginTs}]]>
			</if>
			<if test="endTs != null">
				<![CDATA[ and ts <= #{endTs}]]>
			</if>
			<if test="subType != null">
				and concat(',',#{subType},',') like concat('%,',a.subType,',%')
			</if>
		</where>
		<![CDATA[
			order by a.ts desc 
		]]>
		<if test="beginIndex != null">
			limit #{beginIndex},#{perPage}
		</if>
	</select>
	<select id="selectSystemUserLogsCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select count(*) totalSize from oss_user_log a 
		]]>
		<where>
			<if test="id != null">
				and a.id = #{id} 
			</if>
			<if test="loginId != null">
				and a.user = #{loginId} 
			</if>
			<if test="beginTs != null">
				<![CDATA[ and ts >= #{beginTs}]]>
			</if>
			<if test="endTs != null">
				<![CDATA[ and ts <= #{endTs}]]>
			</if>
			<if test="subType != null">
				and concat(',',#{subType},',') like concat('%,',a.subType,',%')
			</if>
		</where>
	</select>
	
	<select id="selectFileNo" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		select * from oss_file_no where type=#{type}
	</select> 
	<update id="updateFileNo" parameterType="java.util.HashMap">
		<![CDATA[
		update oss_file_no set num = #{num},updated=localtime() where type = #{type} 
		]]>
	</update>
	
	
	<insert id="insertSystemLog" parameterType="java.util.HashMap">
		<![CDATA[
		insert into oss_user_log(request,response,user,type,subtype)
		values(#{request},#{response},#{user},#{type},#{subType})
		]]>
	</insert>
	
	<!-- 创建自动化运维 insert假数据 -->
	<insert id="insertOperationTaskTemplate" parameterType="java.util.HashMap">
		<![CDATA[
		INSERT INTO OperationServiceTaskTemplate(name,type,description,icon,createUser,createDate,isDefault,baseTemplateId)
		select name,type,description,icon,createUser,createDate,isDefault,id
		from OperationServiceTemplate 
		where id = #{baseTemplateId}
		]]>
		<selectKey keyProperty="refTemplateId" resultType="int" order="AFTER">
			select LAST_INSERT_ID()
		</selectKey>
	</insert>
	<insert id="insertOperationTaskTemplateSource" parameterType="java.util.HashMap">
		<![CDATA[
		INSERT INTO operationservicetasktemplate_source(refTemplateId,systemType,sourceUrl,appUrl)
		select #{refTemplateId},systemType,sourceUrl,appUrl
		from operationservicetemplate_source 
		where refTemplateId = #{baseTemplateId}
		]]>
	</insert>
	<insert id="insertOperationTask" parameterType="java.util.HashMap">
		<![CDATA[
		INSERT INTO OperationServiceTask(name,parent_id,createUser,refTemplate,status,param)
		values(#{name},#{parent_id},#{createUser},#{refTemplateId},#{status},#{param})
		]]>
		<selectKey keyProperty="taskId" resultType="int" order="AFTER">
			select LAST_INSERT_ID()
		</selectKey>
	</insert>
	<insert id="insertOperationTaskResource" parameterType="java.util.HashMap">
		<![CDATA[
		INSERT INTO OperationServiceTaskResource(refTaskId,name,minionName,result,createUser,status)
		values(#{taskId},#{name},#{minionName},#{result},#{createUser},#{status})
		]]>
		<selectKey keyProperty="taskResultId" resultType="int" order="AFTER">
			select LAST_INSERT_ID()
		</selectKey>
	</insert>
	
	
	<select id="selectStorageSanSwitchPort" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.*,b.name,ifnull(c.hostname,c.name) nodeName,d.osipaddress
			from rn_ext_storage_sanswitch_port a
				left join rn_ext_wwn b on a.wwn = b.wwn and b.name != 'host'
				left join rn_base c on c.id = b.nodeid
        		left join rn_ext_osinfo d on d.nodeid = c.id 
		]]>
		<where>
			<if test="nodeId != null">
				and a.nodeId = #{nodeId} 
			</if>
			<if test="wwn != null">
				and concat(':',a.wwn,':') like concat('%:',#{wwn},':%') 
			</if>
		</where>
        order by a.slot,a.port
	</select>
	<insert id="insertStorageSanSwitchPort" parameterType="java.util.HashMap">
		<![CDATA[
		insert into rn_ext_storage_sanswitch_port(nodeId,`index`,slot,port,speed,state,proto,porttype,wwn)
		values(#{nodeId},#{index},#{slot},#{port},#{speed},#{state},#{proto},#{porttype},#{wwn})
		]]>
	</insert>
	<delete id="deleteStorageSanSwitchPort" parameterType="java.util.HashMap">
		<![CDATA[
		delete from rn_ext_storage_sanswitch_port where nodeId = #{nodeId}
		]]>
	</delete>
	<insert id="insertRnExtWwn" parameterType="java.util.HashMap">
		<![CDATA[
		insert into rn_ext_wwn(nodeId,name,wwn)
		values(#{nodeId},#{name},#{wwn})
		]]>
	</insert>
	<delete id="deleteRnExtWwn" parameterType="java.util.HashMap">
		<![CDATA[
		delete from rn_ext_wwn where nodeId = #{nodeId} and name = #{name}
		]]>
	</delete>
	
	<select id="selectResourceEventDispatch" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select * from oss_resource_event_dispatch where concat(',',#{ids},',') like concat('%,',id,',%') and type = #{type} order by source
		]]>
	</select>
	<insert id="insertResourceEventDispatch" parameterType="java.util.HashMap">
		<foreach collection="tactics" index="i" item="item" open=" " separator=";" close=" ">
   			<if test="item.target != null">
	   			<![CDATA[
					insert into oss_resource_event_dispatch (id,type,source,target) values 
				]]>
				<foreach collection="item.target" index="j" item="itemTarget" open=" " separator="," close=" ">
		   			(#{id},#{type},#{item.source},#{itemTarget})
		  		</foreach>
	  		</if>
  		</foreach>
	</insert>
	<update id="updateResourceEventDispatch" parameterType="java.util.HashMap">
		<foreach collection="tactics" index="i" item="item" open=" " separator=";" close=" ">
			<foreach collection="item.target" index="j" item="itemTarget" open=" " separator=";" close=" ">
	   			update oss_resource_event_dispatch set target = #{itemTarget} where id = #{id} and type = #{type} and source = #{item.source}
	  		</foreach>
  		</foreach>
	</update>
	<delete id="deleteResourceEventDispatch" parameterType="java.util.HashMap">
		<![CDATA[
			delete from oss_resource_event_dispatch where id = #{id} and type = #{type}
		]]>
	</delete>
	
	<select id="selectResourceEventDispatchSms" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select * from oss_resource_event_dispatch_sms where concat(',',#{ids},',') like concat('%,',id,',%') and type = #{type} 
		]]>
		<if test="countSize != 1000 and loginId != null">
			and concat(',',#{loginId},',') like concat('%,',smsUser,',%') 
		</if>
		<![CDATA[
			order by source
		]]>
	</select>
	<insert id="insertResourceEventDispatchSms" parameterType="java.util.HashMap">
		<foreach collection="tacticsSms" index="i" item="item" open=" " separator=";" close=" ">
   			<if test="item.smsUsers != null">
	   			<![CDATA[
					insert into oss_resource_event_dispatch_sms (id,type,source,smsUser) values 
				]]>
				<foreach collection="item.smsUsers" index="j" item="itemSmsUser" open=" " separator="," close=" ">
		   			(#{id},#{type},#{item.source},#{itemSmsUser})
		  		</foreach>
	  		</if>
  		</foreach>
	</insert>
	<delete id="deleteResourceEventDispatchSms" parameterType="java.util.HashMap">
		<![CDATA[
			delete from oss_resource_event_dispatch_sms where id = #{id} and type = #{type}
		]]>
		<if test="countSize != 1000 and loginId != null">
			and concat(',',#{loginId},',') like concat('%,',smsUser,',%') 
		</if>
	</delete>
	
	<select id="selectResourceSmsDispatchStrategy" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<if test="type == 'VCENTER'">
			<![CDATA[
			select distinct x.smsUser,
				z.phone
			from oss_resource_event_dispatch_sms x,
				oss_system_user z,
				oss_third_alarm_system k
			where x.source = 'VCENTER'
				and x.type = k.type
				and k.ipaddress = #{ipaddress}
				and x.id = k.id
				and x.smsUser = z.loginId
				]]>
		</if>
		<if test="type == 'MGMT'">
			<![CDATA[
			select distinct x.smsUser,
				z.phone
			from oss_resource_event_dispatch_sms x,
				oss_system_user z,
				oss_third_alarm_system k
			where x.source = 'MGMT'
				and x.type = k.type
				and k.ipaddress = #{snmpTrapAgentIp}
				and x.id = k.id
				and x.smsUser = z.loginId
			]]>
		</if>
		<if test="type == 'STORAGEMGMT'">
			<![CDATA[
			select distinct x.smsUser,
				z.phone
			from oss_resource_event_dispatch_sms x,
				oss_system_user z,
				oss_third_alarm_system k
			where x.source = 'STORAGEMGMT'
				and x.type = k.type
				and x.id = k.id
				and k.ipaddress = #{snmpTrapAgentIp}
				and x.smsUser = z.loginId
			]]>
		</if>
		<if test="type == 'ONEAPM'">
			<![CDATA[
			select distinct x.smsUser,
				z.phone
			from oss_resource_event_dispatch_sms x,
				oss_system_user z,
				oss_third_alarm_system k
			where x.source = 'ONEAPM'
				and x.type = k.type
				and x.id = k.id
				and k.ipaddress = #{serverIpAddress}
				and x.smsUser = z.loginId
			]]>
		</if>
		<if test="type == 'ZABBIX'">
			<![CDATA[
			select 1 from dual where 1=2
			]]>
		</if>
	</select>
	
	<select id="selectResourceEventDispatchStrategy" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<if test="type == 'VCENTER'">
			<![CDATA[
			select distinct x.target,
				(select name from resourcepool k where k.id = y.poolid) poolName,
				y.hostName,
				y.systemSubType,
				(select dictname from oss_dict m where m.dictid = y.systemSubType and m.dicttype = 'OS_SYSTEM_TYPE_VERSION') osType,
				y.osIpaddress,
				y.rackInfo
			from oss_resource_event_dispatch x,
				oss_system_user z,
				(select a.id,
						b.poolid,
						a.hostName,
						c.systemSubType,
						e.osIpaddress,
						concat(d.row_,'/',d.column_,'/',d.unum) rackInfo
				from rn_base a,
					rn_ext_physical b,
					rn_ext_systeminfo c,
					rn_ext_rackinfo d,
					rn_ext_osinfo e
				where a.id = b.nodeid
					and a.id = c.nodeid
					and a.id = d.nodeid
					and a.id = e.nodeid
					and e.osipaddress = #{vmwVpxdTargetObj}) y
			where ((x.`type` = 'RESOURCEPOOL'
				and y.poolid = x.id)
				or (x.type != 'RESOURCEPOOL'
				and y.id = x.id))
				and x.source = #{sourceSystem}
				and x.target = #{targetSystem}
				]]>
		</if>
		<if test="type == 'MGMT'">
			<![CDATA[
			select distinct x.target,
				(select name from resourcepool k where k.id = y.poolid) poolName,
				y.hostName,
				y.systemSubType,
				(select dictname from oss_dict m where m.dictid = y.systemSubType and m.dicttype = 'OS_SYSTEM_TYPE_VERSION') osType,
				y.osIpaddress,
				y.rackInfo
			from oss_resource_event_dispatch x,
				(select a.id,
						b.poolid,
						a.hostName,
						c.systemSubType,
						e.osIpaddress,
						concat(d.row_,'/',d.column_,'/',d.unum) rackInfo
				from rn_base a,
					rn_ext_physical b,
					rn_ext_systeminfo c,
					rn_ext_rackinfo d,
					rn_ext_osinfo e,
					rn_ext_mgmtinfo f
				where a.id = b.nodeid
					and a.id = c.nodeid
					and a.id = d.nodeid
					and a.id = e.nodeid
					and a.id = f.nodeid
					and f.ipaddress = #{ipaddress}) y
			where ((x.`type` = 'RESOURCEPOOL'
				and y.poolid = x.id)
				or (x.type != 'RESOURCEPOOL'
				and y.id = x.id))
				and x.source = #{sourceSystem}
				and x.target = #{targetSystem}
			]]>
		</if>
		<if test="type == 'ONEAPM'">
			<![CDATA[
			select distinct x.target,
				'' poolName,
				y.instance_name hostName,
				y.model_type systemSubType,
				'' osType,
				y.ip osIpaddress,
				'' rackInfo
			from oss_resource_event_dispatch x
				openapi_network y
			where x.type != 'RESOURCEPOOL'
				and y.eqp_id = x.id
				and x.source = #{sourceSystem}
				and x.target = #{targetSystem}
				and y.ip = #{ipAddress}
			]]>
		</if>
		<if test="type == 'ZABBIX'">
			<![CDATA[
			select distinct x.target,
				(select name from resourcepool k where k.id = y.poolid) poolName,
				y.hostName,
				y.systemSubType,
				(select dictname from oss_dict m where m.dictid = y.systemSubType and m.dicttype = 'OS_SYSTEM_TYPE_VERSION') osType,
				y.osIpaddress,
				y.rackInfo
			from oss_resource_event_dispatch x,
				(select a.id,
						b.poolid,
						a.hostName,
						c.systemSubType,
						e.osIpaddress,
						concat(d.row_,'/',d.column_,'/',d.unum) rackInfo
				from rn_base a,
					rn_ext_physical b,
					rn_ext_systeminfo c,
					rn_ext_rackinfo d,
					rn_ext_osinfo e
				where a.id = b.nodeid
					and a.id = c.nodeid
					and a.id = d.nodeid
					and a.id = e.nodeid
					and e.osipaddress = #{ipAddress}) y
			where ((x.`type` = 'RESOURCEPOOL'
				and y.poolid = x.id)
				or (x.type != 'RESOURCEPOOL'
				and y.id = x.id))
				and x.source = #{sourceSystem}
				and x.target = #{targetSystem}
			]]>
		</if>
	</select>
	<select id="selectResourceEventDispatchStrategyResourceNodes" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select * from (
				select m.name,m.id,n.osIpAddress,p.id poolId
					from rn_base m,
						rn_ext_osinfo n,
						rn_ext_vir_instance i,
						resourcepool p 
					where m.type = 'VIR_INSTANCE' 
						  and m.rnstatus = 'NORMAL'
						  and m.id = n.nodeId
						  and m.id = i.nodeId
			  			  and i.region = p.regionName
				union all 
				select m.hostname,m.id,n.osIpAddress,x.poolId
					from rn_base m,
						rn_ext_osinfo n,
						rn_ext_physical x
					where m.type = 'COMPUTE' 
						  and (m.subType = 'VIRTUAL' or m.subType = 'PHYSICAL')
						  and m.rnstatus = 'NORMAL'
						  and m.id = n.nodeId
						  and x.nodeId = m.id
			) t 
			where concat(',',#{poolIds},',') like concat('%,',t.poolId,',%') 
		]]>
		<where>
			<if test="poolIds">
				and concat(',',#{poolIds},',') like concat('%,',t.poolId,',%')
			</if>
			<if test="nodeIds">
				and concat(',',#{nodeIds},',') like concat('%,',t.id,',%') 
			</if>
			<if test="ipAddress != null">
				and t.osIpAddress = #{ipAddress}
			</if>
			<if test="nodeId != null">
				and t.id = #{nodeId}
			</if>
		</where>
	</select>
	<select id="selectResourceEventDispatchStrategyOpenapiNetwork" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select * from openapi_network t 
		]]>
		<where>
			<if test="nodeIds != null">
				and concat(',',#{nodeIds},',') like concat('%,',t.eqp_id,',%')
			</if>
			<if test="ipAddress != null">
				and t.ip = #{ipAddress}
			</if>
		</where>
	</select>
	
	<select id="selectThirdAlarmSystemCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select count(*) totalSize from oss_third_alarm_system a
		]]>
		<where>
			<if test="loginId != null">
				and not exists (select * from oss_resource_event_dispatch_sms b where a.id = b.id  and b.smsUser = #{loginId}) 
			</if>
			<if test="id != null">
				and id = #{id}
			</if>
			<if test="type != null">
				and type = #{type}
			</if>
		</where>
	</select>
	<select id="selectThirdAlarmSystem" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.*,
				(select dictName from oss_dict b where b.dictId = a.type and b.dictType = 'THIRD_ALARM_SYSTEM') typeName,
				(select dictName from oss_dict c where c.dictId = a.source and c.dictType = 'THIRD_ALARM_SYSTEM_SOURCE') sourceName
			from oss_third_alarm_system a 
		]]>
		<where>
			<if test="loginId != null">
				and not exists (select * from oss_resource_event_dispatch_sms b where a.id = b.id  and b.smsUser = #{loginId}) 
			</if>
			<if test="id != null">
				and id = #{id}
			</if>
			<if test="type != null">
				and type = #{type}
			</if>
		</where>
		<if test="beginIndex != null">
			limit #{beginIndex},#{perPage}
		</if>
	</select>
	<delete id="deleteThirdAlarmSystem" parameterType="java.util.HashMap">
		<![CDATA[
			delete from oss_third_alarm_system where id = #{id}
		]]>
	</delete>
	<update id="updateThirdAlarmSystem" parameterType="java.util.HashMap">
		<![CDATA[
			update oss_third_alarm_system set id = #{id}
		]]>
		<if test="type != null">
			, type = #{type}
		</if>
		<if test="source != null">
			, source = #{source}
		</if>
		<if test="ipAddress != null">
			, ipAddress = #{ipAddress}
		</if>
		<if test="description != null">
			, description = #{description}
		</if>
		<![CDATA[
			where id = #{id}
		]]>
	</update>
	<insert id="insertThirdAlarmSystem" parameterType="java.util.HashMap">
		<![CDATA[
			insert into oss_third_alarm_system (type,source,ipAddress,description) values(#{type},#{source},#{ipAddress},#{description})
		]]>
	</insert>
	
	<select id="selectSystemUserThirdAlarmSystemCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select count(*) totalSize 
			from oss_resource_event_dispatch_sms a 
			join oss_third_alarm_system b on a.id = b.id 
		]]>
		<where>
			<if test="id != null">
				and a.id = #{id}
			</if>
			<if test="loginId != null">
				and a.smsUser = #{loginId}
			</if>
			<if test="type != null">
				and a.type = #{type}
			</if>
		</where>
	</select>
	<select id="selectSystemUserThirdAlarmSystem" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.*,b.ipAddress,b.description,
			(select dictName from oss_dict c where c.dictId = b.type and c.dictType = 'THIRD_ALARM_SYSTEM') typeName,
			(select dictName from oss_dict d where d.dictId = b.source and d.dictType = 'THIRD_ALARM_SYSTEM_SOURCE') sourceName
			from oss_resource_event_dispatch_sms a 
			join oss_third_alarm_system b on a.id = b.id 
		]]>
		<where>
			<if test="id != null">
				and a.id = #{id}
			</if>
			<if test="loginId != null">
				and a.smsUser = #{loginId}
			</if>
			<if test="type != null">
				and a.type = #{type}
			</if>
		</where>
		<if test="beginIndex != null">
			limit #{beginIndex},#{perPage}
		</if>
	</select>
	<insert id="insertSystemUserThirdAlarmSystem" parameterType="java.util.HashMap">
		<![CDATA[
			insert into oss_resource_event_dispatch_sms 
			select id, type, source, #{loginId} loginId from oss_third_alarm_system a 
			where concat(',',#{ids},',') like concat('%,',id,',%') and not exists (select * from oss_resource_event_dispatch_sms b where a.id = b.id  and b.smsUser = #{loginId})
		]]>
	</insert>
	<delete id="deleteSystemUserThirdAlarmSystem" parameterType="java.util.HashMap">
		<![CDATA[
			delete from oss_resource_event_dispatch_sms  
		]]>
		<where>
			<if test="id != null">
				and id = #{id}
			</if>
			<if test="type != null">
				and type = #{type}
			</if>
			<if test="loginId != null">
				and smsUser = #{loginId}
			</if>
		</where>
	</delete>
	
	<select id="selectTargetInfoByAgentId" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
		   select a.nodeId targetId,c.type targetType,c.subtype targetSubType,b.hostId,c.hostName
		   from rn_ext_systeminfo a,
		        rn_base c,
		        monitornodehost b
		   where a.agentId = #{agentId}
		      and a.nodeid = b.nodeId
		      and c.id = a.nodeId
		]]>
	</select>
	
	<select id="selectResourceOsSecurity" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select * 
			from rn_ext_os_security 
			where minion in (select agentId from rn_ext_systeminfo where nodeid = #{nodeId}) and minionUser = #{userName}
		]]>
	</select>
	
	<insert id="insertRNGroup" parameterType="java.util.HashMap">
		<![CDATA[
			insert into rn_group(name,type,createUser,createTs)
			values(#{name},#{type},#{loginId},LOCALTIME())
		]]>
		<selectKey keyProperty="groupId" resultType="int" order="AFTER">
			select LAST_INSERT_ID()
		</selectKey>
	</insert>
	<select id="selectRNGroup" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select * from rn_group a
		]]>
		<where>
			and a.groupStatus = 'NORMAL'
			<if test="id != null">
				and a.id = #{id}
			</if>
			<if test="fullName != null">
				<![CDATA[ and a.name = #{fullName}]]>
			</if>
			<if test="name != null">
				<![CDATA[ and a.name like concat('%',#{name},'%')]]>
			</if>
			<if test="beginIndex != null">
				limit #{beginIndex},#{perPage}
			</if>
		</where>
	</select>
	<select id="selectRNGroupCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select count(*) totalSize from rn_group a
		]]>
		<where>
			and a.groupStatus = 'NORMAL'
			<if test="id != null">
				and a.id = #{id}
			</if>
			<if test="fullName != null">
				<![CDATA[ and a.name = #{fullName}]]>
			</if>
			<if test="name != null">
				<![CDATA[ and a.name like concat('%',#{name},'%')]]>
			</if>
		</where>
	</select>
	<update id="updateRNGroup" parameterType="java.util.HashMap">
		<![CDATA[
			update rn_group set name = #{name} where id = #{id}
		]]>
	</update>
	<delete id="deleteRNGroup" parameterType="java.util.HashMap">
		<![CDATA[
			delete from rn_group where id = #{id} 
		]]>
	</delete>
	
	<select id="selectDhRooms" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[ select * from  dh_room ]]>
	</select>
	<insert id="insertDhRoom" parameterType="java.util.HashMap">
		<![CDATA[
			insert into dh_room set id=#{id},name=#{name},temperature=#{temperature},humidity=#{humidity},voltage=#{voltage},power=#{power},
									imageName=#{imageName},imageHeight=#{imageHeight},imageWidth=#{imageWidth},remark=#{remark},updateDate=localtime() 
			on duplicate key update id=#{id},name=#{name},temperature=#{temperature},humidity=#{humidity},voltage=#{voltage},power=#{power},
									imageName=#{imageName},imageHeight=#{imageHeight},imageWidth=#{imageWidth},remark=#{remark}
		]]>
	</insert>
	<update id="updateDhRoom" parameterType="java.util.HashMap">
		<![CDATA[
			update dh_room set id = #{id}
		]]>
		<if test="name != null">
			, name = #{name}
		</if>
		<if test="temperature != null">
			, temperature = #{temperature}
		</if>
		<if test="humidity != null">
			, humidity = #{humidity}
		</if>
		<if test="voltage != null">
			, voltage = #{voltage}
		</if>
		<if test="power != null">
			, power = #{power}
		</if>
		<if test="imageName != null">
			, imageName = #{imageName}
		</if>
		<if test="imageHeight != null">
			, imageHeight = #{imageHeight}
		</if>
		<if test="imageWidth != null">
			, imageWidth = #{imageWidth}
		</if>
		<if test="remark != null">
			, remark = #{remark}
		</if>
		<![CDATA[
			where id = #{id}
		]]>
	</update>
	<insert id="insertDhRoomHistory" parameterType="java.util.HashMap">
		<![CDATA[
			insert into ${table_name} (id,name,temperature,humidity,voltage,power,createDate) 
			values (#{id},#{name},#{temperature},#{humidity},#{voltage},#{power},#{createDate})
		]]>
	</insert>
	<select id="selectDhRoomDevices" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[ 
			select * from dh_device where roomId = #{roomId} and typeId = #{typeId} 
		]]>
	</select>
	<insert id="insertDhRoomDevice" parameterType="java.util.HashMap">
		<![CDATA[
			insert into dh_device set id=#{id},roomId=#{roomId},typeId=#{typeId},name=#{name},value=#{value},updateDate=localtime() 
			on duplicate key update id=#{id},roomId=#{roomId},typeId=#{typeId},name=#{name},value=#{value}
		]]>
	</insert>
	<update id="updateDhRoomDevice" parameterType="java.util.HashMap">
		<![CDATA[
			update dh_device set typeId = #{typeId}
		]]>
		<if test="name != null">
			, name = #{name}
		</if>
		<if test="value != null">
			, value = #{value}
		</if>
		<![CDATA[
			where typeId = #{typeId} and roomId = #{roomId}
		]]>
	</update>
	<insert id="insertDhRoomDeviceHistory" parameterType="java.util.HashMap">
		<![CDATA[
			insert into ${table_name} (roomId,typeId,name,value,createDate) 
			values (#{roomId},#{typeId},#{name},#{value},#{createDate})
		]]>
	</insert>
	<select id="selectDhEvents" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[ 
			select a.*,b.name roomName,c.name deviceName,d.id deviceTypeId
			from dh_event a 
			join dh_room b on a.roomId = b.id
			join dh_device c on a.deviceId = c.id
			join dh_device_type d on c.typeId = d.id 
		]]>
		<where>
			<if test="dealStatus == null and dealStatusList == null">
				and a.dealStatus = 0 
			</if>
			<if test="dealStatusList != null">
				and a.dealStatus in (${dealStatusList})
			</if>
			<if test="checkTime != null">
				and (hour(timediff(now(),a.dealValue)) >= 1 or hour(timediff(now(),a.dealValue)) >= 24) 
			</if>
		</where>
		<![CDATA[ 
			group by d.id 
			order by createDate desc
		]]>
	</select>
	<insert id="insertDhEvent" parameterType="java.util.HashMap">
		<![CDATA[
			insert into dh_event(deviceId,roomId,name,value,status,createDate) 
			value (#{deviceId},#{roomId},#{name},#{value},#{status},localtime())
		]]>
	</insert>
	<update id="updateDhEvent" parameterType="java.util.HashMap">
		<![CDATA[
			update dh_event set id = #{id}
		]]>
		<if test="dealValue != null">
			, dealValue = #{dealValue}
		</if>
		<![CDATA[
			where id = #{id}
		]]>
	</update>
	<delete id="deleteDhEvent" parameterType="java.util.HashMap">
		<![CDATA[
			delete from dh_event where id = #{id} 
		]]>
	</delete>
	<insert id="insertDhEventHistory" parameterType="java.util.HashMap">
		<![CDATA[
			insert into dh_event_history (eventId,deviceId,roomId,name,value,status,dealStatus,dealValue,createDate)
			select id eventId,deviceId,roomId,name,value,status,#{dealStatus} dealStatus,#{dealValue} dealValue, localtime() 
			from dh_event where id = #{id}
		]]>
	</insert>
	
	<select id="selectAssetTypeCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select count(*) totalSize from asset_type a 
		]]>
		<where>
			<![CDATA[ and a.status = 'NORMAL' ]]>
			
			<if test="name != null">
				<![CDATA[ 
					and a.name like concat('%',#{name},'%') 
				]]>
			</if>
		</where>
	</select>
	<select id="selectAssetType" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.*,
				   (select count(*) from asset_info d where d.typeId = a.id and d.`status` = 'NORMAL') assetCount,
				   (select count(*) from asset_field_template c where c.propId = a.id and c.propType = 'TYPE' and c.`status` = 'NORMAL') fieldCount 
			from asset_type a 
		]]>
		<where>
			<![CDATA[ and a.status = 'NORMAL' ]]>
			
			<if test="name != null">
				<![CDATA[ 
					and a.name like concat('%',#{name},'%') 
				]]>
			</if>
		</where>
		<if test="beginIndex != null">
			limit #{beginIndex},#{perPage}
		</if>
	</select>
	<insert id="insertAssetType" parameterType="java.util.HashMap">
		<![CDATA[
			insert into asset_type(name) values (#{name})
		]]>
	</insert>
	<update id="updateAssetType" parameterType="java.util.HashMap">
		<![CDATA[
			update asset_type set id = #{id}
		]]>
		<if test="name != null">
			, name = #{name}
		</if>
		<![CDATA[
			where id = #{id}
		]]>
	</update>
	<delete id="deleteAssetType" parameterType="java.util.HashMap">
		<![CDATA[
			update asset_type set status = 'DELETED' where id = #{id}
		]]>
	</delete>
	<select id="selectAssetLifecyclesCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select count(*) totalSize from asset_lifecycle a 
		]]>
		<where>
			<![CDATA[ and a.status = 'NORMAL' ]]>
			
			<if test="name != null">
				<![CDATA[ 
					and a.name like concat('%',#{name},'%') 
				]]>
			</if>
			<if test="type != null">
				and a.type = #{type}
			</if>
		</where>
	</select>
	<select id="selectAssetLifecycles" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.*,b.name typeName,
					(select count(*) from asset_field_template c where c.propId = a.id and c.propType = 'LIFECYCLE' and c.`status` = 'NORMAL') fieldCount 
			from asset_lifecycle a 
			join asset_type b on a.type = b.id
		]]>
		<where>
			<![CDATA[ and a.status = 'NORMAL' ]]>
			
			<if test="name != null">
				<![CDATA[ 
					and a.name like concat('%',#{name},'%') 
				]]>
			</if>
			<if test="type != null">
				and a.type = #{type}
			</if>
		</where>
		<if test="beginIndex != null">
			limit #{beginIndex},#{perPage}
		</if>
	</select>
	<insert id="insertAssetLifecycle" parameterType="java.util.HashMap">
		<![CDATA[
			insert into asset_lifecycle(name,type) values (#{name},#{type})
		]]>
	</insert>
	<update id="updateAssetLifecycle" parameterType="java.util.HashMap">
		<![CDATA[
			update asset_lifecycle set id = #{id}
		]]>
		<if test="name != null">
			, name = #{name}
		</if>
		<if test="type != null">
			, type = #{type}
		</if>
		<![CDATA[
			where id = #{id}
		]]>
	</update>
	<delete id="deleteAssetLifecycle" parameterType="java.util.HashMap">
		<![CDATA[
			update asset_lifecycle set status = 'DELETED' where id = #{id}
		]]>
	</delete>
	<select id="selectAssetInfoLifecycleGroups" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select e.updateDate 
				from asset_info a 
				join asset_type b on b.id = a.typeId
				join asset_lifecycle c on c.type = b.id and c.`status` = 'NORMAL'
				join asset_field_template d on d.propId = c.id and d.propType = 'LIFECYCLE' and d.`status` = 'NORMAL'
				join asset_info_field_template_instance e on e.fieldId = d.id and e.assetId = a.id
				
				where a.id = #{id} group by e.updateDate
		]]>
	</select>
	<select id="selectAssetInfoLifecycleValues" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select group_concat(b.fieldId,'#',a.fieldName,'#',ifnull(b.value,'')) lifeCycleFieldValues 
				from asset_field_template a 
				join asset_info_field_template_instance b on a.id = b.fieldId 
				where a.`status` = 'NORMAL' and a.propType = 'LIFECYCLE' and b.updateDate = #{updateDate}
				and b.assetId = #{assetId}
		]]>
	</select>
	
	<select id="selectAssetFieldTemplatesCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select count(*) totalSize from asset_field_template a 
		]]>
		<where>
			<if test="key != null">
				<![CDATA[ 
					and a.label like concat('%',#{key},'%') 
				]]>
			</if>
			<if test="type != null">
				and a.type = #{type} 
			</if>
			
			<if test="propType != null">
				and a.propType = #{propType} 
			</if>
			
			<if test="propId != null">
				and a.propId = #{propId} 
			</if>
			
			<if test="propType == 'LIFECYCLE' and typeId != null">
				and a.propId in (select e.id from asset_lifecycle e where e.type = #{typeId} and e.status = 'NORMAL')
			</if>
			<![CDATA[ and a.status = 'NORMAL' ]]>
		</where>
	</select>
	<select id="selectAssetFieldTemplates" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.* from asset_field_template a 
		]]>
		<where>
			<if test="key != null">
				<![CDATA[ 
					and a.label like concat('%',#{key},'%') 
				]]>
			</if>
			<if test="type != null">
				and a.type = #{type} 
			</if>
			
			<if test="propType != null">
				and a.propType = #{propType} 
			</if>
			
			<if test="propId != null">
				and a.propId = #{propId} 
			</if>
			
			<if test="propType == 'LIFECYCLE' and typeId != null">
				and a.propId in (select e.id from asset_lifecycle e where e.type = #{typeId} and e.status = 'NORMAL')
			</if>
			<![CDATA[ and a.status = 'NORMAL' ]]>
		</where>
		<if test="beginIndex != null">
			limit #{beginIndex},#{perPage}
		</if>
	</select>
	<insert id="insertAssetFieldTemplate" parameterType="java.util.HashMap">
		<![CDATA[
			insert into asset_field_template (propId,propType,label,fieldName,type,max,defaultValue,isRequire,isReadonly,`order`) 
			values (#{propId},#{propType},#{label},#{fieldName},#{type},#{max},#{defaultValue},#{isRequire},#{isReadonly},#{order})
		]]>
	</insert>
	<update id="updateAssetFieldTemplate" parameterType="java.util.HashMap">
		<![CDATA[
			update asset_field_template set id = #{id}
		]]>
		<if test="label != null">
			, label = #{label}
		</if>
		<if test="fieldName != null">
			, fieldName = #{fieldName}
		</if>
		<if test="type != null">
			, type = #{type}
		</if>
		<if test="max != null">
			, max = #{max}
		</if>
		<if test="defaultValue != null">
			, defaultValue = #{defaultValue}
		</if>
		<if test="isRequire != null">
			, isRequire = #{isRequire}
		</if>
		<if test="isReadonly != null">
			, isReadonly = #{isReadonly}
		</if>
		<if test="order != null">
			, `order` = #{order}
		</if>
		<![CDATA[
			where id = #{id}
		]]>
	</update>
	<delete id="deleteAssetFieldTemplate" parameterType="java.util.HashMap">
		<![CDATA[
			update asset_field_template set status = 'DELETED' where id = #{id}
		]]>
	</delete>
	<select id="selectAssetInfoCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select count(*) totalSize from asset_info a 
		]]>
		<where>
			<![CDATA[ and a.status = 'NORMAL' ]]>
			
			<if test="id != null">
				and a.id = #{id}
			</if>
			<if test="name != null">
				<![CDATA[ 
					and a.name like concat('%',#{name},'%') 
				]]>
			</if>
			<if test="typeId != null">
				and a.typeId = #{typeId}
			</if>
			<if test="ipAddress != null">
				<![CDATA[ 
					and (concat('.',a.ipAddress,'.') like concat('%.',#{ipAddress},'.%')) 
				]]>
			</if>
		</where>
	</select>
	<select id="selectAssetInfo" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.*,f.fieldValues from asset_info a 
				left join (select b.assetId,a.label,group_concat(b.fieldId,'#',a.fieldName,'#',ifnull(b.value,'')) fieldValues from asset_field_template a 
							join asset_info_field_template_instance b on a.id = b.fieldId 
							where a.`status` = 'NORMAL' and a.propType = 'TYPE' group by b.assetId
						  ) f on a.id = f.assetId
		]]>
		<where>
			<![CDATA[ and a.status = 'NORMAL' ]]>
			
			<if test="id != null">
				and a.id = #{id}
			</if>
			<if test="name != null">
				<![CDATA[ 
					and a.name like concat('%',#{name},'%') 
				]]>
			</if>
			<if test="typeId != null">
				and a.typeId = #{typeId}
			</if>
			<if test="ipAddress != null">
				<![CDATA[ 
					and (concat('.',a.ipAddress,'.') like concat('%.',#{ipAddress},'.%')) 
				]]>
			</if>
		</where>
		<if test="beginIndex != null">
			limit #{beginIndex},#{perPage}
		</if>
	</select>
	<insert id="insertAssetInfo" parameterType="java.util.HashMap">
		<![CDATA[
			insert into asset_info (name,serialNumber,ipAddress,typeId,createDate) values (#{name},#{serialNumber},#{ipAddress},#{typeId},localtime())
		]]>
		<selectKey keyProperty="assetId" resultType="int" order="AFTER">
			select LAST_INSERT_ID()
		</selectKey>
	</insert>
	<update id="updateAssetInfo" parameterType="java.util.HashMap">
		<![CDATA[
			update asset_info set id = #{id}
		]]>
		<if test="name != null">
			, name = #{name}
		</if>
		<if test="serialNumber != null">
			, serialNumber = #{serialNumber}
		</if>
		<if test="ipAddress != null">
			, ipAddress = #{ipAddress}
		</if>
		<![CDATA[
			where id = #{id}
		]]>
	</update>
	<delete id="deleteAssetInfo" parameterType="java.util.HashMap">
		<![CDATA[
			update asset_info set status = 'DELETED' where id = #{id}
		]]>
	</delete>
	<select id="selectAssetInfoFieldTemplateInstances" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.*,b.label from asset_info_field_template_instance a join asset_field_template b on a.fieldId = b.id where a.assetId = #{id} 
		]]>
	</select>
	<insert id="insertAssetInfoFieldTemplateInstance" parameterType="java.util.HashMap">
		<![CDATA[
			insert into asset_info_field_template_instance(assetId,fieldId,value,updateDate) values 
		 ]]>
		 <foreach collection="fieldValues" index="index" item="item" open=" " separator="," close=" ">
   			(#{assetId},#{item.fieldId},#{item.value},localtime())
  		 </foreach>
	</insert>
	<update id="updateAssetInfoFieldTemplateInstance" parameterType="java.util.HashMap">
		<foreach collection="fieldValues" index="index" item="item" open=" " separator=";" close=" ">
			<![CDATA[
				update asset_info_field_template_instance set value = #{item.value} where assetId = #{id} and fieldId = #{item.fieldId}
			]]>
  		 </foreach>
	</update>
	<select id="selectAssetOverall" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.*,b.*,c.* from 
			(select count(*) typeCount from asset_type where `status` = 'NORMAL') a ,
			(select count(*) lifecycleCount from asset_lifecycle where `status` = 'NORMAL') b ,
			(select count(*) assetCount from asset_info where `status` = 'NORMAL') c
		]]>
	</select>
	<select id="selectAssetNoteLifecycle" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.* from asset_field_template a 
		]]>
		<where>
			<![CDATA[ and propType = #{propType} and a.status = 'NORMAL' 
			and propId in (select id from asset_lifecycle where type=#{typeId} and `status` = 'NORMAL' ) ]]>
		</where>
	</select>
	
	
	<insert id="insertAssetInfoLog" parameterType="java.util.HashMap">
		<![CDATA[
			insert into asset_log (assetId,content,loginId,type,createDate) values (#{assetId},#{content},#{loginId},#{type},localtime())
		]]>
	</insert>
	<select id="selectAssetInfoLogsCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select count(*) totalSize from (
				select date_format(a.createDate,'%Y-%m-%d') createDate 
				from asset_log a
				join asset_info b on a.assetId = b.id
				join asset_type c on b.typeId = c.id
				]]>
				<if test="typeId != null">
					and c.id = #{typeId}
				</if>
				<if test="key != null">
					and (b.name like concat('%',#{key},'%') or a.content like concat('%',#{key},'%'))
				</if>
				<![CDATA[
				group by date_format(a.createDate,'%Y-%m-%d')
			) a 
		]]>
	</select>
	<select id="selectAssetInfoLogs" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.* from (
				select date_format(a.createDate,'%Y-%m-%d') createDate 
				from asset_log a 
				join asset_info b on a.assetId = b.id
				join asset_type c on b.typeId = c.id
				]]>
				<if test="typeId != null">
					and c.id = #{typeId}
				</if>
				<if test="key != null">
					and (b.name like concat('%',#{key},'%') or a.content like concat('%',#{key},'%'))
				</if>
				<![CDATA[
				group by date_format(createDate,'%Y-%m-%d')
			) a 
		]]>
		
		<![CDATA[ order by a.createDate desc ]]>
		
		<if test="beginIndex != null">
			limit #{beginIndex},#{perPage}
		</if>
	</select>
	<select id="selectAssetInfoLogDetails" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.*,b.name assetName,c.name typeName from asset_log a 
			join asset_info b on a.assetId = b.id
			join asset_type c on b.typeId = c.id
		]]>
		<where>
			<if test="typeId != null">
				and c.id = #{typeId}
			</if>
			<if test="key != null">
				and (b.name like concat('%',#{key},'%') or a.content like concat('%',#{key},'%'))
			</if>
			<if test="startCreateDate != null">
				<![CDATA[ and a.createDate >= #{startCreateDate}]]>
			</if>
			<if test="endCreateDate != null">
				<![CDATA[ and a.createDate <= #{endCreateDate}]]>
			</if>
		</where>
		<![CDATA[ order by a.createDate desc ]]>
	</select>
	
	<insert id="insertMonitorHost" parameterType="java.util.HashMap">
		<![CDATA[
			insert into monitor_host(id,name,ipAddress,port,cpu,memory,disk,systemType,systemSubType,agentId,zabbixAgentStatus,connectStatus,createDate) 
			values (#{id},#{name},#{ipAddress},#{port},#{cpu},#{memory},#{disk},#{systemType},#{systemSubType},#{agentId},#{zabbixAgentStatus},#{connectStatus},localtime())
		]]>
	</insert>
	<insert id="insertGroup" parameterType="java.util.HashMap">
		<![CDATA[
			insert into rn_group_relation(resourceId,groupId,resourceType) 
			values (#{id},#{groupId},'MONITOR_HOST')
		]]>
	</insert>
	<select id="selectMonitorHostCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select count(*) totalSize from monitor_host a 
		]]>
		<where>
			<![CDATA[ and a.status = 'NORMAL' ]]>
			<if test="id != null">
				and a.id = #{id}
			</if>
			<if test="key != null">
				and (a.name like concat('%',#{key},'%') or a.ipAddress like concat('%',#{key},'%'))
			</if>
			<if test="ipAddress != null">
				<![CDATA[ 
					and (concat('.',a.ipAddress,'.') like concat('%.',#{ipAddress},'.%')) 
				]]>
			</if>
		</where>
	</select>
	<select id="selectMonitorHost" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select d.groupId,a.*, ifnull(h.hostId,-1) monitorHostId, 
			(select count(*) from zabbix_event c where c.hostId = h.hostId) eventCount 
			from monitor_host a 
			left join monitornodehost h on a.id = h.nodeId 
			left join rn_group_relation d on a.id = d.resourceId
		]]>
		<where>
			<![CDATA[ and a.status = 'NORMAL' ]]>
			<if test="id != null">
				and a.id = #{id}
			</if>
			<if test="key != null">
				and (a.name like concat('%',#{key},'%') or a.ipAddress like concat('%',#{key},'%'))
			</if>
			<if test="ipAddress != null">
				<![CDATA[ 
					and (concat('.',a.ipAddress,'.') like concat('%.',#{ipAddress},'.%')) 
				]]>
			</if>
		</where>
		
		<![CDATA[ order by a.createDate desc ]]>
		
		<if test="beginIndex != null">
			limit #{beginIndex},#{perPage}
		</if>
	</select>
	<delete id="deleteMonitorHost" parameterType="java.util.HashMap">
		<![CDATA[
			update monitor_host set status = 'DELETED' where id = #{id}
		]]>
	</delete>
	<update id="updateGroup" parameterType="java.util.HashMap">
		<![CDATA[
			update rn_group_relation set resourceId = #{id}
		]]>
		<if test="groupId != null">
			,groupId = #{groupId}
		</if>
		<![CDATA[
		 	where resourceId = #{id} 
		]]>
	</update>
	<update id="updateMonitorHost" parameterType="java.util.HashMap">
		<![CDATA[
			update monitor_host set id = #{id}
		]]>
		<if test="name != null">
			,name = #{name}
		</if>
		<if test="ipAddress != null">
			,ipAddress = #{ipAddress}
		</if>
		<if test="port != null">
			,port = #{port}
		</if>
		<if test="cpu != null">
			,cpu = #{cpu}
		</if>
		<if test="memory != null">
			,memory = #{memory}
		</if>
		<if test="disk != null">
			,disk = #{disk}
		</if>
		<if test="systemType != null">
			,systemType = #{systemType}
		</if>
		<if test="systemSubType != null">
			,systemSubType = #{systemSubType}
		</if>
		<if test="agentId != null">
			,agentId = #{agentId}
		</if>
		<if test="zabbixAgentStatus != null">
			,zabbixAgentStatus = #{zabbixAgentStatus}
		</if>
		<![CDATA[
		 	where id = #{id} 
		]]>
	</update>
	<select id="selectMonitorHostProcesses" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.* from monitor_host_process a where a.nodeId = #{nodeId} 
		]]>
		<![CDATA[ order by a.id desc ]]>
	</select>
	<insert id="insertMonitorHostProcess" parameterType="java.util.HashMap">
		<![CDATA[
			insert into monitor_host_process(nodeId,name) 
			values (#{nodeId},#{name})
		]]>
	</insert>
	<delete id="deleteMonitorHostProcess" parameterType="java.util.HashMap">
		<![CDATA[
			delete from monitor_host_process where id = #{id}
		]]>
	</delete>
	
	<select id="selectMonitorHostFilesystemes" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.* from monitor_host_filesystem a where a.nodeId = #{nodeId} 
		]]>
		<![CDATA[ order by a.id desc ]]>
	</select>
	<insert id="insertMonitorHostfilesystem" parameterType="java.util.HashMap">
	 <![CDATA[
			insert into monitor_host_filesystem(nodeId,name) 
			values (#{nodeId},#{name})
		]]>
	</insert>
	
	<delete id="deleteMonitorfilesystem" parameterType="java.util.HashMap">
	   <![CDATA[
			delete from monitor_host_filesystem where id = #{id}
		]]>
	</delete>
	
	<select id="selectMonitorWebScenesCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select count(*) totalSize from monitor_web_scene a
		]]>
		<where>
			<![CDATA[ and a.status = 'NORMAL' ]]>
			<if test="id != null">
				and a.id = #{id}
			</if>
			<if test="key != null">
				and (a.name like concat('%',#{key},'%') or a.url like concat('%',#{key},'%'))
			</if>
		</where>
	</select>
	<select id="selectMonitorWebScenes" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.* from monitor_web_scene a
		]]>
		<where>
			<![CDATA[ and a.status = 'NORMAL' ]]>
			<if test="id != null">
				and a.id = #{id}
			</if>
			<if test="key != null">
				and (a.name like concat('%',#{key},'%') or a.url like concat('%',#{key},'%'))
			</if>
		</where>
		
		<![CDATA[ order by a.createDate desc ]]>
		
		<if test="beginIndex != null">
			limit #{beginIndex},#{perPage}
		</if>
	</select>
	
	<insert id="insertMonitorWebScene" parameterType="java.util.HashMap">
		<![CDATA[
		insert into monitor_web_scene(httpTestId,name,host,url,type,frequency,passageway,timeout,createDate,disabled)
		values (#{httpTestId},#{name},#{host},#{url},#{type},#{frequency},#{passageway},#{timeout},now(),#{disabled})
		]]>
	</insert>
	
	<update id="updateMonitorWebScene" parameterType="java.util.HashMap">
		<![CDATA[
			update monitor_web_scene set httpTestId=#{httptestid}
		]]>
		<if test="name != null">
			,name = #{name}
		</if>
		<if test="url != null">
			,url = #{url}
		</if>
		<if test="type != null">
			,type = #{type}
		</if>
		<if test="delay != null">
			,delay = #{delay}
		</if>
		<if test="passageway != null">
			,passageway = #{passageway}
		</if>
		<if test="timeout != null">
			,timeout = #{timeout}
		</if>
		<if test="disabled != null">
			,disabled = #{disabled}
		</if>
		<![CDATA[
		 	where httpTestId = #{httptestid} 
		]]>
	</update>
	
	<delete id="deleteMonitorWebScene" parameterType="java.util.HashMap">
		<![CDATA[
			update monitor_web_scene set status='DELETE' where id=#{id} 
		]]>
	</delete>
	
	<select id="selectMonitorProcessGroup" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select * from monitor_process_group
		]]>
	</select>
	
	 <insert id="insertMonitoreventnotification" parameterType="java.util.HashMap">
	 <![CDATA[
			insert into monitor_event_notification(triggerId,notificationType,remark)
			values(#{triggerId},#{notificationType},#{remark})
		]]>
	</insert>
	
	 <update id="updateMonitorEventnotification" parameterType="java.util.HashMap">
		<![CDATA[
			update monitor_event_notification set notificationType = #{notificationType}
			]]>
		
		<if test="remark = URL_CALLBACK">
			,remark = #{remark}
		</if>
		
		<![CDATA[
		 	where triggerId = #{triggerId}
		]]>
	</update>

      <delete id="deleteMonitorEventNotification" parameterType="java.util.HashMap">
		<![CDATA[
			delete from monitor_event_notification where triggerId = #{triggerId}
		]]>
	</delete>
      
      <select id="selectMonitorEventNotification" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.* from monitor_event_notification a 
		]]>
		<where>
			<if test="hostId != null">
				and a.hostId = #{hostId}
			</if>
			<if test="triggerId != null">
				and a.triggerId = #{triggerId}
			</if>
		</where>
	</select>
	
	<select id="selectMonitorNotification" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.*,b.* from zabbix_event_notification a , zabbix_event b where a.eventId = b.eventId
		]]>
		<if test="eventId != null">
			and a.eventId = #{eventId} 
		</if>
		<if test="notificationType != null">
			<![CDATA[ and a.notificationType = #{notificationType} ]]>
		</if>
		<if test="keyWord != null">
			<![CDATA[ and a.notificationContent like concat('%',#{keyWord},'%') ]]>
		</if>
		<if test="beginIndex != null">
			limit #{beginIndex},#{perPage}
		</if>
	</select>
	<select id="selectMonitorNotificationCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select count(*) totalSize from zabbix_event_notification a , zabbix_event b where a.eventId = b.eventId
		]]>
		<if test="eventId != null">
			and a.eventId = #{eventId} 
		</if>
		<if test="notificationType != null">
			<![CDATA[ and a.notificationType = #{notificationType} ]]>
		</if>
		<if test="keyWord != null">
			<![CDATA[ and a.notificationContent like concat('%',#{keyWord},'%') ]]>
		</if>
	</select>
	
	<insert id="insertZabbixEventNotification" parameterType="java.util.HashMap">
	 <![CDATA[
			insert into zabbix_event_notification(eventId,notificationType,notificationContent,createDate)
			values(#{eventId},#{notificationType},#{notificationContent},localtime())
		]]>
	</insert>
	
	<select id="selectMonitorNetwork" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select * from monitor_network 		
		]]>
		<where>
		<if test="type != null">
			and type = #{type}
		</if>
		<if test="key != null">
			and name like concat('%',#{key},'%')
		</if>
		</where>
	</select>
	
	<insert id="insertMonitorNetwork" parameterType="java.util.HashMap">
	 <![CDATA[
			insert into monitor_network(name,ipAddress,type,model,monitorStatus,snmpVersion,snmpPort,
			snmpUser,snmpPassword,sshPort,sshUser,sshPassword,status)
			values(#{name},#{ipAddress},#{type},#{model},#{monitorStatus},#{snmpVersion},#{snmpPort},
			#{snmpUser},#{snmpPassword},#{sshPort},#{sshUser},#{sshPassword},#{status})
		]]>
	</insert>
	
	<update id="updateMonitorNetwork" parameterType="java.util.HashMap">
		<![CDATA[
			update monitor_network set id = #{id} 
		]]>
		<if test="name != null">
			,name = #{name}
		</if>
		<if test="ipAddress != null">
			,ipAddress = #{ipAddress}
		</if>
		<if test="type != null">
			,type = #{type}
		</if>
		<if test="model != null">
			,model = #{model}
		</if>
		<if test="monitorStatus != null">
			,monitorStatus = #{monitorStatus}
		</if>
		<if test="snmpVersion != null">
			,snmpVersion = #{snmpVersion}
		</if>
		<if test="snmpPort != null">
			,snmpPort = #{snmpPort}
		</if>
		<if test="snmpUser != null">
			,snmpUser = #{snmpUser}
		</if>
		<if test="snmpPassword != null">
			,snmpPassword = #{snmpPassword}
		</if>
		<if test="sshPort != null">
			,sshPort = #{sshPort}
		</if>
		<if test="sshUser != null">
			,sshUser = #{sshUser}
		</if>
		<if test="sshPassword != null">
			,sshPassword = #{sshPassword}
		</if>
		<if test="status != null">
			,status = #{status}
		</if>
		<![CDATA[
		 	where id = #{id}
		]]>
	</update>
	
	<delete id="deleteMonitorNetwork" parameterType="java.util.HashMap">
		<![CDATA[
			delete from monitor_network where id = #{id}
		]]>
	</delete>
	
     <select id="selectDhRoomHistory" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select * from dh_room_history_${month} 
		]]>
		<where>
		<if test ="beforetime != null">
			<![CDATA[ and createDate >= #{beforetime} ]]>
		</if>
		<if test ="createDate != null">
			 <![CDATA[ and createDate <= #{createDate} ]]>
		</if>
		</where>
	 </select>	
	 <select id="selectRNExtOsEnvironment" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.* from rn_ext_os_environment a where a.nodeId = #{nodeId} 
		]]>
		<if test="nodeType != null">
			and a.nodeType = #{nodeType}
		</if>
		<if test="type != null">
			and a.type = #{type}
		</if>
		<if test="itemId != null">
			and a.id = #{itemId}
		</if>
		
		<if test="beginIndex != null">
			limit #{beginIndex},#{perPage}
		</if>
	</select>
	
	<select id="selectRNExtOsEnvironmentCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			SELECT count(*) totalSize from rn_ext_os_environment a where a.nodeId = #{nodeId} 
		]]>
		<if test="nodeType != null">
			and a.nodeType = #{nodeType}
		</if>
		<if test="type != null">
			and a.type = #{type}
		</if>
		<if test="itemId != null">
			and a.id = #{itemId}
		</if>
	</select>
	
	<select id="selectRNExtDatastore" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			select a.* from rn_ext_datastore a where a.nodeId = #{nodeId} 
		]]>
		<if test="nodeType != null">
			and a.nodeType = #{nodeType}
		</if>
		<if test="itemId != null">
			and a.id = #{itemId}
		</if>
		
		<if test="beginIndex != null">
			limit #{beginIndex},#{perPage}
		</if>
	</select>
	
	<select id="selectRNExtDatastoreCount" parameterType="java.util.HashMap" resultType="java.util.LinkedHashMap">
		<![CDATA[
			SELECT count(*) totalSize from rn_ext_datastore a where a.nodeId = #{nodeId} 
		]]>
		<if test="nodeType != null">
			and a.nodeType = #{nodeType}
		</if>
		<if test="itemId != null">
			and a.id = #{itemId}
		</if>
	</select>
	
	
</mapper>
